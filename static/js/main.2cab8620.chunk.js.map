{"version":3,"sources":["notifications/client.js","ipc/client.js","stores/PreferencesStore.js","services/AlgorithmUtils.js","stores/GraphStore.js","stores/ImportStore.js","stores/ProjectStore.js","stores/SearchStore.js","stores/index.js","components/PreferencesDialog.jsx","components/utils/Collapsable.jsx","components/utils/CommonItemRenderer.jsx","components/utils/SimpleSelect.jsx","components/PostImportOptions.jsx","components/ImportDialog.jsx","components/GEXFImportDialog.jsx","components/OpenDialog.jsx","components/NewProjectDialog.jsx","components/ProjectDetailDialog.jsx","components/SaveSnapshotDialog.jsx","components/RenameSnapshotDialog.jsx","components/OpenSnapshotDialog.jsx","components/ShareDialog.jsx","components/StatisticsDialog.jsx","components/HelpDialog.jsx","components/NodeTable.jsx","components/NeighborDialog.jsx","components/DataSheetDialog.jsx","components/Dialogs.jsx","components/Navbar.jsx","components/WorkspaceView.jsx","visualizers/ThreeJSVis.jsx","components/panels/GlobalPanel.jsx","components/utils/SwitchCollapsable.jsx","components/panels/SelectionPanel.jsx","components/panels/NodesPanel.jsx","components/panels/LabelsPanel.jsx","components/panels/NodeDetailPanel.jsx","components/Legends.jsx","components/StatusBar.jsx","components/panels/SelectionActionPanel.jsx","components/FloatingCards.jsx","app.jsx","index.js","constants/index.js","graph-frontend/src/structure/node.js","graph-frontend/include/THREE.MeshLine.js","graph-frontend/index.js","images/argologo.png","graph-frontend/src/imports.js","graph-frontend/src/process.js","graph-frontend/include/QuickHull.js","graph-frontend/include/ConvexGeometry.js","graph-frontend/include/CSS3DRenderer.js","graph-frontend/include/OrbitControls.js","graph-frontend/src/utils/utils.js","graph-frontend/src/setup.js","graph-frontend/src/addremove.js","graph-frontend/src/highlighting.js","graph-frontend/src/select.js","graph-frontend/src/mouse.js","graph-frontend/src/modify.js","graph-frontend/src/draw.js","graph-frontend/src/api.js","graph-frontend/src/update.js"],"names":["toaster","Toaster","create","position","Position","TOP","ipcRenderer","send","eventString","console","log","requestChooseGraphFile","CHOOSE_GRAPH_FILE","requestChooseStateFile","CHOOSE_STATE_FILE","requestOpen","OPEN_GRAPH","appState","import","graphFile","stateFile","requestImportGraphFromCSV","hasNodeFile","delimiter","newProjectName","loading","importConfig","nodes","path","nodeFile","hasColumns","columns","toJS","mapping","edges","edgeFile","createMissing","IMPORT_GRAPH","importGraphFromCSV","then","graph","postImportFilter","rawGraph","runInAction","metadata","setUpFrame","initialGlobalConfig","overrides","Map","dialogOpen","preferences","darkMode","frame","toggleDark","minimapShowing","showMiniMap","hideMiniMap","turnOffLabelCSSRenderer","requestImportGraphFromGexf","importGraphFromGexf","gexfDialogOpen","readCSV","fileObject","hasHeader","a","file","reader","FileReader","readAsText","Promise","resolve","reject","onload","content","result","parse","comment","trim","auto_parse","skip_empty_lines","undefined","parseGEXF","parser","DOMParser","xmlDoc","parseFromString","xmlEdges","getElementsByTagName","xmlNodes","xmlAttri","nodeAttri","edgesArr","nodesArr","nodeAttriOrdered","i","l","length","curr","getAttribute","currEdge","s","toString","t","push","source_id","target_id","currNode","id","nodeAttvalues","nodeAttvalue","node","degree","pagerank","node_id","j","value","attributes","attributeIdElementAttribute","attributeId","currAttri","name","readGEXF","config","fromId","parseInt","toId","createGraph","degreeDict","selectedNodeFileFromInput","forEach","addNode","map","n","selectedEdgeFileFromInput","it","from","to","hasNode","edgesSet","Set","addEdge","edgeKey","has","add","addLink","rank","pageRank","snapshotName","fullNodes","fullEdges","Math","floor","nodeProperties","Object","keys","nodeComputed","edgeProperties","selectedGexfFileFromInput","gexfParsed","PreferencesStore","LOAD_USER_CONFIG","userConfig","SAVE_USER_CONFIG","requestSaveUserConfig","this","workspace","workspacePath","isRenderOptionsCardHidden","isStatusBarShowing","isNavbarInMinimalMode","isLegendShowing","observable","IS_IFRAME_WIDGET","jsnx","require","jsgraphs","averageClusteringCoefficient","snapshot","jsnxGraph","Graph","addNodesFrom","addEdgesFrom","e","convertToJsnx","averageClustering","connectedComponents","ConnectedComponents","idDict","g","convertToJSGraph","componentCount","exactGraphDiameter","temp","WeightedDiGraph","Edge","convertToJSGraphWeightedDi","jsg","dia","dijkstra","Dijkstra","f","hasPathTo","pathLength","pathTo","max","GraphStore","ref","colorBy","color","scale","sizeBy","size","min","labelBy","shape","labelSize","labelLength","_lastSelectedSingleNode","nodesShowingLabels","hasGraphLoaded","selectedNodeId","setOfNeighborIds","source","target","filter","nodeids","includes","isHidden","removeNodesByIds","positions","getPositions","global","optionalConfig","getSnapshot","noPosition","noGlobal","noOverride","JSON","stringify","savedStatesStr","savedStates","savedOverrides","entries","k","v","clear","merge","initialNodesShowingLabels","graphFrame","Frame","computedGraph","init","display","ee","on","selectedNodes","data","menu","MenuFactory","children","MenuItemFactory","onClick","toggleSelectedLabels","text","key","unpinSelectedNodes","rightClickedNode","rightClickedNodeId","neighbors","getNeighborNodesFromRawGraph","sort","n1","n2","ids","showNodes","ContextMenu","show","left","pageX","top","pageY","uniq","ret","p","Number","MAX_VALUE","MIN_VALUE","scales","domain","minMax","range","override","get","label","nodeSizeScale","nodeColorScale","nodeCount","graphDensity","sum","averageDegree","computed","action","ImportStore","postImportFilteringOptions","sortedList","setIds","defaultPostImportFilteringOption","selectedPostImportFilteringOption","topN","ready","ProjectStore","SearchStore","search","project","window","loadAndDisplaySnapshotFromURL","url","fetch","method","mode","response","catch","error","message","intent","Intent","DANGER","timeout","loadSnapshotFromURL","snapshotString","split","pop","loadImmediateStates","loadAndDisplaySnapshotFromStrapi","uuid","BACKEND_URL","json","body","loadSnapshotFromStrapi","loadInitialSampleGraph","location","hash","substring","startsWith","decodeURIComponent","alert","saveSnapshotToString","saveImmediateStates","addEventListener","event","autorun","hasGraph","updateGraph","setAllNodesShapeWithOverride","setLabelRelativeSize","setLabelLength","paused","updatePositions","showLabels","searchStr","SEARCH_REQUEST","searchOrder","runSearch","panelOpen","candidates","splice","highlightNodeIds","lines","topLinesAsString","join","onerror","PreferencesDialog","observer","iconName","className","classnames","Classes","DARK","isOpen","onClose","title","checked","onChange","saveUserConfig","PRIMARY","React","Component","onToggle","FILL","MINIMAL","rightIconName","handleClick","item","isActive","ACTIVE","items","onSelect","fill","itemRenderer","CommonItemRenderer","filterable","onItemSelect","PostImportOptions","SimpleSelect","selected","PreviewTable","props","numRows","selectedRegions","values","indexOf","rows","cols","renderCell","ImportDialog","changeAvailable","targetValue","ONLY_EDGE_FILE","setState","available","canImport","state","NODE_AND_EDGE_FILE","renderNodesSelection","Collapsable","nodesOpen","CONTROL_GROUP","INPUT_GROUP","type","DISABLED","files","renderEdgesSelection","edgesOpen","disabled","newDelimiter","updateDelimiter","DIALOG_BODY","renderDelimiterSelection","DIALOG_FOOTER","DIALOG_FOOTER_ACTIONS","projectMetadata","createdDate","Date","toLocaleString","CREATE_NEW_PROJECT","GEXFImportDialog","renderImportButton","OpenDialog","GRAPH_AND_STATE_FILE","renderSelectGraph","INPUT","placeholder","readOnly","renderSelectState","ONLY_GRAPH_FILE","selectedGraph","selectedState","openDialogOpen","NewProjectDialog","isNewProjectNameDuplicate","projects","some","isNewProjectNameEmpty","isValidated","isNewProjectDialogOpen","dir","ProjectDetailDialog","currentProject","isProjectDetailDialogOpen","hasGraphData","interactive","elevation","Card","ELEVATION_TWO","graphDataPath","snapshotPaths","snapshotPath","replace","BUTTON","INTENT_PRIMARY","currentSnapshotName","filePath","DELETE_FILE","SaveSnapshotDialog","isSaveSnapshotDialogOpen","stringCopyOfSnapshot","document","getElementById","select","execCommand","isRenameSnapshotDialogOpen","OpenSnapshotDialog","selectedFile","openSnapshotDialogOpen","NONE","fileAsString","uuidv4","ShareDialog","isShared","isFetching","sharedURL","handleRequest","bind","backendURL","cache","headers","referrer","ok","shareDialogOpen","style","width","StatisticsDialog","statisticsDialogOpen","TABLE","density","diameter","components","HelpDialog","helpDialogOpen","NodeTable","sortBy","sortOrder","filteredNodes","n1val","n2val","n1valAsNum","n2valAsNum","isNaN","n1valAsString","n2valAsString","localeCompare","nodeAttributesOrig","allPropertiesKeyList","hideNodes","NeighborDialog","showMoreBy","showMoreNum","lastSelectedSingleNode","neighborDialogOpen","minWidth","numberToShow","attributeName","hiddenNodes","showNMoreByAttribute","onValueChange","valAsNumber","valAsString","DataSheetDialog","dataSheetDialogOpen","Dialogs","RenameSnapshotDialog","RegularNavbar","NAVBAR","NAVBAR_GROUP","ALIGN_LEFT","href","LOGO_URL","src","argologo","height","NAVBAR_HEADING","SAMPLE_GRAPH_SNAPSHOTS","sample","sampleSnapshotTitle","sampleSnapshotStrapiUuid","BOTTOM","pauseLayout","forceUpdate","sortedNodeList","NAVBAR_DIVIDER","resumeLayout","ALIGN_RIGHT","turnOnMinimalMode","GITHUB_URL","fontSize","textDecoration","icon","faGithub","MinimalNavbar","backgroundColor","role","turnOffMinimalMode","Navbar","WorkspaceView","textAlign","ThreeJSVis","flex","GlobalPanel","timeOutRef","sizeOptionOpen","colorOptionOpen","shapeOptionOpen","CARD","backgroundImage","hex","x1","y1","x2","y2","stopColor","stopOpacity","offset","x","y","stepSize","labelStepSize","b","pluralize","SelectionPanel","twoLayerUpdate","nodeId","set","nodeAttrs","delete","batchTwoLayerUpdate","labelOptionOpen","SwitchCollapsable","overrideConfig","NodesPanel","getRenderedNodes","LabelsPanel","hideAllLabels","showAllLabels","hideSelectedLabels","showSelectedLabels","NodeDetail","TABLE_STRIPED","padding","whiteSpace","nodeAttributeValue","num","parseFloat","toPrecision","formatLongFloat","visibility","direction","itemDirection","itemMargin","shapeMargin","labelFormat","format","r","cx","cy","StatusBar","numHiddenNodes","SelectionActionPanel","numHiddenNeighbor","pinSelectedNodes","WARNING","getSelectedIds","RenderOptionsCard","animate","panel","Expander","FloatingCards","optionsVisible","optionsInvisible","sideButtonVis","marginLeft","sideButtonInv","toggleOptions","ELEVATION_2","justifyContent","alignItems","numCandidates","INTERACTIVE","userSelect","onMouseOver","onMouseDown","ADD_NODE","onMouseLeave","pageNum","allCands","slice","nPerPage","pointerEvents","cursor","pages","maxPage","paddingTop","paddingRight","paddingBottom","FocusStyleManager","onlyShowFocusOnTabs","FETCH_WORKSPACE_PROJECTS","loadUserConfig","DELETE","Keys","BACKSPACE","P","U","respondToResize","innerWidth","MOBILE_WIDTH_CUTOFF","innerHeight","MOBILE_HEIGHT_CUTOFF","setTimeout","App","keydown","which","ReactDOM","render","parent","FRONTEND_URL","SCALE_LINEAR","SCALE_LOG","LOADED_USER_CONFIG","SAVED_USER_CONFIG","FETCHED_WORKSPACE_PROJECTS","MENU_NEW_PROJECT","CREATED_NEW_PROJECT","RENAME_FILE","LOAD_GRAPH_JSON","LOAD_GRAPH_SQLITE","LOADED_GRAPH_JSON","LOAD_TOAST_KEY","SAVE_GRAPH_JSON","SAVE_GRAPH_SQLITE","SAVED_GRAPH_JSON","SAVE_TOAST_KEY","MENU_LOAD","MENU_IMPORT_CSV","MENU_SAVE_GRAPH_STATE","MENU_SAVE_GRAPH_STATE_TO_PROJECT","MENU_SAVE_GRAPH_SQLITE","SAVE_GRAPH_STATE","SAVED_GRAPH_STATE","SAVE_GRAPH_STATE_TO_PROJECT","SAVED_GRAPH_STATE_TO_PROJECT","LOAD_GRAPH_STATE","LOADED_GRAPH_STATE","SHOW_ITEM_IN_FOLDER","SHOW_WORKSPACE_FOLDER","CHANGE_WORKSPACE_FOLDER","CHANGED_WORKSPACE_FOLDER","CHOOSE_EDGE_FILE","CHOSEN_EDGE_FILE","CHOOSE_NODE_FILE","PEAKED_NODE_FILE","CHOSEN_NODE_FILE","CHOSEN_GRAPH_FILE","CHOSEN_STATE_FILE","IMPORTED_GRAPH","OPENED_GRAPH","SEARCH_RESPONSE","ADD_NODES","ADD_SELECT_NODE","GET_NEIGHBORS","$","Node","index","in","out","renderData","domainData","vx","vy","connectedTo","outNodeIds","outNode","inArray","prototype","connectNode","exports","THREE","memcpy","srcOffset","dst","dstOffset","subarray","buffer","MeshLine","previous","next","side","indices_array","uvs","counters","geometry","BufferGeometry","widthCallback","setGeometry","c","Geometry","vertices","z","Float32Array","Array","process","compareV3","aa","ab","copyV3","w","copyArray","needsUpdate","uv","Uint16Array","BufferAttribute","addAttribute","setIndex","advance","array","MeshLineMaterial","parameters","check","d","Material","call","lineWidth","useMap","Color","opacity","resolution","Vector2","sizeAttenuation","near","far","dashArray","useDash","alphaTest","material","RawShaderMaterial","uniforms","vertexShader","fragmentShader","setValues","constructor","copy","balancedBinTree","Argo","module","STATS","OrbitControls","d3","default","STATS_SHOW","NODE_COLOR","NODE_HIGHLIGHT","ADJACENT_HIGHLIGHT","SEARCH_HIGHLIGHT","NODE_HTEXTURE","NODE_TEXTURE","NODE_NO_HTEX","NODE_NO_TEX","NODE_NO_HCOLOR","NODE_NO_COLOR","NODE_NO_HIGHLIGHT","NODE_NEIGHBOR_HIGHLIGHT","NODE_SHAPE","NODE_HSHAPE","NODE_SIZE","HIGHLIGHT_SIZE","LAYOUT","LINES","MAP","MAP_RENDER_PER_NUMBER_OF_FRAME","TEXT_SCALE","TEXT_SIZE","TEXT_X_OFFSET","TEXT_Y_OFFSET","TEXT_BACK_COLOR","TEXT_OPACITY","TEXT_WIREFRAME","PIN_COLOR","def","spawn","options","self","inGraph","layout","layout_options","graphLayout","lineObjects","lineIndices","MAX_LINES","textureLoader","TextureLoader","crossOrigin","oldIntersect","selection","fov","mouseStart","Vector3","mouseEnd","dragging","showBox","renderWidth","renderHeight","maxZoom","mouseDown","layoutInit","relativeFontSize","mapShowing","mapRenderPerNumberOfFrame","lastNode","doHighlightNeighbors","prevHighlights","hull","stats","showPanel","appendChild","dom","begin","controls","update","end","requestAnimationFrame","renderer","WebGLRenderer","alpha","antialias","preserveDrawingBuffer","minimapRenderer","setDisplayParams","setRendererParams","setupCamera","setupMinimap","setupGeometry","setupSelect","element","innerHTML","domElement","cssRenderer","setupLayout","setupGraph","preventDefault","onWindowResize","clientRect","getBoundingClientRect","minimap","aspect","ccamera","updateProjectionMatrix","setSize","stage","numberOfFrameSinceMiniMapRerender","updateCamera","updateNodes","updateLabels","updateEdges","forEachNode","force","forceLink","restart","stop","tickToStatic","ceil","alphaMin","alphaDecay","tick","setViewport","setScissor","setScissorTest","scene","camera","Visible","QuickHull","tolerance","faces","newFaces","assigned","VertexList","unassigned","Face","normal","midpoint","area","constant","outside","mark","edge","HalfEdge","vertex","face","prev","twin","VertexNode","point","head","tail","assign","setFromPoints","points","isArray","makeEmpty","compute","setFromObject","object","updateMatrixWorld","traverse","isGeometry","clone","applyMatrix4","matrixWorld","isBufferGeometry","attribute","count","fromBufferAttribute","addVertexToFace","append","insertBefore","removeVertexFromFace","remove","removeAllVerticesFromFace","start","removeSubList","deleteFaceVertices","absorbingFace","faceVertices","appendChain","nextVertex","distanceToPoint","resolveUnassignedPoints","isEmpty","first","maxDistance","maxFace","distance","computeExtremes","minVertices","maxVertices","getComponent","setComponent","EPSILON","abs","computeInitialHull","line3","plane","closestPoint","Line3","Plane","v0","v1","v2","v3","extremes","closestPointToPoint","distanceToSquared","setFromCoplanarPoints","getEdge","setTwin","reindexFaces","activeFaces","nextVertexToAdd","eyeVertex","eyeFace","computeHorizon","eyePoint","crossEdge","horizon","twinEdge","oppositeFace","addAdjoiningFace","horizonEdge","addNewFaces","firstSideEdge","previousSideEdge","sideEdge","addVertexToHull","cleanup","e0","e1","e2","triangle","Triangle","dot","distanceTo","lengthSquared","last","insertAfter","ConvexGeometry","fromBufferGeometry","ConvexBufferGeometry","mergeVertices","normals","Float32BufferAttribute","CSS3DObject","Object3D","parentNode","removeChild","CSS3DSprite","CSS3DRenderer","_width","_height","REVISION","matrix","Matrix4","objects","createElement","overflow","WebkitTransformStyle","MozTransformStyle","oTransformStyle","transformStyle","cameraElement","epsilon","getObjectCSSMatrix","elements","setClearColor","isPaused","getSize","tan","degToRad","getEffectiveFOV","WebkitPerspective","MozPerspective","oPerspective","perspective","matrixWorldInverse","getInverse","getCameraCSSMatrix","WebkitTransform","MozTransform","oTransform","transform","renderObject","transpose","copyPosition","cachedStyle","enabled","minDistance","Infinity","minZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","LEFT","UP","RIGHT","SPACE","mouseButtons","ORBIT","MOUSE","ZOOM","MIDDLE","PAN","target0","position0","zoom0","zoom","spacePan","bothPan","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","reset","scope","dispatchEvent","changeEvent","STATE","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","makeSafe","radius","panOffset","setFromSpherical","lookAt","zoomChanged","EPS","quaternion","dispose","removeEventListener","onContextMenu","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","startEvent","endEvent","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","Spherical","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","objectMatrix","setFromMatrixColumn","multiplyScalar","panUp","pan","deltaX","deltaY","PerspectiveCamera","targetDistance","clientHeight","OrthographicCamera","right","clientWidth","bottom","warn","dollyIn","dollyScale","dollyOut","handleMouseDownPan","clientX","clientY","button","handleMouseDownRotate","handleMouseDownDolly","subVectors","handleMouseMoveRotate","handleMouseMoveDolly","spacePanStart","handleMouseMovePan","stopPropagation","handleMouseWheel","keyCode","handleKeyDown","touches","handleTouchStartRotate","dx","dy","sqrt","handleTouchStartDolly","handleTouchStartPan","handleTouchMoveRotate","handleTouchMoveDolly","handleTouchMovePan","handleKeyUp","EventDispatcher","defineProperties","center","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","relMouseCoords","currentElement","totalOffsetX","totalOffsetY","offsetLeft","scrollLeft","offsetTop","scrollTop","offsetParent","prepNode","nodeToAdd","hcolor","linecolor","numYeast","random","tsize","make1x1Rect","rectShape","Shape","moveTo","lineTo","ShapeGeometry","make2x2Rect","volToRadius","volume","createNGraph","setupNgraphLayout","setupD3Layout","forceSimulation","forceManyBody","strength","forceY","forceX","velocityDecay","zIndex","setPixelRatio","devicePixelRatio","oldCoords","panToMousePosition","coordX","coordY","coefficient","Scene","Group","setupFancyEdges","setUpSimpleEdges","rect","setupSelectionBox","setupBoundaries","setupViewPort","edgeCount","LineBasicMaterial","linewidth","vertexColors","VertexColors","shading","FlatShading","line","LineSegments","frustumCulled","colors","drawCount","selectBox","Line","visible","boundaries","setBoundarySize","viewPort","setViewPortSize","computeBoundingSphere","setupMouseHandlers","callback","coords","mouseX","mouseY","mousePosition","unproject","normalize","isMouseCoordinatesOnMinimap","raycaster","Raycaster","pos","onRightClick","focus","onRightClickCoords","callMouseHandler","intersects","intersectObjects","nodeIndex","getNode","ctrlKey","mouseHandler","graphNode","fx","fy","pinnedx","pinnedy","drawNode","links","removeNode","removeGraphEdges","undrawEdges","draw_object","undrawNode","nodeLinks","getLinks","removeLink","textHolder","hidden","killed","drawEdge","highlightNode","toggle","setHex","highlightEdges","froms","tos","highlightNeighbors","colorNodeOpacity","colorNodeEdge","linkObjs","dc","op","selectNode","isSelected","updateSelection","clearSelection","hideme","diffx","diffy","checkSelection","npos","getNodePosition","insideBox","posx","posy","ctrl","leftMouseDown","onHover","lastHover","startTime","endTime","now","newNodeIds","emit","setUniformNodeSize","hsize","setNodeDataSize","dataValue","dataVal","setUniformNodeColor","hsvDegree","setNodeDataColor","mapNodeAttributes","val","mod","attr","changeLabelFontSize","changeLabelLength","changeNodes","changeNode","numChars","relativeSize","createHighlightMesh","texture","hshape","hgeometry","CircleGeometry","createHighlightDrawObject","getNodeSize","hmaterial","MeshBasicMaterial","transparent","highlight","Mesh","createNodeMesh","createNodeDrawObject","createPinMesh","pinMesh","createNodeLabel","wireframe","wireframeLinewidth","DoubleSide","PlaneGeometry","textMesh","createAndSetupLabelTextMesh","createAndSetupLabelDiv","createAndSetupTextHolder","bbox","Box3","createLabelDiv","createLabelDivElement","createTextNode","textElement","createLabelTextElement","textOverflow","setupNodeDrawObject","htexture","onTextureLoad","load","himage","image","hide","updateColorsAndPositions","v1pos","v2pos","v1color","v2color","setMouseMode","mouseMode","isMouseModeMove","pause","mapSelectedNodes","mapAllNodes","setLabelFontSize","toggleMiniMap","turnOnLabelCSSRenderer","updateNodesShowingLabels","toggleLabels","hideLabels","setCanvasSize","setAllNodesShape","setNodeShape","getNumSelected","getNodesCount","updateViewPortEdgeColor","getGraph","getNodeList","poses","getPinPositions","alias","toggleAlias","setLastNode","dragLastNode","lowerRes","toggleNeighborHighlight","removeSelected","getSelected","setDrawRange","total","thisNode","step","oldNode","updateNode","forEachLink","link","getLink","newNode","childNodes","innerText"],"mappings":"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W,CACTvY,KAAM,KACNzT,MAAO,IAAI0oB,EAAMkD,QAAQ3oB,KAAK+oB,UAAU,GAAI/oB,KAAK+oB,UAAU,KAE7DC,QAAS,CAAExY,KAAM,IAAKzT,MAAOiD,KAAKgpB,SAClC1L,WAAY,CAAE9M,KAAM,IAAKzT,MAAOiD,KAAKsd,YACrC2L,UAAW,CAAEzY,KAAM,IAAKzT,MAAOiD,KAAKipB,YAEtCI,aA9JuB,CACvB,yBACA,GACA,2BACA,2BACA,uBACA,wBACA,yBACA,qBACA,4BACA,GACA,iCACA,gCACA,2BACA,2BACA,sBACA,yBACA,sBACA,qBACA,iCACA,GACA,oBACA,uBACA,0BACA,2BACA,GACA,qCACA,GACA,6BACA,uBACA,2BACA,kBACA,GACA,IACA,GACA,gBACA,GACA,kDACA,2EACA,GACA,uCACA,gBACA,GACA,mDACA,sDACA,gDACA,4CACA,GACA,oDACA,2CACA,2CACA,GACA,2DACA,sDACA,GACA,oCACA,uCACA,QACA,GACA,gBACA,mEACA,wEACA,aACA,qDACA,qDACA,0CACA,GACA,+CACA,8CACA,6EACA,GACA,QACA,GACA,2EACA,2CACA,0BACA,wBACA,GACA,qDACA,qCACA,GACA,iEACA,mCACA,GACA,KA0EiCxc,KAAK,QACtCyc,eAxEyB,CACzB,kDACA,2BACA,GACA,yBACA,wBACA,yBACA,0BACA,4BACA,2BACA,GACA,oBACA,uBACA,0BACA,2BACA,GACA,gBACA,GACA,uBACA,oCACA,qDACA,0BACA,SACA,OACA,wBACA,mDACA,KA8CqCzc,KAAK,UAoB5C,cAjBOob,EAAWK,iBACXL,EAAWlqB,WACXkqB,EAAWM,cACXN,EAAWrlB,aACXqlB,EAAWQ,eACXR,EAAWS,kBACXT,EAAWW,uBACXX,EAAWY,YACXZ,EAAWa,WACXb,EAAWc,iBACXd,EAAW3K,kBACX2K,EAAWgB,UAElBC,EAAS1Y,KAAO,mBAEhB0Y,EAASK,UAAUtB,GAEZiB,GAGTzD,EAAMuC,iBAAiB1C,UAAYjmB,OAAOvJ,OAAO2vB,EAAM2C,SAAS9C,WAChEG,EAAMuC,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","file":"static/js/main.2cab8620.chunk.js","sourcesContent":["import { Position, Toaster } from \"@blueprintjs/core\";\n\nexport const toaster = Toaster.create({\n  position: Position.TOP\n});\n\nexport default toaster;\n","import { runInAction, toJS } from 'mobx';\nimport { Intent } from '@blueprintjs/core';\nimport { demapify } from 'es6-mapify';\n\nimport appState from '../stores/index';\nimport {\n  ADD_NODE,\n  ADD_NODES,\n  ADD_SELECT_NODE,\n  CHOOSE_EDGE_FILE,\n  CHOOSE_GRAPH_FILE,\n  CHOOSE_NODE_FILE,\n  CHOOSE_STATE_FILE,\n  CHOSEN_EDGE_FILE,\n  CHOSEN_GRAPH_FILE,\n  CHOSEN_NODE_FILE,\n  CHOSEN_STATE_FILE,\n  GET_NEIGHBORS,\n  IMPORT_GRAPH,\n  IMPORTED_GRAPH,\n  LOAD_GRAPH_SQLITE,\n  LOADED_GRAPH_SQLITE,\n  LOADED_GRAPH_STATE,\n  MENU_IMPORT_CSV,\n  MENU_LOAD,\n  MENU_NEW_PROJECT,\n  MENU_SAVE_GRAPH_SQLITE,\n  MENU_SAVE_GRAPH_STATE,\n  CREATE_NEW_PROJECT,\n  CREATED_NEW_PROJECT,\n  OPEN_GRAPH,\n  OPENED_GRAPH,\n  FETCH_WORKSPACE_PROJECTS,\n  FETCHED_WORKSPACE_PROJECTS,\n  SAVE_GRAPH_SQLITE,\n  SAVE_GRAPH_STATE,\n  SAVED_GRAPH_JSON,\n  SAVED_GRAPH_STATE,\n  SEARCH_REQUEST,\n  SEARCH_RESPONSE,\n  SHOW_ITEM_IN_FOLDER,\n  SAVED_GRAPH_STATE_TO_PROJECT,\n  MENU_SAVE_GRAPH_STATE_TO_PROJECT,\n  SAVE_GRAPH_STATE_TO_PROJECT,\n  DELETE_FILE,\n  RENAME_FILE,\n  SHOW_WORKSPACE_FOLDER,\n  LOAD_USER_CONFIG,\n  LOADED_USER_CONFIG,\n  SAVED_USER_CONFIG,\n  SAVE_USER_CONFIG,\n  CHANGE_WORKSPACE_FOLDER,\n  CHANGED_WORKSPACE_FOLDER,\n} from '../constants/index';\nimport { toaster } from '../notifications/client';\n\nimport createGraph from 'ngraph.graph';\nimport pageRank from 'ngraph.pagerank';\nimport parse from \"csv-parse/lib/sync\";\n// import worker from './worker';\n\n// TODO: Register web worker used by Argo-lite.\n\n// Argo-lite replacement for electron ipc.\nconst ipcRenderer = {\n  send: (eventString) => {\n    console.log(`ipcRenderer.send(${eventString}, ...)`);\n  }\n}\n\nexport default function registerIPC() {\n  // ipcRenderer.on(LOADED_USER_CONFIG, (event, loadedObject) => {\n  //   // Overwrite PreferenceStore values according to user config values,\n  //   // if present.\n  //   if (loadedObject.darkMode) {\n  //     appState.preferences.darkMode = true;\n  //   }\n  //   if (loadedObject.workspace && loadedObject.workspace != '') {\n  //     appState.preferences.workspacePath = loadedObject.workspace;\n  //   }\n  // });\n\n  // ipcRenderer.on(SAVED_USER_CONFIG, (event) => {\n  //   toaster.show({\n  //     message: \"User configuration saved\",\n  //     intent: Intent.SUCCESS,\n  //     iconName: 'saved',\n  //   });\n  // });\n\n  // ipcRenderer.on(LOADED_GRAPH_SQLITE, (event, loadedObject) => {\n  //   runInAction('load saved graph', () => {\n  //     appState.graph.rawGraph = loadedObject.rawGraph;\n  //     appState.graph.metadata = loadedObject.metadata;\n  //   });\n  // });\n\n  // ipcRenderer.on(OPENED_GRAPH, (event, loadedObject) => {\n  //   runInAction('load saved graph and state', () => {\n  //     console.log(loadedObject);\n  //     appState.graph.rawGraph = loadedObject.rawGraph;\n  //     appState.graph.metadata = loadedObject.metadata;\n  //     if (loadedObject.state) {\n  //       appState.graph.loadImmediateStates(loadedObject.state);\n  //     }\n  //   });\n  // });\n\n  // ipcRenderer.on(LOADED_GRAPH_STATE, (event, loadedObject) => {\n  //   appState.graph.loadImmediateStates(loadedObject);\n  // });\n\n  // ipcRenderer.on(SAVED_GRAPH_STATE, (event, savedFilePath) => {\n  //   toaster.show({\n  //     message: `Saved graph snapshot file to ${savedFilePath}`,\n  //     intent: Intent.SUCCESS,\n  //     iconName: 'saved',\n  //     action: {\n  //       onClick: () => ipcRenderer.send(SHOW_ITEM_IN_FOLDER, savedFilePath),\n  //       text: 'Show in Folder',\n  //     },\n  //   });\n  // });\n\n  // ipcRenderer.on(SAVED_GRAPH_STATE_TO_PROJECT, (event, snapshotName) => {\n  //   toaster.show({\n  //     message: `Saved to snapshot ${snapshotName}`,\n  //     intent: Intent.SUCCESS,\n  //     iconName: 'saved',\n  //   });\n  // });\n\n  // ipcRenderer.on(SAVED_GRAPH_JSON, (event, savedFilePath) => {\n  //   toaster.show({\n  //     message: `Saved graph file to ${savedFilePath}`,\n  //     intent: Intent.SUCCESS,\n  //     iconName: 'saved',\n  //     action: {\n  //       onClick: () => ipcRenderer.send(SHOW_ITEM_IN_FOLDER, savedFilePath),\n  //       text: 'Show in Folder',\n  //     },\n  //   });\n  // });\n\n  // ipcRenderer.on(CHOSEN_NODE_FILE, (event, path) => {\n  //   appState.import.importConfig.nodeFile.path = path;\n  // });\n\n  // ipcRenderer.on(CHOSEN_EDGE_FILE, (event, path) => {\n  //   appState.import.importConfig.edgeFile.path = path;\n  // });\n\n  // ipcRenderer.on(CHOSEN_GRAPH_FILE, (event, path) => {\n  //   appState.import.graphFile = path;\n  // });\n\n  // ipcRenderer.on(CHOSEN_STATE_FILE, (event, path) => {\n  //   appState.import.stateFile = path;\n  // });\n\n  // ipcRenderer.on(IMPORTED_GRAPH, (event) => {\n  //   appState.import.loading = false;\n  //   appState.import.dialogOpen = false;\n  //   appState.project.isFetching = true;\n  //   fetchWorkspaceProjects();\n  // });\n\n  // ipcRenderer.on(ADD_NODES, (event, toAdd) => {\n  //   runInAction('add nodes and edges to graph', () => {\n  //     appState.graph.rawGraph.nodes = appState.graph.rawGraph.nodes.concat(\n  //       toAdd.nodes,\n  //     );\n  //     appState.graph.rawGraph.edges = appState.graph.rawGraph.edges.concat(\n  //       toAdd.edges,\n  //     );\n  //   });\n  // });\n\n  // ipcRenderer.on(ADD_SELECT_NODE, (event, toAdd) => {\n  //   runInAction('add nodes and edges to graph', () => {\n  //     appState.graph.rawGraph.nodes = appState.graph.rawGraph.nodes.concat(\n  //       toAdd.nodes,\n  //     );\n  //     appState.graph.rawGraph.edges = appState.graph.rawGraph.edges.concat(\n  //       toAdd.edges,\n  //     );\n  //   });\n\n  //   appState.graph.frame.setLastNode(toAdd.nodes[0].node_id);\n  //   appState.graph.frame.dragLastNode();\n  // });\n\n  // ipcRenderer.on(SEARCH_RESPONSE, (event, candidates) => {\n  //   var cands = JSON.parse(candidates);\n  //   var ckeys = cands.map(x => x.node_id);\n  //   appState.search.allCands = Object.values(cands);\n  //   appState.search.pageNum = 0;\n  //   appState.search.nPerPage = 10;\n  //   appState.search.numCandidates = appState.search.allCands.length;\n  //   appState.search.maxPage = parseInt(\n  //     appState.search.allCands.length / appState.search.nPerPage,\n  //   );\n  //   appState.search.pages = [...Array(appState.search.maxPage).keys()];\n  //   appState.search.candidates = appState.search.allCands.slice(0, 10);\n  //   appState.search.panelOpen = true;\n  //   if (appState.graph.frame) {\n  //     appState.graph.frame.highlightNodeIds(ckeys, true);\n  //   }\n  // });\n\n  // ipcRenderer.on(LOADED_GRAPH_STATE, (event, stateStr) => {\n  //   appState.graph.loadImmediateStates(stateStr);\n  // });\n\n  // ipcRenderer.on(CREATED_NEW_PROJECT, () => {\n  //   fetchWorkspaceProjects();\n  // });\n\n  // ipcRenderer.on(FETCHED_WORKSPACE_PROJECTS, (event, projects) => {\n  //   appState.project.isFetching = false;\n  //   appState.project.projects = projects;\n  //   // Update mobx state on projects, useful for updating the components after deleting/renaming etc.\n  //   if (appState.project.currentProject !== null) {\n  //     // There is a project currently selected (showing in a ProjectDetailDialog etc.)\n  //     // This fetch needs to update the dialog also\n  //     const temp = appState.project.projects.filter((project) => {\n  //       return project.projectPath === appState.project.currentProject.projectPath;\n  //     });\n  //     if (temp.length === 1) {\n  //       appState.project.currentProject = temp[0];\n  //     } else {\n  //       appState.project.currentProject = null;\n  //     }\n      \n  //   }\n  // });\n\n  // ipcRenderer.on(CHANGED_WORKSPACE_FOLDER, (events, newWorkspaceDirectory) => {\n  //   appState.preferences.workspacePath = newWorkspaceDirectory;\n  //   appState.preferences.saveUserConfig();\n  // });\n\n  // ipcRenderer.on(MENU_NEW_PROJECT, () => {\n  //   appState.project.isNewProjectDialogOpen = true;\n  // });\n\n  // ipcRenderer.on(MENU_LOAD, () => {\n  //   appState.preferences.openDialogOpen = true;\n  // });\n\n  // ipcRenderer.on(MENU_IMPORT_CSV, () => {\n  //   appState.import.dialogOpen = true;\n  // });\n\n  // ipcRenderer.on(MENU_SAVE_GRAPH_STATE, () => {\n  //   // Original implementation for opening a traditional system-level save file dialog\n  //   // ipcRenderer.send(SAVE_GRAPH_STATE, appState.graph.saveImmediateStates());\n    \n  //   // New implementation opening a dialog that saves snapshot to project\n  //   appState.project.isSaveSnapshotDialogOpen = true;\n  // });\n\n  // ipcRenderer.on(MENU_SAVE_GRAPH_STATE_TO_PROJECT, () => {\n  //   requestSaveSnapshot();\n  // });\n\n  // ipcRenderer.on(MENU_SAVE_GRAPH_SQLITE, requestSaveSQLite);\n}\n\nexport function requestLoadSQLite() {\n  ipcRenderer.send(LOAD_GRAPH_SQLITE);\n}\n\nexport function addNode(node_id) {\n  ipcRenderer.send(ADD_NODE, node_id);\n}\n\nexport function requestNeighbors(\n  node_id,\n  attr = 'degree',\n  num = '10',\n  order = 'desc',\n) {\n  ipcRenderer.send(GET_NEIGHBORS, node_id, attr, num, order);\n}\n\nfunction requestSaveSQLite() {\n  ipcRenderer.send(\n    SAVE_GRAPH_SQLITE,\n    JSON.stringify({\n      graph: toJS(appState.graph.rawGraph),\n      metadata: toJS(appState.graph.metadata),\n      nodes: toJS(appState.graph.nodes),\n      overrides: toJS(demapify(appState.graph.overrides)),\n      nodePositions: appState.graph.frame.getPositions(),\n    }),\n  );\n}\n\nexport function requestChooseNodeFile(hasHeader) {\n  ipcRenderer.send(CHOOSE_NODE_FILE, hasHeader);\n}\n\nexport function requestChooseEdgeFile(hasHeader) {\n  ipcRenderer.send(CHOOSE_EDGE_FILE, hasHeader);\n}\n\nexport function requestChooseGraphFile() {\n  ipcRenderer.send(CHOOSE_GRAPH_FILE);\n}\n\nexport function requestChooseStateFile() {\n  ipcRenderer.send(CHOOSE_STATE_FILE);\n}\n\nexport function requestOpen() {\n  ipcRenderer.send(\n    OPEN_GRAPH,\n    appState.import.graphFile,\n    appState.import.stateFile,\n  );\n}\n\n// Request to delete a file specified at filePath\nexport function requestDelete(filePath) {\n  ipcRenderer.send(DELETE_FILE, filePath);\n}\n\n/**\n * Request to rename a file specified at filePath\n * @param filePath where the file to be renamed is located\n * @param newName new file name with extension\n */\nexport function requestRename(filePath, newName) {\n  ipcRenderer.send(RENAME_FILE, filePath, newName);\n}\n\nexport function requestSaveSnapshot(snapshotName) {\n  if (!snapshotName) {\n    // Default: Use the currently opened snapshot name (if no snapshot opened, the default name in the ProjectStore will be used)\n    ipcRenderer.send(SAVE_GRAPH_STATE_TO_PROJECT, appState.graph.saveImmediateStates(), appState.project.currentProject.projectPath, appState.project.currentSnapshotName);\n  } else {\n    ipcRenderer.send(SAVE_GRAPH_STATE_TO_PROJECT, appState.graph.saveImmediateStates(), appState.project.currentProject.projectPath, snapshotName);\n  }\n}\n\nexport function requestImportGraphFromCSV(hasNodeFile, delimiter, newProjectName) {\n  if (!newProjectName) {\n    newProjectName = 'Test Project';\n  }\n  appState.import.loading = true;\n  const importConfig = {\n    hasNodeFile,\n    nodes: {\n      path: appState.import.importConfig.nodeFile.path,\n      hasColumns: appState.import.importConfig.nodeFile.hasColumns,\n      columns: toJS(appState.import.importConfig.nodeFile.columns),\n      mapping: toJS(appState.import.importConfig.nodeFile.mapping),\n    },\n    edges: {\n      path: appState.import.importConfig.edgeFile.path,\n      hasColumns: appState.import.importConfig.edgeFile.hasColumns,\n      columns: toJS(appState.import.importConfig.edgeFile.columns),\n      mapping: toJS(appState.import.importConfig.edgeFile.mapping),\n      createMissing: appState.import.importConfig.edgeFile.createMissing,\n    },\n    delimiter,\n    newProjectName\n  };\n  ipcRenderer.send(IMPORT_GRAPH, importConfig);\n\n  // TODO: Potentially separate this out to web worker.\n  importGraphFromCSV(importConfig).then(graph => {\n    // Run post import filters\n    appState.import.postImportFilter(graph.rawGraph);\n\n    runInAction('load imported graph', () => {\n      appState.graph.rawGraph = graph.rawGraph;\n      appState.graph.metadata = graph.metadata;\n      appState.graph.setUpFrame();\n    });\n    // Reinitialize global configs\n    appState.graph.nodes = appState.graph.initialGlobalConfig.nodes;\n    appState.graph.overrides = new Map();\n    appState.import.loading = false;\n    appState.import.dialogOpen = false;\n    // Sync preference store with graph-frontend frame\n    if (!appState.preferences.darkMode) { // assume frame defaults to dark\n      appState.graph.frame.toggleDark();\n    }\n    if (appState.preferences.minimapShowing) {\n      appState.graph.frame.showMiniMap();\n    } else {\n      appState.graph.frame.hideMiniMap();\n    }\n    // Newly imported graph shouldn't have label showing\n    appState.graph.frame.turnOffLabelCSSRenderer();\n  });\n}\n\nexport function requestImportGraphFromGexf() {\n  importGraphFromGexf().then(graph => {\n    // Run post import filters\n    appState.import.postImportFilter(graph.rawGraph);\n\n    runInAction('load imported graph', () => {\n      appState.graph.rawGraph = graph.rawGraph;\n      appState.graph.metadata = graph.metadata;\n      appState.graph.setUpFrame();\n    });\n    // Reinitialize global configs\n    appState.graph.nodes = appState.graph.initialGlobalConfig.nodes;\n    appState.graph.overrides = new Map();\n    appState.import.loading = false;\n    appState.import.gexfDialogOpen = false;\n    // Sync preference store with graph-frontend frame\n    if (!appState.preferences.darkMode) { // assume frame defaults to dark\n      appState.graph.frame.toggleDark();\n    }\n    if (appState.preferences.minimapShowing) {\n      appState.graph.frame.showMiniMap();\n    } else {\n      appState.graph.frame.hideMiniMap();\n    }\n    // Newly imported graph shouldn't have label showing\n    appState.graph.frame.turnOffLabelCSSRenderer();\n  });\n}\n\nasync function readCSV(fileObject, hasHeader, delimiter) {\n  const file = fileObject;\n  const reader = new FileReader();\n  reader.readAsText(file);\n  return new Promise((resolve, reject) => {\n    reader.onload = () => {\n      const content = reader.result;\n      if (hasHeader) {\n        resolve(parse(content, {\n          comment: \"#\",\n          trim: true,\n          auto_parse: true,\n          skip_empty_lines: true,\n          columns: hasHeader,\n          delimiter\n        }));\n      }\n      resolve(parse(content, {\n        comment: \"#\",\n        trim: true,\n        auto_parse: true,\n        skip_empty_lines: true,\n        columns: undefined,\n        delimiter\n      }));\n    }\n  });\n}\n\nasync function parseGEXF(content) {\n  const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(content,\"text/xml\");\n      const xmlEdges = xmlDoc.getElementsByTagName('edge');\n      const xmlNodes = xmlDoc.getElementsByTagName('node');\n      const xmlAttri = xmlDoc.getElementsByTagName('attributes')\n      \n      let nodeAttri = [];\n      let edgeAttri = [];\n      const edgesArr = [];\n      const nodesArr = [];\n      const nodeAttriOrdered = {};\n      \n      for (let i = 0, l = xmlAttri.length; i < l; i++) {\n        const curr = xmlAttri[i];\n        if (curr.getAttribute('class') === 'node') {\n          nodeAttri = curr.getElementsByTagName('attribute');\n        }\n        else if (curr.getAttribute('class') === 'edge') {\n          edgeAttri = curr.getElementsByTagName('attribute');\n        }\n      }\n      \n      for (let i = 0, l = nodeAttri.length; i < l; i++) {\n        const curr = nodeAttri[i];\n        nodeAttriOrdered[curr.getAttribute(\"id\")] = curr.getAttribute(\"title\");\n      }\n\n      for (let i = 0, l = xmlEdges.length; i < l; i++) {\n        const currEdge = xmlEdges[i];\n        const s = currEdge.getAttribute('source').toString();\n        const t = currEdge.getAttribute('target').toString();\n        edgesArr.push({\n          source_id: s,\n          target_id: t,\n        });\n      }\n      for (let i = 0, l = xmlNodes.length; i < l; i++) {\n        const currNode = xmlNodes[i];\n        const id = currNode.getAttribute('id').toString();\n        const nodeAttvalues = currNode.getElementsByTagName(\"attvalues\");\n        const nodeAttvalue = [];\n        if (nodeAttvalues.length != 0) {\n          nodeAttvalue = nodeAttvalues[0].getElementsByTagName(\"attvalue\");\n        }\n        let node = { id: id, degree: 0, pagerank: 0, node_id: id};\n        for (let j = 0; j < nodeAttvalue.length; j++){\n          const value = nodeAttvalue[j].attributes[\"value\"].value;\n          const attributeIdElementAttribute = nodeAttvalue[j].attributes[\"for\"] || nodeAttvalue[j].attributes[\"id\"];\n          const attributeId = attributeIdElementAttribute.value;\n          node[nodeAttriOrdered[attributeId]] = value;\n        }\n        for (let j = 0; j < currNode.attributes.length; j++) {\n          const currAttri = currNode.attributes[j];\n            node[currAttri.name] = currAttri.value;\n        }\n        node[\"id\"] = id;\n        node[\"node_id\"] = id;\n        nodesArr.push(node);\n      }\n      return [nodesArr, edgesArr];\n}\n\nasync function readGEXF(fileObject) {\n  const file = fileObject;\n  const reader = new FileReader();\n  reader.readAsText(file);\n  \n  return new Promise((resolve, reject) => {\n      reader.onload = () => {\n      const content = reader.result;\n      resolve(parseGEXF(content));\n    }\n  });\n}\n\nasync function importGraphFromCSV(config) {\n  // Since the CSV lib we use uses int index when there's not header/column names specified\n  // but the frontend selector always convert int to string values, we need to\n  // manually convert the user-selected fromId and toId values back to int.\n  // Note that this should only be done when there's no header provided on the CSV (hasColumns == false).\n  const fromId = config.nodes.hasColumns ? config.edges.mapping.fromId : parseInt(config.edges.mapping.fromId);\n  const toId = config.nodes.hasColumns ? config.edges.mapping.toId : parseInt(config.edges.mapping.toId);\n\n  // Create temporary data structures.\n  let nodesArr = [];\n  const graph = createGraph();\n  const degreeDict = {};\n  if (config.hasNodeFile) {\n    nodesArr = await readCSV(appState.import.selectedNodeFileFromInput, config.nodes.hasColumns, config.delimiter);\n    nodesArr.forEach(node => graph.addNode(node[config.nodes.mapping.id].toString(),\n      { id: node[config.nodes.mapping.id].toString(), degree: 0, ...node }));\n    nodesArr =\n      nodesArr.map(\n        n => ({ ...n, id: n[config.nodes.mapping.id].toString(), degree: 0, pagerank: 0 }));\n    nodesArr.forEach(n => degreeDict[n.id] = 0);\n  }\n  const edges = await readCSV(appState.import.selectedEdgeFileFromInput, config.edges.hasColumns, config.delimiter);\n  if (config.edges.createMissing) {\n    edges.forEach((it) => {\n      const from = it[fromId].toString();\n      const to = it[toId].toString();\n      if (!graph.hasNode(from)) {\n        graph.addNode(from, { id: from, degree: 0 });\n        nodesArr.push({ id: from, degree: 0, pagerank: 0 });\n        degreeDict[from] = 0;\n      }\n      if (!graph.hasNode(to)) {\n        graph.addNode(to, { id: to, degree: 0 });\n        nodesArr.push({ id: to, degree: 0, pagerank: 0 });\n        degreeDict[to] = 0;\n      }\n    });\n  }\n\n  const edgesSet = new Set();\n  \n  const edgesArr = [];\n\n  const addEdge = (from, to) => {\n    const edgeKey = `${from}👉${to}`;\n    if (edgesSet.has(edgeKey)) {\n      return;\n    }\n    edgesSet.add(edgeKey);\n    graph.addLink(from, to);\n    degreeDict[to] += 1;\n    edgesArr.push({\n      source_id: from,\n      target_id: to,\n    });\n  };\n  \n  edges.forEach(it => {\n    const from = it[fromId].toString();\n    const to = it[toId].toString();\n    // Argo currently works with undirected graph\n    addEdge(from, to);\n    addEdge(to, from);\n  });\n\n  const rank = pageRank(graph);\n  nodesArr = nodesArr.map(n => ({ ...n, node_id: n.id, pagerank: rank[n.id], degree: degreeDict[n.id] }));\n  return {\n    rawGraph: { nodes: nodesArr, edges: edgesArr },\n    metadata: {\n      snapshotName: 'Untitled Graph',\n      fullNodes: nodesArr.length,\n      fullEdges: Math.floor(edgesArr.length / 2), // Counting undirected edges\n      nodeProperties: Object.keys(nodesArr[0]),\n      nodeComputed: ['pagerank', 'degree'],\n      edgeProperties: ['source_id', 'target_id'],\n    },\n  }\n}\n\nexport async function importGraphFromGexf() {\n  const gexfParsed = await readGEXF(appState.import.selectedGexfFileFromInput);\n  let nodesArr = gexfParsed[0];\n  const edges = gexfParsed[1];\n  const graph = createGraph();\n  const degreeDict = {};\n\n  nodesArr.forEach((it) => {\n    const currNode = it[\"id\"].toString();\n    if (!graph.hasNode(currNode)) {\n      graph.addNode(currNode, it);\n      degreeDict[currNode] = 0;\n    }\n  });\n\n  const edgesSet = new Set();\n  \n  const edgesArr = [];\n\n  const addEdge = (from, to) => {\n    const edgeKey = `${from}👉${to}`;\n    if (edgesSet.has(edgeKey)) {\n      return;\n    }\n    edgesSet.add(edgeKey);\n    graph.addLink(from, to);\n    degreeDict[to] += 1;\n    edgesArr.push({\n      source_id: from,\n      target_id: to,\n    });\n  };\n  \n  edges.forEach(it => {\n    const from = it[\"source_id\"].toString();\n    const to = it[\"target_id\"].toString();\n\n    // Argo currently works with undirected graph\n    addEdge(from, to);\n    addEdge(to, from);\n  });\n\n  const rank = pageRank(graph);\n  nodesArr = nodesArr.map(n => ({ ...n, node_id: n.id, pagerank: rank[n.id], degree: degreeDict[n.id] }));\n  return {\n    rawGraph: { nodes: nodesArr, edges: edgesArr },\n    metadata: {\n      snapshotName: 'Untitled Graph',\n      fullNodes: nodesArr.length,\n      fullEdges: Math.floor(edgesArr.length / 2), // Counting undirected edges\n      nodeProperties: Object.keys(nodesArr[0]),\n      nodeComputed: ['pagerank', 'degree'],\n      edgeProperties: ['source_id', 'target_id'],\n    },\n  }\n}\n\nexport function runSearch(searchStr) {\n  ipcRenderer.send(SEARCH_REQUEST, searchStr, appState.graph.searchOrder);\n}\n\nexport function fetchWorkspaceProjects() {\n  ipcRenderer.send(FETCH_WORKSPACE_PROJECTS);\n}\n\nexport function requestCreateNewProject(projectMetadata) {\n  ipcRenderer.send(CREATE_NEW_PROJECT, projectMetadata);\n}\n\nexport function requestOpenWorkspaceFolder() {\n  ipcRenderer.send(SHOW_WORKSPACE_FOLDER);\n}\n\nexport function requestLoadUserConfig() {\n  ipcRenderer.send(LOAD_USER_CONFIG);\n}\n\nexport function requestSaveUserConfig(userConfig) {\n  ipcRenderer.send(SAVE_USER_CONFIG, userConfig);\n}\n\nexport function requestChangeWorkspace() {\n  ipcRenderer.send(CHANGE_WORKSPACE_FOLDER);\n}","import { observable, action } from \"mobx\";\nimport { requestLoadUserConfig, requestSaveUserConfig } from \"../ipc/client\";\nimport { IS_IFRAME_WIDGET } from \"../constants\";\n\nexport default class PreferencesStore {\n  @observable dialogOpen = false;\n\n  @observable openDialogOpen = false;\n  @observable openSnapshotDialogOpen = false;\n  @observable shareDialogOpen = false;\n  @observable statisticsDialogOpen = false;\n  @observable helpDialogOpen = false;\n  @observable neighborDialogOpen = false;\n  @observable dataSheetDialogOpen = false;\n  @observable isRenderOptionsCardHidden = IS_IFRAME_WIDGET;\n\n  // The following fields are asynchronously loaded.\n  // Any writes to these fields through saveUserConfig\n  // won't be active until the app exits and starts\n  // next time.\n\n  @observable darkMode = true;\n  @observable minimapShowing = !IS_IFRAME_WIDGET;\n  @observable isStatusBarShowing = !IS_IFRAME_WIDGET;\n  @observable isNavbarInMinimalMode = IS_IFRAME_WIDGET;\n  @observable isLegendShowing = !IS_IFRAME_WIDGET;\n\n  @observable workspacePath = '';\n\n  // This is called at the beginning of the app.\n  loadUserConfig() {\n    requestLoadUserConfig();\n  }\n\n  saveUserConfig() {\n    const userConfig = {\n      darkMode: this.darkMode,\n      workspace: this.workspacePath,\n    }\n\n    requestSaveUserConfig(userConfig);\n  }\n\n  turnOnMinimalMode() {\n    this.isRenderOptionsCardHidden = true;\n    this.minimapShowing = false;\n    this.isStatusBarShowing = false;\n    this.isNavbarInMinimalMode = true;\n    this.isLegendShowing = false;\n    if (appState.graph.frame) {\n      appState.graph.frame.hideMiniMap();\n    } else {\n      console.log(\"Frame not ready when trying to toggle minimap.\");\n    }\n    \n  }\n\n  turnOffMinimalMode() {\n    this.isRenderOptionsCardHidden = false;\n    this.minimapShowing = true;\n    this.isStatusBarShowing = true;\n    this.isNavbarInMinimalMode = false;\n    this.isLegendShowing = true;\n    if (appState.graph.frame) {\n      appState.graph.frame.showMiniMap();\n    } else {\n      console.log(\"Frame not ready when trying to toggle minimap.\");\n    }\n  }\n}","const jsnx = require('jsnetworkx');\nconst jsgraphs = require('js-graph-algorithms');\n\n/**\n * Convert Argo-lite snapshot for use in the JSNetworkX library.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToJsnx(snapshot) {\n    const jsnxGraph = new jsnx.Graph();\n    jsnxGraph.addNodesFrom(snapshot.rawGraph.nodes.map(n => [n.id, n]));\n    jsnxGraph.addEdgesFrom(snapshot.rawGraph.edges.map(e => [e.source_id, e.target_id]));\n    return jsnxGraph;\n}\n\n/**\n * Convert Argo-lite snapshot for use in the ngraph library.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToNGraph(snapshot) {\n    return null;\n}\n\n/**\n * Convert Argo-lite snapshot for use in the js-graph-algorithms library.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToJSGraph(snapshot) {\n    var idDict = {};\n    var i;\n    for (i = 0; i < snapshot.rawGraph.nodes.length; i++) {\n        idDict[snapshot.rawGraph.nodes[i].id] = i;\n    }\n    var g = new jsgraphs.Graph(snapshot.rawGraph.nodes.length);\n    snapshot.rawGraph.edges.forEach(e => {\n        g.addEdge(idDict[e.source_id], idDict[e.target_id]);\n    });\n    return [g, idDict];\n}\n\n/**\n * Convert Argo-lite snapshot for use in the js-graph-algorithms library (Weighted).\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToJSGraphWeightedDi(snapshot) {\n    var idDict = {};\n    var i;\n    for (i = 0; i < snapshot.rawGraph.nodes.length; i++) {\n        idDict[snapshot.rawGraph.nodes[i].id] = i;\n    }\n    var g = new jsgraphs.WeightedDiGraph(snapshot.rawGraph.nodes.length);\n    snapshot.rawGraph.edges.forEach(e => {\n        g.addEdge(new jsgraphs.Edge(idDict[e.source_id], idDict[e.target_id], 1.0));\n    });\n    return [g, idDict];\n}\n\n/**\n * Convert Argo-lite snapshot to the GEXF format.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function convertToGexf(snapshot) {\n    return null;\n}\n\n/**\n * Calculate the average clustering coefficient of the (undirected unweighted) graph.\n * @param {*} snapshot Argo-lite Snapshot Object exported by GraphStore\n */\nexport function averageClusteringCoefficient(snapshot) {\n    const jsnxGraph = convertToJsnx(snapshot);\n    const result = jsnx.averageClustering(jsnxGraph);\n    console.log('Computing Clustering Coefficient');\n    return result;\n}\n\n/**\n * Calculate the number of connected components in a graph\n * @param {*} rawGraph the rawGraph inside appState\n */\nexport function connectedComponents(snapshot) {\n    var cc = new jsgraphs.ConnectedComponents(convertToJSGraph(snapshot)[0]);\n    return cc.componentCount();\n}\n\n/**\n * Calculate the density of a graph\n * @param {*} rawGraph the rawGraph inside appState\n */\nexport function graphDensity(snapshot) {\n    const nodeCount = snapshot.rawGraph.nodes.length;\n    const edgeCount = snapshot.rawGraph.edges.length / 2;\n    return (2 * edgeCount) / ((nodeCount) * (nodeCount - 1));\n}\n\n/**\n * Calculate the average degree of a graph\n * @param {*} rawGraph the rawGraph inside appState\n */\nexport function averageDegree(snapshot) {\n    let sum = 0;\n    snapshot.rawGraph.nodes.forEach(e => {\n            sum += e.degree;\n        }\n    )\n    return sum / snapshot.rawGraph.nodes.length;\n}\n\n/**\n * Calculate the diameter of a graph\n * @param {*} rawGraph the rawGraph inside appState\n */\nexport function exactGraphDiameter(snapshot) {\n    let temp = convertToJSGraphWeightedDi(snapshot);\n    let jsg = temp[0];\n    let idDict = temp[1]\n    let dia = -1;\n    snapshot.rawGraph.nodes.forEach(e => {\n        let dijkstra = new jsgraphs.Dijkstra(jsg, idDict[e.id]);\n        snapshot.rawGraph.nodes.forEach(f => {\n            if(dijkstra.hasPathTo(idDict[f.id])){\n                let pathLength = dijkstra.pathTo(idDict[f.id]).length;\n                dia = Math.max(dia, pathLength);\n            }\n        })\n    });\n    return dia;\n}\n ","import { observable, computed, action, runInAction } from \"mobx\";\nimport createGraph from \"ngraph.graph\";\nimport { scales } from \"../constants/index\";\nimport uniq from \"lodash/uniq\";\nimport { averageClusteringCoefficient, connectedComponents, graphDensity, averageDegree, exactGraphDiameter} from \"../services/AlgorithmUtils\";\nimport { ContextMenu, MenuFactory, MenuItemFactory } from \"@blueprintjs/core\";\nimport { Frame } from \"../graph-frontend\";\n\nexport default class GraphStore {\n\n  initialGlobalConfig = {\n    nodes: {\n      colorBy: \"pagerank\",\n      color: {\n        scale: \"Linear Scale\",\n        from: \"#448AFF\",\n        to: \"#E91E63\"\n      },\n      sizeBy: \"pagerank\",\n      size: {\n        min: 2,\n        max: 10,\n        scale: \"Linear Scale\"\n      },\n      labelBy: \"node_id\",\n      shape: \"circle\",\n      labelSize: 1,\n      labelLength: 10\n    },\n  }\n\n  @observable\n  nodes = this.initialGlobalConfig.nodes;\n\n  @observable enableDegree = true;\n  @observable enableDensity = true;\n  @observable enableDiameter = false;\n  @observable enableCoefficient = true;\n  @observable enableComponent = true;\n\n  // Updated by frame event\n  @observable selectedNodes = [];\n  // Cache the single node that's been selected last time\n  // and will not update unless exactly one node is selected again\n  // useful for NeighborDialog\n  _lastSelectedSingleNode = null;\n  @computed \n  get lastSelectedSingleNode() {\n    if (this.selectedNodes.length === 1) {\n      this._lastSelectedSingleNode = this.selectedNodes[0];\n    }\n    return this._lastSelectedSingleNode;\n  }\n  // Updated by frame event. Not being listened, only used to save label visibility.\n  nodesShowingLabels = [];\n  // Used by autorun during snapshot loading.\n  @observable initialNodesShowingLabels = [];\n\n  @observable\n  overrideConfig = {\n    color: \"#000\",\n    size: 5,\n    label: \"\",\n    shape: \"circle\"\n  };\n\n  @observable\n  rawGraph = {\n    nodes: [],\n    edges: []\n  };\n\n  @observable\n  metadata = {\n    fullNodes: 0,\n    fullEdges: 0,\n    nodeProperties: [],\n    nodeComputed: [\"pagerank\", \"degree\"],\n    edgeProperties: [],\n    snapshotName: \"loading...\" // Optional: for display in Argo-lite only\n  };\n\n  // used for listing all the properties, either original or computed\n  @computed\n  get allPropertiesKeyList() {\n    return uniq([\n      ...this.metadata.nodeProperties,\n      ...this.metadata.nodeComputed\n    ]).filter(k => k !== 'id'); // since node_id is already present\n  }\n\n  @observable.ref frame = null;\n  @observable.ref positions = null;\n\n  @observable overrides = new Map();\n  @observable searchOrder = \"degree\";\n\n  hasGraphLoaded = false;\n\n  @computed\n  get hasGraph() {\n    if (this.rawGraph.nodes.length > 0) {\n      this.hasGraphLoaded = true;\n    }\n    return this.hasGraphLoaded;\n  }\n\n  @computed\n  get minMax() {\n    const ret = {};\n    for (const p of [\n      ...this.metadata.nodeProperties,\n      ...this.metadata.nodeComputed\n    ]) {\n      let min = Number.MAX_VALUE;\n      let max = Number.MIN_VALUE;\n\n      for (const n of this.rawGraph.nodes) {\n        min = Math.max(Math.min(min, n[p]), 0.0000001);\n        max = Math.max(max, n[p]);\n      }\n\n      ret[p] = [min, max];\n    }\n    return ret;\n  }\n\n  @computed\n  get nodeSizeScale() {\n    return scales[this.nodes.size.scale]()\n      .domain(this.minMax[this.nodes.sizeBy])\n      .range([this.nodes.size.min, this.nodes.size.max]);\n  }\n\n  @computed\n  get nodeColorScale() {\n    return scales[this.nodes.color.scale]()\n      .domain(this.minMax[this.nodes.colorBy])\n      .range([this.nodes.color.from, this.nodes.color.to]);\n  }\n\n  // Return raw graph nodes that is neighbor with the selected node,\n  // excluding the node itself.\n  getNeighborNodesFromRawGraph(selectedNodeId) {\n    const setOfNeighborIds = new Set();\n    this.rawGraph.edges.forEach(e => {\n        const source = e.source_id.toString();\n        const target = e.target_id.toString();\n        if (source === selectedNodeId && target !== selectedNodeId) {\n            setOfNeighborIds.add(target);\n        }\n        if (target === selectedNodeId && source !== selectedNodeId) {\n            setOfNeighborIds.add(source);\n        }\n    });\n    return this.rawGraph.nodes.filter(node => setOfNeighborIds.has(node.id.toString()));\n  }\n\n  // Triggers autorun in stores/index.js to sent computedGraph to graph-frontend.\n  @computed\n  get computedGraph() {\n    const graph = createGraph();\n    this.rawGraph.nodes.forEach(n => {\n      // If isHidden flag is defined and true, ignore the node in graph-frontend.\n      if (n.isHidden) {\n        return;\n      }\n      const override = this.overrides.get(n.id.toString());\n      graph.addNode(n.id.toString(), {\n        label: (override && override.get(\"label\")) || n[this.nodes.labelBy],\n        size:\n          (override && override.get(\"size\")) ||\n          this.nodeSizeScale(n[this.nodes.sizeBy]),\n        color:\n          (override && override.get(\"color\")) ||\n          this.nodeColorScale(n[this.nodes.colorBy]),\n        shape: (override && override.get(\"shape\")) || n[this.nodes.shape],\n        ref: n\n      });\n    });\n\n    this.rawGraph.edges.forEach(e => {\n      // If isHidden flag is defined and true on an associated node,\n      // leave out its related edges.\n      if (graph.hasNode(e.source_id.toString()) && graph.hasNode(e.target_id.toString())) {\n        graph.addLink(e.source_id.toString(), e.target_id.toString());\n      }\n    });\n\n    return graph;\n  }\n\n  @computed\n  get numHiddenNodes() {\n    return this.rawGraph.nodes.filter(n => n.isHidden).length;\n  }\n\n  showNodes(nodeids) {\n    runInAction('show hidden nodes by ids', () => {\n      this.rawGraph.nodes = this.rawGraph.nodes.map(n => {\n        if (nodeids.includes(n.id)) {\n          return {...n, isHidden: false};\n        }\n        return n;\n      });\n    });\n  }\n\n  hideNodes(nodeids) {\n    runInAction('hide nodes by ids', () => {\n      this.frame.removeNodesByIds(nodeids);\n      this.rawGraph.nodes = this.rawGraph.nodes.map(n => {\n        if (nodeids.includes(n.id)) {\n          return {...n, isHidden: true};\n        }\n        return n;\n      });\n    });\n  }\n\n  removeNodes(nodeids) {\n    runInAction('remove nodes by ids', () => {\n      this.frame.removeNodesByIds(nodeids);\n      this.rawGraph.nodes = this.rawGraph.nodes.filter(\n        n => !nodeids.includes(n.id)\n      );\n      this.rawGraph.edges = this.rawGraph.edges.filter(\n        e => !nodeids.includes(e.source_id) && !nodeids.includes(e.target_id)\n      );\n    });\n  }\n\n  getSnapshot() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n      overrides: this.overrides,\n      nodesShowingLabels: this.nodesShowingLabels,\n      positions: this.frame.getPositions(),\n      metadata: this.metadata,\n      global: {\n        nodes: this.nodes,\n      },\n    };\n    return snapshot;\n  }\n\n  /**\n   * [Argo-lite] Saves graph snapshot as String\n   * \n   * Note that Argo-lite snapshot contains all graph data\n   * and metadata except nodes/edges deleted by users.\n   * This is different from Argo-electron snapshot.\n   */\n  saveImmediateStates(optionalConfig) {\n    const snapshot = this.getSnapshot();\n    // TODO: add corresponding options on frontend\n    // The optional options allows users to leave out\n    // certain app state when saving snapshot\n    if (optionalConfig) {\n      if (optionalConfig.noPosition) {\n        snapshot.positions = undefined;\n      }\n      if (optionalConfig.noGlobal) {\n        snapshot.global = undefined;\n      }\n      if (optionalConfig.noOverride) {\n        snapshot.overrides = undefined;\n      }\n    }\n    return JSON.stringify(snapshot);\n  }\n\n  @action\n  loadImmediateStates(savedStatesStr) {\n    const savedStates = JSON.parse(savedStatesStr);\n    if (!savedStates) {\n      return;\n    }\n    const savedOverrides = new Map(\n      Object.entries(savedStates.overrides).map(([k, v]) => [\n        k,\n        new Map(Object.entries(v))\n      ])\n    );\n    this.overrides.clear();\n    this.overrides.merge(savedOverrides);\n\n    if (savedStates.metadata) {\n      this.metadata = savedStates.metadata;\n    }\n    if (savedStates.global) {\n      this.nodes = savedStates.global.nodes;\n    }\n\n    // The following lines trigger autoruns.\n    this.rawGraph = savedStates.rawGraph;\n    if (savedStates.positions) {\n      this.positions = savedStates.positions;\n    }\n    if (savedStates.nodesShowingLabels) {\n      this.initialNodesShowingLabels = savedStates.nodesShowingLabels;\n      this.nodesShowingLabels = savedStates.nodesShowingLabels;\n    }\n  }\n\n  setUpFrame() {\n    const graphFrame = new Frame(this.computedGraph);\n    graphFrame.init();\n    graphFrame.display();\n    this.frame = graphFrame;\n    graphFrame.ee.on(\"select-nodes\", nodes => {\n      this.selectedNodes = nodes;\n    });\n    graphFrame.ee.on(\"show-node-label\", nodes => {\n      this.nodesShowingLabels = nodes;\n    });\n    graphFrame.ee.on(\"right-click\", data => {\n      const menu = MenuFactory({\n        children: [\n          MenuItemFactory({\n            onClick: () => {\n              this.frame.toggleSelectedLabels();\n            },\n            text: 'Toggle Labels',\n            key: 'Toggle Labels'\n          }),\n          MenuItemFactory({\n            onClick: () => {\n              this.frame.unpinSelectedNodes();\n            },\n            text: 'Unpin Selected',\n            key: 'Unpin Selected'\n          }),\n          this.frame.rightClickedNode && MenuItemFactory({\n            onClick: () => {\n              if (this.frame.rightClickedNode) {\n                const rightClickedNodeId = this.frame.rightClickedNode.data.ref.id.toString();\n                const neighbors = this.getNeighborNodesFromRawGraph(rightClickedNodeId);\n                neighbors.sort((n1, n2) => {\n                  if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\n                      return n2[\"pagerank\"] - n1[\"pagerank\"];\n                  }\n                  return 0;\n                });\n                const ids = [];\n                for (let i = 0; i < 5 && i < neighbors.length; i++) {\n                  ids.push(neighbors[i].id);\n                }\n                this.showNodes(ids);\n              }\n            },\n            text: 'Show 5 Neighbors with Highest PageRank',\n            key: 'Show 5 Neighbors with Highest PageRank'\n          }),\n        ]\n      });\n      ContextMenu.show(menu, { left: data.pageX, top: data.pageY }, () => {\n        // onMenuClose\n        console.log(\"ContextMenu closed\");\n      });\n    });\n  }\n\n /*\n  * Graph algorithms used in StatisticsDialog.\n  */\n \n  get averageClustering() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return averageClusteringCoefficient(snapshot);\n  }\n\n \n  get components() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return connectedComponents(snapshot);\n  }\n\n  @computed\n  get density() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return graphDensity(snapshot);\n  }\n\n  @computed\n  get degree() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return averageDegree(snapshot);\n  }\n\n  @computed\n  get diameter() {\n    const snapshot = {\n      rawGraph: this.rawGraph,\n    };\n    return exactGraphDiameter(snapshot);\n  }\n}\n\n","import { observable } from \"mobx\";\n\nexport default class ImportStore {\n  @observable graphFile = \"\";\n  @observable stateFile = \"\";\n\n  @observable dialogOpen = false;\n  @observable gexfDialogOpen = false;\n\n  @observable loading = false;\n\n  // Argo-lite specific: File object selected via the file input.\n  @observable selectedEdgeFileFromInput = null;\n  @observable selectedNodeFileFromInput = null;\n\n  @observable selectedGexfFileFromInput = null;\n\n  @observable\n  importConfig = {\n    nodeFile: {\n      path: \"\",\n      topN: [],\n      hasColumns: true,\n      ready: false, // whether the topN is ready to display\n      columns: [],\n      mapping: {\n        id: \"<UNK>\"\n      },\n      delimiter: \",\"\n    },\n    edgeFile: {\n      path: \"\",\n      ready: false,\n      hasColumns: true,\n      columns: [],\n      topN: [],\n      mapping: {\n        fromId: \"<UNK>\",\n        toId: \"<UNK>\"\n      },\n      createMissing: true,\n      delimiter: \",\"\n    }\n  };\n\n  /*\n    Post Import Filtering related options.\n  */\n\n  postImportFilteringOptions = {\n    \"top 10 nodes with highest PageRank scores\": (rawGraph) => {\n      const sortedList = [...rawGraph.nodes];\n      sortedList.sort((n1, n2) => {\n          if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\n              return n2[\"pagerank\"] - n1[\"pagerank\"];\n          }\n          return 0;\n      });\n      const setIds = new Set();\n      for (let i = 0; i < 10 && i < sortedList.length; i++) {\n        setIds.add(sortedList[i].id);\n      }\n      rawGraph.nodes = rawGraph.nodes.map(n => {\n        if (setIds.has(n.id)) {\n          return {...n, isHidden: false};\n        }\n        return n;\n      });\n    },\n    \"All Nodes\": (rawGraph) => {\n      rawGraph.nodes = rawGraph.nodes.map(n => ({...n, isHidden: false}));\n    },\n  };\n\n  defaultPostImportFilteringOption = \"top 10 nodes with highest PageRank scores\";\n  \n  @observable selectedPostImportFilteringOption = this.defaultPostImportFilteringOption;\n\n  postImportFilter(rawGraph) {\n    // Hide all nodes by default, use filtering option to show them.\n    rawGraph.nodes = rawGraph.nodes.map(n => ({...n, isHidden: true}));\n    // Run the selected post import filtering option.\n    this.postImportFilteringOptions[this.selectedPostImportFilteringOption](rawGraph);\n  }\n\n\n}\n","import { observable } from \"mobx\";\n\nexport default class ProjectStore {\n \n  @observable projects = [];\n\n  /*\n   * Active project and snapshot\n   */\n  @observable currentProject = null;\n  // @observable currentProjectName = null;\n  // @observable currentProjectPath = null;\n  @observable currentSnapshotName = \"Quick Save\"; // TODO: If not loaded from snapshot, use this, otherwise use the name of the loaded snapshot\n\n  // [Argo-lite] for displaying snapshot file in textarea to be copied\n  @observable stringCopyOfSnapshot = 'Loading';\n  \n  /*\n   * Dialogs and UI\n   */\n  @observable isNewProjectDialogOpen = false;\n  @observable isProjectDetailDialogOpen = false;\n  @observable isSaveSnapshotDialogOpen = false;\n  @observable isRenameSnapshotDialogOpen = false;\n  // when the ipc returns the projects data for the first time\n  // turn off `isFetching` so that the spinner of WorkspaceView will be turned off\n  // Also used when refreshing WorkspaceView\n  @observable isFetching = true;\n\n  /*\n   * New project creation and import\n   */\n  @observable newProjectName = '';\n}\n","import { observable } from \"mobx\";\n\nexport default class SearchStore {\n  @observable searchStr = \"\";\n  @observable candidates = [];\n  @observable numCandidates = 0;\n  @observable panelOpen = false;\n}\n","import { autorun, runInAction } from \"mobx\";\nimport { Intent } from \"@blueprintjs/core\";\n\nimport PreferencesStore from \"./PreferencesStore\";\nimport GraphStore from \"./GraphStore\";\nimport ImportStore from \"./ImportStore\";\nimport ProjectStore from \"./ProjectStore\";\n// import { peakCSV } from \"../services/CSVUtils\";\nimport parse from \"csv-parse/lib/sync\";\nimport SearchStore from \"./SearchStore\";\nimport { runSearch } from \"../ipc/client\";\n\nimport { BACKEND_URL } from \"../constants\";\nimport { toaster } from '../notifications/client';\n\nexport class AppState {\n  constructor() {\n    this.preferences = new PreferencesStore();\n    this.graph = new GraphStore();\n    this.import = new ImportStore();\n    this.search = new SearchStore();\n    this.project = new ProjectStore();\n  }\n}\n\nconst appState = new AppState();\n\nwindow.appState = appState;\n\nconst loadSnapshotFromURL = (url) => {\n  return fetch(url, {\n    method: 'GET',\n    mode: 'cors'\n  }).then(response => response.text()).catch(error => {\n    toaster.show({\n      message: 'Failed to fetch graph snapshot',\n      intent: Intent.DANGER,\n      timeout: -1\n    });\n    console.error(error);\n  });\n};\n\nconst loadSnapshotFromStrapi = (uuid) => {\n  const url = `${BACKEND_URL}/snapshots?uuid=${uuid}`;\n  return fetch(url, {\n    method: 'GET',\n    mode: 'cors'\n  }).then(response => response.json()).then(json => json[0].body).catch(error => {\n    toaster.show({\n      message: 'Failed to fetch graph snapshot',\n      intent: Intent.DANGER,\n      timeout: -1\n    });\n    console.error(error);\n  });\n};\n\nconst loadAndDisplaySnapshotFromURL = (url) => {\n  loadSnapshotFromURL(url).then(snapshotString => {\n    // use filename/last segment of URL as title in Navbar\n    appState.graph.metadata.snapshotName = url.split('/').pop() || url.split('/').pop().pop();\n    appState.graph.loadImmediateStates(snapshotString);\n  });\n};\n\nconst loadAndDisplaySnapshotFromStrapi = (uuid) => {\n  loadSnapshotFromStrapi(uuid).then(snapshotString => {\n    // TODO: use more sensible snapshot name\n    appState.graph.metadata.snapshotName = 'Shared';\n    appState.graph.loadImmediateStates(snapshotString);\n  });\n};\n\nwindow.loadAndDisplaySnapshotFromURL = loadAndDisplaySnapshotFromURL;\nwindow.loadAndDisplaySnapshotFromStrapi = loadAndDisplaySnapshotFromStrapi;\n\nwindow.loadInitialSampleGraph = async () => {\n  // default fallback url\n  let url = \"https://argo-graph-lite.s3.amazonaws.com/lesmiserables.json\";\n\n  // check url hash\n  if (window.location.hash) {\n    const hash = window.location.hash.substring(1);\n    // If the hash component begins with http.\n    if (hash.length >= 4 && hash.startsWith('http')) {\n      try {\n        url = decodeURIComponent(hash);\n      } catch (e) {\n        console.error(e);\n        alert('Provided URL is not valid.');\n      }\n    } else {\n      // If the hash component does not begin with http\n      // treat it as a uuid in strapi.\n      loadAndDisplaySnapshotFromStrapi(hash);\n      return;\n    }\n    \n  }\n  loadAndDisplaySnapshotFromURL(url)\n};\n\nwindow.saveSnapshotToString = () => {\n  const snapshotString = appState.graph.saveImmediateStates();\n  return snapshotString;\n};\n\n// Load initial sample graph when Argo Lite is ready\nwindow.addEventListener('load', (event) => {\n  window.loadInitialSampleGraph();\n});\n\nconst updateTimeout = null;\n\n// Load graph on frontend once the rawGraph has been returned from IPC\n// Once a graph has been loaded and displayed, even if nodes are all deleted, still consider it \"hasGraph\"\nautorun(() => {\n  if (!appState.graph.hasGraph && appState.graph.rawGraph.nodes.length > 0) {\n    appState.graph.hasGraph = true;\n  }\n})\n\nautorun(() => {\n  if (appState.graph.frame) {\n    appState.graph.frame.updateGraph(appState.graph.computedGraph);\n    appState.graph.frame.setAllNodesShapeWithOverride(appState.graph.nodes.shape, appState.graph.overrides);\n    appState.graph.frame.setLabelRelativeSize(appState.graph.nodes.labelSize);\n    appState.graph.frame.setLabelLength(appState.graph.nodes.labelLength);\n  }\n});\n\nautorun(() => {\n  if (appState.graph.frame && appState.graph.positions) {\n    // If positions are saved in a snapshot, pause layout upon loading.\n    appState.graph.frame.paused = true;\n    appState.graph.frame.updatePositions(appState.graph.positions);\n    appState.graph.positions = null;\n    console.log('[autorun] Positions updated.');\n  }\n  if (appState.graph.frame && appState.graph.initialNodesShowingLabels) {\n    appState.graph.frame.showLabels(appState.graph.initialNodesShowingLabels);\n    appState.graph.initialNodesShowingLabels = null;\n  }\n});\n\nautorun(() => {\n  const searchStr = appState.search.searchStr;\n  if (searchStr.length >= 3) {\n    runSearch(searchStr);\n  } else {\n    appState.search.panelOpen = false;\n    appState.search.candidates.splice(0, appState.search.candidates.length);\n    if (appState.graph.frame) {\n      appState.graph.frame.highlightNodeIds([], true);\n    }\n  }\n});\n\n// Argo-lite specific: extract CSV from File object and update related fields.\nautorun(() => {\n  const file = appState.import.selectedEdgeFileFromInput;\n  const hasHeader = appState.import.importConfig.edgeFile.hasColumns;\n  const delimiter = appState.import.importConfig.edgeFile.delimiter;\n\n  if (!file) {\n    return;\n  }\n  const reader = new FileReader();\n  reader.readAsText(file);\n\n  reader.onload = () => {\n    // Read entire CSV into memory as string\n    const fileAsString = reader.result;\n    // Get top 20 lines. Or if there's less than 10 line, get all the lines.\n    const lines = fileAsString.split('\\n');\n    const lineNumber = lines.length;\n    const topLinesAsString = lines.map(l => l.trim()).filter((l, i) => i < 20).join('\\n');\n    console.log(topLinesAsString);\n\n    // Parse the top lines\n    try {\n      const it = hasHeader ? parse(topLinesAsString, {\n        comment: \"#\",\n        trim: true,\n        auto_parse: true,\n        skip_empty_lines: true,\n        columns: hasHeader,\n        delimiter\n      }) : parse(topLinesAsString, {\n        comment: \"#\",\n        trim: true,\n        auto_parse: true,\n        skip_empty_lines: true,\n        columns: undefined,\n        delimiter\n      });\n      runInAction(\"preview top N lines of edge file\", () => {\n        appState.import.importConfig.edgeFile.topN = it;\n        appState.import.importConfig.edgeFile.columns = Object.keys(it[0]).map(key => `${key}`);\n        appState.import.importConfig.edgeFile.mapping.fromId = appState.import.importConfig.edgeFile.columns[0];\n        appState.import.importConfig.edgeFile.mapping.toId = appState.import.importConfig.edgeFile.columns[1];\n        appState.import.importConfig.edgeFile.ready = true;\n      });\n    } catch {\n      toaster.show({\n        message: 'Error: Fails to parse file',\n        intent: Intent.DANGER,\n        timeout: -1\n      });\n    }\n  };\n\n  reader.onerror = () => {\n    console.error(reader.error);\n    toaster.show({\n      message: 'Error: Fails to open file',\n      intent: Intent.DANGER,\n      timeout: -1\n    });\n  };\n});\n\nautorun(() => {\n  const file = appState.import.selectedNodeFileFromInput;\n  const hasHeader = appState.import.importConfig.nodeFile.hasColumns;\n  const delimiter = appState.import.importConfig.nodeFile.delimiter;\n\n  if (!file) {\n    return;\n  }\n  const reader = new FileReader();\n  reader.readAsText(file);\n\n  reader.onload = () => {\n    // Read entire CSV into memory as string\n    const fileAsString = reader.result;\n    // Get top 20 lines. Or if there's less than 10 line, get all the lines.\n    const lines = fileAsString.split('\\n');\n    const lineNumber = lines.length;\n    const topLinesAsString = lines.map(l => l.trim()).filter((l, i) => i < 20).join('\\n');\n    console.log(topLinesAsString);\n\n    // Parse the top lines\n    try {\n      const it = hasHeader ? parse(topLinesAsString, {\n        comment: \"#\",\n        trim: true,\n        auto_parse: true,\n        skip_empty_lines: true,\n        columns: hasHeader,\n        delimiter\n      }) : parse(topLinesAsString, {\n        comment: \"#\",\n        trim: true,\n        auto_parse: true,\n        skip_empty_lines: true,\n        columns: undefined,\n        delimiter\n      });\n\n      runInAction(\"preview top N lines of node file\", () => {\n        appState.import.importConfig.nodeFile.topN = it;\n        appState.import.importConfig.nodeFile.columns = Object.keys(it[0]).map(key => `${key}`);\n        appState.import.importConfig.nodeFile.mapping.id = appState.import.importConfig.nodeFile.columns[0];\n        appState.import.importConfig.nodeFile.ready = true;\n      });\n    } catch {\n      toaster.show({\n        message: 'Error: Fails to open file',\n        intent: Intent.DANGER,\n        timeout: -1\n      });\n    }\n  };\n\n  reader.onerror = () => {\n    console.error(reader.error);\n    toaster.show({\n      message: 'Error: Fails to open file',\n      intent: Intent.DANGER,\n      timeout: -1\n    });\n  };\n});\n\nexport default appState;\n","import React from \"react\";\nimport { Button, Classes, Dialog, Intent, Switch } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport { requestChangeWorkspace } from \"../ipc/client\";\n\n@observer\nclass PreferencesDialog extends React.Component {\n  render() {\n    return (\n      <Dialog\n        iconName=\"cog\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.preferences.dialogOpen}\n        onClose={() => {\n          appState.preferences.dialogOpen = false;\n        }}\n        title=\"Preferences\"\n      >\n        <div className=\"pt-dialog-body\">\n          <Switch\n            label=\"Dark Mode\"\n            checked={appState.preferences.darkMode}\n            onChange={() => {\n              appState.preferences.darkMode = !appState.preferences.darkMode;\n              appState.preferences.saveUserConfig();\n              if (appState.graph.frame) {\n                appState.graph.frame.toggleDark();\n              }\n            }}\n          />\n          \n          <Switch\n           label=\"Minimap\"\n           checked={appState.preferences.minimapShowing}\n           onChange={() => {\n            appState.preferences.minimapShowing = !appState.preferences.minimapShowing;\n            appState.preferences.saveUserConfig();\n            if (appState.graph.frame) {\n              if (appState.preferences.minimapShowing) {\n                appState.graph.frame.showMiniMap();\n              } else {\n                appState.graph.frame.hideMiniMap();\n              }\n            } else {\n              console.log(\"Frame not ready when trying to toggle minimap.\");\n            }\n           }}\n          />\n        </div>\n        <div className=\"pt-dialog-footer\">\n          <div className=\"pt-dialog-footer-actions\">\n            <Button\n              intent={Intent.PRIMARY}\n              onClick={() => {\n                appState.preferences.dialogOpen = false;\n              }}\n              text=\"Done\"\n            />\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default PreferencesDialog;","import React from \"react\";\nimport { Button, Classes, Collapse } from \"@blueprintjs/core\";\nimport classnames from \"classnames\";\n\nexport default ({ name, isOpen, onToggle, children }) => (\n  <div>\n    <Button\n      className={classnames(Classes.FILL, Classes.MINIMAL, \"text-align-left\")}\n      rightIconName={isOpen ? \"chevron-up\" : \"chevron-down\"}\n      onClick={onToggle}\n    >\n      {name}\n    </Button>\n    <Collapse isOpen={isOpen}>{children}</Collapse>\n  </div>\n);\n","import React from \"react\";\nimport { Classes, MenuItem } from \"@blueprintjs/core\";\n\nexport default ({ handleClick, item, isActive }) => (\n  <MenuItem\n    className={isActive ? Classes.ACTIVE : \"\"}\n    key={item}\n    onClick={handleClick}\n    text={item}\n  />\n);\n","import React from \"react\";\nimport { Button, Classes } from \"@blueprintjs/core\";\nimport { Select } from \"@blueprintjs/labs\";\nimport CommonItemRenderer from \"./CommonItemRenderer\";\n\nexport default ({ items, onSelect, value, fill = false }) => (\n  <Select\n    items={items}\n    itemRenderer={CommonItemRenderer}\n    filterable={false}\n    onItemSelect={onSelect}\n  >\n    <Button className={fill ? Classes.FILL : null} text={value} />\n  </Select>\n);\n","/* eslint-disable jsx-a11y/label-has-for */\nimport React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Spinner,\n  Switch,\n  FileInput\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\n\n@observer\nclass PostImportOptions extends React.Component {\n  render() {\n    return (\n      <div>\n            After import, show:\n            <SimpleSelect\n                items={Object.keys(appState.import.postImportFilteringOptions)}\n                value={appState.import.selectedPostImportFilteringOption}\n                onSelect={(selected) => {\n                    appState.import.selectedPostImportFilteringOption = selected;\n                }}\n            />\n      </div>\n    );\n  }\n}\n\nexport default PostImportOptions;","/* eslint-disable jsx-a11y/label-has-for */\nimport React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Spinner,\n  Switch\n} from \"@blueprintjs/core\";\nimport { Cell, Column, Table } from \"@blueprintjs/table\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport {\n  requestChooseEdgeFile,\n  requestChooseNodeFile,\n  requestImportGraphFromCSV,\n  requestCreateNewProject\n} from \"../ipc/client\";\nimport Collapsable from \"./utils/Collapsable\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport { NODE_AND_EDGE_FILE, ONLY_EDGE_FILE } from \"../constants/index\";\nimport PostImportOptions from './PostImportOptions';\n\n@observer\nclass PreviewTable extends React.Component {\n  render() {\n    const file = this.props.file;\n    return (\n      <Table\n        className=\"import-preview-table\"\n        numRows={file.topN.length}\n        selectedRegions={Object.values(file.mapping)\n          .map(it => file.columns.indexOf(it))\n          .map(it => ({ rows: null, cols: [it, it] }))}\n      >\n        {file.columns.map(it => (\n          <Column\n            key={it}\n            name={it}\n            renderCell={i => <Cell>{file.topN[i][it]}</Cell>}\n          />\n        ))}\n      </Table>\n    );\n  }\n}\n\n@observer\nclass ImportDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      available: ONLY_EDGE_FILE,\n      nodesOpen: true,\n      edgesOpen: true,\n      delimiter: ','\n    };\n  }\n\n  changeAvailable = targetValue => {\n    if (targetValue === ONLY_EDGE_FILE) {\n      appState.import.importConfig.edgeFile.createMissing = true;\n    }\n    this.setState({ available: targetValue });\n  };\n\n  canImport = () => {\n    if (this.state.available === NODE_AND_EDGE_FILE) {\n      return (\n        appState.import.importConfig.edgeFile.ready &&\n        appState.import.importConfig.nodeFile.ready\n      );\n    } else if (this.state.available === ONLY_EDGE_FILE) {\n      return appState.import.importConfig.edgeFile.ready;\n    }\n    return false;\n  };\n\n  renderNodesSelection = () => {\n    const nodeFile = appState.import.importConfig.nodeFile;\n    if (this.state.available === ONLY_EDGE_FILE) {\n      return null;\n    }\n    return (\n      <Collapsable\n        name=\"Nodes\"\n        isOpen={this.state.nodesOpen}\n        onToggle={() => this.setState({ nodesOpen: !this.state.nodesOpen })}\n      >\n        <div className={classnames(Classes.CONTROL_GROUP)}>\n          <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n            <input\n              type=\"file\"\n              className={classnames(Classes.DISABLED)}\n              onChange={(event) => {\n                if (event.target.files.length < 1) {\n                  return;\n                }\n                appState.import.selectedNodeFileFromInput = event.target.files[0];\n              }}\n            />\n          </div>\n        </div>\n        <Switch\n          label=\"Has Headers\"\n          checked={nodeFile.hasColumns}\n          onChange={() => (nodeFile.hasColumns = !nodeFile.hasColumns)}\n        />\n        {nodeFile.ready && (\n          <div className=\"column-selection\">\n            <PreviewTable file={nodeFile} />\n            Column for Node ID:\n            <SimpleSelect\n              items={nodeFile.columns}\n              value={nodeFile.mapping.id}\n              onSelect={it => (nodeFile.mapping.id = it)}\n            />\n          </div>\n        )}\n      </Collapsable>\n    );\n  };\n\n  renderEdgesSelection = () => {\n    const edgeFile = appState.import.importConfig.edgeFile;\n    return (\n      <Collapsable\n        name=\"Edges\"\n        isOpen={this.state.edgesOpen}\n        onToggle={() => this.setState({ edgesOpen: !this.state.edgesOpen })}\n      >\n        <div className={classnames(Classes.CONTROL_GROUP)}>\n          <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n            <input\n              type=\"file\"\n              className={classnames(Classes.DISABLED)}\n              onChange={(event) => {\n                if (event.target.files.length < 1) {\n                  return;\n                }\n                appState.import.selectedEdgeFileFromInput = event.target.files[0];\n              }}\n            />\n          </div>\n        </div>\n        <Switch\n          label=\"Has Headers\"\n          checked={edgeFile.hasColumns}\n          onChange={() => (edgeFile.hasColumns = !edgeFile.hasColumns)}\n        />\n        <Switch\n          label=\"Create Missing Nodes\"\n          checked={edgeFile.createMissing}\n          disabled={this.state.available === ONLY_EDGE_FILE}\n          onChange={() => (edgeFile.createMissing = !edgeFile.createMissing)}\n        />\n        {edgeFile.ready && (\n          <div className=\"column-selection\">\n            <PreviewTable file={edgeFile} />\n            Column for Source ID:\n            <SimpleSelect\n              items={edgeFile.columns}\n              value={edgeFile.mapping.fromId}\n              onSelect={it => (edgeFile.mapping.fromId = it)}\n            />{\" \"}\n            <br />\n            Column for Target ID:\n            <SimpleSelect\n              items={edgeFile.columns}\n              value={edgeFile.mapping.toId}\n              onSelect={it => (edgeFile.mapping.toId = it)}\n            />\n          </div>\n        )}\n      </Collapsable>\n    );\n  };\n\n  updateDelimiter (newDelimiter) {\n    this.setState({delimiter: newDelimiter});\n\n    if (newDelimiter == \"\\\\t\") {\n      newDelimiter = \"\\t\"\n    }\n\n    appState.import.importConfig.edgeFile.delimiter = newDelimiter\n    appState.import.importConfig.nodeFile.delimiter = newDelimiter\n  }\n\n  renderDelimiterSelection() {\n    return (\n      <div className=\"column-selection\">\n        Selected Delimiter\n        <SimpleSelect\n          items={[\",\", \"\\\\t\", \";\"]}\n          value={this.state.delimiter}\n          onSelect={it => { this.updateDelimiter(it) }}\n        />{\" \"}\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.import.dialogOpen}\n        onClose={() => {\n          appState.import.dialogOpen = false;\n        }}\n        title=\"Import CSV\"\n      >\n        {appState.import.loading ? (\n          <Spinner />\n        ) : (\n          <div>\n            <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\n              I have:\n              <SimpleSelect\n                items={[ONLY_EDGE_FILE, NODE_AND_EDGE_FILE]}\n                value={this.state.available}\n                onSelect={this.changeAvailable}\n              />\n              {this.renderNodesSelection()}\n              {this.renderEdgesSelection()}\n              {this.renderDelimiterSelection()}\n              <hr />\n              <PostImportOptions />\n            </div>\n            <div className={Classes.DIALOG_FOOTER}>\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                <Button\n                  className={classnames({\n                    [Classes.DISABLED]: !this.canImport()\n                  })}\n                  intent={Intent.PRIMARY}\n                  onClick={() => {\n                    // TODO: this might be unsafe, check if there's racing condition\n                    requestCreateNewProject({\n                      name: appState.project.newProjectName,\n                      createdDate: new Date().toLocaleString(),\n                    });\n                    requestImportGraphFromCSV( //edgefile.delimiter and nodefile.delimiter are the same\n                      this.state.available === NODE_AND_EDGE_FILE, appState.import.importConfig.edgeFile.delimiter, appState.project.newProjectName\n                    );\n\n                    // Importing a graph means no label would be shown by default,\n                    // thus turn off label CSSRenderer for better performance.\n                    appState.graph.frame.turnOffLabelCSSRenderer();\n                  }}\n                  text=\"Import\"\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </Dialog>\n    );\n  }\n}\n\nexport default ImportDialog;","/* eslint-disable jsx-a11y/label-has-for */\nimport React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Spinner,\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport {\n  requestImportGraphFromGexf\n} from \"../ipc/client\";\nimport PostImportOptions from './PostImportOptions';\n\n@observer\nclass GEXFImportDialog extends React.Component {\n\n  renderImportButton() {\n    return (\n      <div className={Classes.DIALOG_FOOTER}>\n        <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n          <Button\n            className={classnames({\n              [Classes.DISABLED]: appState.import.selectedGexfFileFromInput == null\n            })}\n            intent={Intent.PRIMARY}\n            onClick={() => {\n              // Temp\n              appState.import.loading = true;\n              requestImportGraphFromGexf();\n            }}\n            text=\"Import\"\n          />\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.import.gexfDialogOpen}\n        onClose={() => {\n          appState.import.gexfDialogOpen = false;\n          appState.import.loading = false;\n        }}\n        title=\"Import GEXF\"\n      >\n        {appState.import.loading ? (\n          <Spinner />\n        ) : (\n          <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\n            <div>\n              <div className={classnames(Classes.CONTROL_GROUP)}>\n                <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n                <input\n                  type=\"file\"\n                  className={classnames(Classes.DISABLED)}\n                  onChange={(event) => {\n                    if (event.target.files.length < 1) {\n                      return;\n                    }\n                    appState.import.selectedGexfFileFromInput = event.target.files[0];\n                  }}\n                />\n              </div>\n            </div>\n            <hr />\n            <PostImportOptions />\n          </div>\n            {this.renderImportButton()}\n          </div>\n        )}\n      </Dialog>\n    );\n  }\n}\n\nexport default GEXFImportDialog;","/* eslint-disable jsx-a11y/label-has-for */\n\n/**\n * [Deprecated] This dialog is only used to open SQlite-based\n * graph file and optionally along with a snapshot file.\n * \n * For Argo-lite, which only has the JSON snapshot file,\n * use OpenSnapshotDialog.\n */\nimport React from \"react\";\nimport { Button, Classes, Dialog, Intent, Spinner } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport {\n  requestChooseGraphFile,\n  requestChooseStateFile,\n  requestOpen\n} from \"../ipc/client\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport {\n  GRAPH_AND_STATE_FILE,\n  ONLY_EDGE_FILE,\n  ONLY_GRAPH_FILE\n} from \"../constants\";\n\n@observer\nclass OpenDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      available: ONLY_GRAPH_FILE,\n      selectedGraph: null,\n      selectedState: null\n    };\n  }\n\n  canImport = () => {\n    if (this.state.available === GRAPH_AND_STATE_FILE) {\n      return appState.import.stateFile && appState.import.graphFile;\n    } else {\n      return appState.import.graphFile;\n    }\n    return false;\n  };\n\n  changeAvailable = targetValue => {\n    if (targetValue === ONLY_EDGE_FILE) {\n      appState.import.importConfig.edgeFile.createMissing = true;\n    }\n    this.setState({ available: targetValue });\n  };\n\n  renderSelectGraph = () => {\n    return (\n      <div className={classnames(Classes.CONTROL_GROUP)}>\n        <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n          <input\n            type=\"text\"\n            className={classnames(Classes.DISABLED, Classes.INPUT)}\n            placeholder=\"Select graph file\"\n            readOnly\n            value={appState.import.graphFile}\n          />\n        </div>\n        <Button intent={Intent.PRIMARY} onClick={requestChooseGraphFile}>\n          Choose File\n        </Button>\n      </div>\n    );\n  };\n\n  renderSelectState = () => {\n    return (\n      <div className={classnames(Classes.CONTROL_GROUP)}>\n        <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n          <input\n            type=\"text\"\n            className={classnames(Classes.DISABLED, Classes.INPUT)}\n            placeholder=\"Select snapshot file\"\n            readOnly\n            value={appState.import.stateFile}\n          />\n        </div>\n        <Button intent={Intent.PRIMARY} onClick={requestChooseStateFile}>\n          Choose File\n        </Button>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.preferences.openDialogOpen}\n        onClose={() => {\n          appState.preferences.openDialogOpen = false;\n        }}\n        title=\"Open File\"\n      >\n        {appState.import.loading ? (\n          <Spinner />\n        ) : (\n          <div>\n            <div className={classnames(Classes.DIALOG_BODY, \"import-dialog\")}>\n              I have:\n              <SimpleSelect\n                items={[GRAPH_AND_STATE_FILE, ONLY_GRAPH_FILE]}\n                value={this.state.available}\n                onSelect={this.changeAvailable}\n              />\n              {this.renderSelectGraph()}\n              {this.state.available === GRAPH_AND_STATE_FILE &&\n                this.renderSelectState()}\n            </div>\n            <div className={Classes.DIALOG_FOOTER}>\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                <Button\n                  className={classnames({\n                    [Classes.DISABLED]: !this.canImport()\n                  })}\n                  intent={Intent.PRIMARY}\n                  onClick={() => {\n                    appState.preferences.openDialogOpen = false;\n                    requestOpen();\n                  }}\n                  text=\"Open\"\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </Dialog>\n    );\n  }\n}\n\nexport default OpenDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Spinner,\n  Switch\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass NewProjectDialog extends React.Component {\n  \n  render() {\n    const isNewProjectNameDuplicate = appState.project.projects.some(p => p.name === appState.project.newProjectName);\n    const isNewProjectNameEmpty = appState.project.newProjectName.trim() === '';\n    const isValidated = !(isNewProjectNameDuplicate || isNewProjectNameEmpty);\n  \n    return (\n      <Dialog\n        iconName=\"projects\"\n        isOpen={appState.project.isNewProjectDialogOpen}\n        onClose={() => {\n          appState.project.isNewProjectDialogOpen = false;\n        }}\n        title=\"Create New Project\"\n      >\n        <div className={Classes.DIALOG_BODY}>\n          <label className=\"pt-label .modifier\">\n            Project Name\n            <span className=\"pt-text-muted\"> (required){isNewProjectNameDuplicate && ' (This name has already been taken!)'}</span>\n            <input\n              className=\"pt-input\"\n              type=\"text\"\n              placeholder=\"New Project\"\n              dir=\"auto\"\n              value={appState.project.newProjectName}\n              onChange={event => {\n                appState.project.newProjectName = event.target.value;\n              }}\n            />\n          </label>\n        </div>\n        <div className={Classes.DIALOG_FOOTER}>\n          <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n            <Button\n              className={classnames({\n                [Classes.DISABLED]: !isValidated\n              })}\n              intent={Intent.PRIMARY}\n              onClick={() => {\n                if (isValidated) {\n                  appState.project.isNewProjectDialogOpen = false;\n                  appState.import.dialogOpen = true;\n                }\n              }}\n              text=\"Next\"\n            />\n          </div>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default NewProjectDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { requestOpen, requestDelete } from \"../ipc/client\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass ProjectDetailDialog extends React.Component {\n  render() {\n    return (\n      appState.project.currentProject && (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.project.isProjectDetailDialogOpen}\n          onClose={() => {\n            appState.project.isProjectDetailDialogOpen = false;\n          }}\n          title={`Load ${appState.project.currentProject.name} Project`}\n        >\n          {appState.project.currentProject.hasGraphData ? (\n            <div className={Classes.DIALOG_BODY}>\n              <Card\n                interactive={true}\n                elevation={Card.ELEVATION_TWO}\n                onClick={() => {\n                  appState.import.graphFile =\n                    appState.project.currentProject.graphDataPath;\n                  appState.project.isProjectDetailDialogOpen = false;\n                  requestOpen();\n                }}\n              >\n                <Icon iconName=\"graph\" /> Start fresh from original graph\n              </Card>\n              <hr />\n              <div className=\"argo-menu-list-header\">Load recent snapshots</div>\n              <div>\n                {appState.project.currentProject.snapshotPaths.map(\n                  snapshotPath => {\n                    return (\n                      <div key={snapshotPath}>\n                        <Card\n                          interactive={false}\n                          elevation={Card.ELEVATION_TWO}\n                        >\n                          {/* <Icon iconName=\"layout\" /> */}\n                          <h5>\n                            {snapshotPath\n                              .replace(/^.*[\\\\\\/]/, \"\")\n                              .replace(/\\.[^/.]+$/, \"\")}\n                          </h5>\n                          <Button\n                            className={classnames([\n                              Classes.BUTTON,\n                              Classes.INTENT_PRIMARY\n                            ])}\n                            onClick={() => {\n                              appState.import.graphFile =\n                                appState.project.currentProject.graphDataPath;\n                              appState.import.stateFile = snapshotPath;\n                              appState.project.currentSnapshotName = snapshotPath\n                                .replace(/^.*[\\\\\\/]/, \"\")\n                                .replace(/\\.[^/.]+$/, \"\");\n                              appState.project.isProjectDetailDialogOpen = false;\n                              requestOpen();\n                            }}\n                          >\n                            Load Snapshot\n                          </Button>\n                          <Button\n                            className={classnames([Classes.BUTTON])}\n                            onClick={() => {\n                                requestDelete(snapshotPath);\n                                appState.project.currentProject.snapshotPaths = appState.project.currentProject.snapshotPaths.filter(\n                                  path => path !== snapshotPath\n                                );\n                            }}\n                          >\n                            Delete\n                          </Button>\n                        </Card>\n                      </div>\n                    );\n                  }\n                )}\n              </div>\n            </div>\n          ) : (\n            <div>\n              Error: Cannot find .argograph file in this project directory.\n            </div>\n          )}\n        </Dialog>\n      )\n    );\n  }\n}\n\nexport default ProjectDetailDialog;","/**\n * [Argo-lite Modified]\n * In electron Argo, snapshots are saved to the active project folder.\n * In Argo-lite, snapshots are saved as a file download.\n * Sometimes, it's tricky to let browser download something without a backend\n * hosting the file. Thus we also allow user to copy paste from\n * a text area containing our snapshot JSON.\n * \n * Remember to change appState.project.stringCopyOfSnapshot\n * before showing the dialog.\n */\nimport React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { requestSaveSnapshot } from \"../ipc/client\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass SaveSnapshotDialog extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     name: \"Quick Save\",\n  //   };\n  // }\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.project.isSaveSnapshotDialogOpen}\n          onClose={() => {\n            appState.project.isSaveSnapshotDialogOpen = false;\n          }}\n          title={`Save Snapshot`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            {/* <label className=\"pt-label .modifier\">\n              Snapshot Name\n              <span className=\"pt-text-muted\"> (required)</span>\n              <input\n                className=\"pt-input\"\n                type=\"text\"\n                placeholder=\"My Snapshot\"\n                dir=\"auto\"\n                value={this.state.name}\n                onChange={event => this.setState({ name: event.target.value })}\n              />\n            </label> */}\n            <p>If your browser doesn't start downloading the file, you can manually copy the content below and save to a plain text file.</p>\n            <input id=\"snapshot-textarea\" type=\"textarea\" value={appState.project.stringCopyOfSnapshot} readOnly />\n            <button\n              onClick={() => {\n                document.getElementById('snapshot-textarea').select();\n                document.execCommand(\"copy\");\n              }}\n            >\n              Copy to Clipboard\n            </button>\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                // className={classnames({\n                //   [Classes.DISABLED]: !this.state.name\n                // })}\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.project.isSaveSnapshotDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default SaveSnapshotDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass SaveSnapshotDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n    };\n  }\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.project.isRenameSnapshotDialogOpen}\n          onClose={() => {\n            appState.project.isRenameSnapshotDialogOpen = false;\n          }}\n          title={`Rename Snapshot`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            <label className=\"pt-label .modifier\">\n              Snapshot Name\n              <span className=\"pt-text-muted\"> (required)</span>\n              <input\n                className=\"pt-input\"\n                type=\"text\"\n                placeholder=\"My Snapshot\"\n                dir=\"auto\"\n                value={this.state.name}\n                onChange={event => this.setState({ name: event.target.value })}\n              />\n            </label>\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                className={classnames({\n                  [Classes.DISABLED]: !this.state.name\n                })}\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.graph.metadata.snapshotName = this.state.name;\n                  appState.project.isRenameSnapshotDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default SaveSnapshotDialog;","/**\n * [Argo-lite] Open the Argo-lite JSON graph snapshot file\n */\nimport React from \"react\";\nimport { Button, Classes, Dialog, Intent } from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport { toaster } from '../notifications/client';\n\n@observer\nclass OpenSnapshotDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        selectedFile: null\n    };\n  }\n\n  render() {\n    return (\n      <Dialog\n        iconName=\"import\"\n        className={classnames({\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n        isOpen={appState.preferences.openSnapshotDialogOpen}\n        onClose={() => {\n          appState.preferences.openSnapshotDialogOpen = false;\n        }}\n        title=\"Open File\"\n      >\n        <div>\n            <div className={classnames(Classes.DIALOG_BODY)}>\n                <div className={classnames(Classes.CONTROL_GROUP)}>\n                    <div className={classnames(Classes.INPUT_GROUP, Classes.FILL)}>\n                        <input\n                            type=\"file\"\n                            className={classnames(Classes.DISABLED)}\n                            onChange={(event) => {\n                                if (event.target.files.length < 1) {\n                                    return;\n                                }\n                                this.setState({\n                                    selectedFile: event.target.files[0]\n                                });\n                            }}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className={Classes.DIALOG_FOOTER}>\n              <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                <Button\n                  className={classnames({\n                    [Classes.DISABLED]: !this.state.selectedFile\n                  })}\n                  intent={Intent.PRIMARY}\n                  onClick={() => {\n                    // This dialog is closed when user is done selecting file\n                    appState.preferences.openSnapshotDialogOpen = false;\n\n                    // Show user a notification\n                    toaster.show({\n                        message: 'Loading Graph Snapshot. Please wait...',\n                        intent: Intent.NONE,\n                        timeout: 2000\n                    });\n                    \n                    // Read the file and load snapshot\n                    const reader = new FileReader();\n                    reader.readAsText(this.state.selectedFile);\n\n                    reader.onload = () => {\n                        const fileAsString = reader.result;\n                        appState.graph.loadImmediateStates(fileAsString);\n                    }\n                  }}\n                  text=\"Open\"\n                />\n              </div>\n            </div>\n          </div>\n      </Dialog>\n    );\n  }\n}\n\nexport default OpenSnapshotDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport { toaster } from '../notifications/client';\n\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport { BACKEND_URL } from \"../constants\";\n\nconst uuidv4 = require('uuid/v4');\n\n@observer\nclass ShareDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isShared: false,\n      isFetching: false,\n      sharedURL: 'Error: Sharing failed'\n    };\n\n    this.handleRequest = this.handleRequest.bind(this);\n  }\n\n  async handleRequest(uuid) {\n    // return await new Promise(resolve => setTimeout(resolve, 2000));\n    const backendURL = `${BACKEND_URL}/snapshots`;\n    // TODO: add better error handling\n    return await fetch(backendURL, {\n        method: 'POST',\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        referrer: 'no-referrer',\n        body: JSON.stringify({\n            uuid,\n            body: window.saveSnapshotToString()\n        }),\n    }).then(response => response.ok).catch(error => {\n        toaster.show({\n            message: 'Failed to publish to sharing server. Unexpected error.',\n            intent: Intent.DANGER,\n            timeout: -1\n        });\n    });\n  }\n\n  render() {\n    return (\n        <Dialog\n            iconName=\"projects\"\n            isOpen={appState.preferences.shareDialogOpen}\n            onClose={() => {\n            appState.preferences.shareDialogOpen = false;\n            }}\n            title={`Share Graph`}\n        >\n            <div className={classnames(Classes.DIALOG_BODY)}>\n            {\n                !this.state.isShared && (\n                    <div>\n                        <p>You can share the current state of your graph as <b>a public URL</b> or <b>embedded iframe</b></p>\n                        <p><b>IMPORTANT!</b> This will make your graph snapshot public. If you are working with sensitive data (with custom access control), or large data (>400MB), please follow our guide on Github to easily deploy your own sharing server.</p>\n                    </div>\n                )\n            }\n            {\n                this.state.isFetching && (\n                    <p><b>Sharing in progress. Please wait...</b></p>\n                )\n            }\n            {\n                this.state.isShared && (\n                    <div>\n                        Your graph has been shared to\n                        <br/>\n                        <input\n                            id=\"snapshot-textarea\"\n                            type=\"textarea\"\n                            value={this.state.sharedURL}\n                            readOnly\n                            style={{ width: '400px' }}\n                        />\n                        <br />\n                        <button\n                            onClick={() => {\n                                document.getElementById('snapshot-textarea').select();\n                                document.execCommand(\"copy\");\n                            }}\n                        >\n                            Copy to Clipboard\n                        </button>\n                        <br/> \n                        <hr/>                        \n                        Embed as iframe:\n                        <br />\n                        <input\n                            id=\"iframe-textarea\"\n                            type=\"textarea\"\n                            value={`<iframe src=\"${this.state.sharedURL}\" width=\"850\" height=\"500\"></iframe>`}\n                            readOnly\n                        />\n                        {\"   \"}\n                        <button\n                            onClick={() => {\n                                document.getElementById('iframe-textarea').select();\n                                document.execCommand(\"copy\");\n                            }}\n                        >\n                        Copy to Clipboard\n                        </button>\n                    </div>\n                )\n            }\n            </div>\n\n            <div className={Classes.DIALOG_FOOTER}>\n                <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n                    {\n                        !this.state.isShared && (\n                            <Button\n                            className={classnames({\n                                [Classes.DISABLED]: this.state.isFetching\n                            })}\n                            intent={Intent.PRIMARY}\n                            onClick={async () => {\n                                this.setState({ isFetching: true });\n                                // Generate a random UUID\n                                const uuid = uuidv4();\n                                // Generate URL corresponding to the UUID\n                                const sharedURL = `https://poloclub.github.io/argo-graph-lite/#${uuid}`;\n        \n                                // Wait for backend response\n                                const requestSuccess = await this.handleRequest(uuid);\n                                // Update local state\n                                if (requestSuccess) {\n                                    this.setState({ isFetching: false, isShared: true, sharedURL });\n                                } else {\n                                    // request fails, toast fires\n                                    this.setState({ isFetching: false, isShared: false });\n                                    toaster.show({\n                                        message: 'Failed to publish to sharing server. Please try again later.',\n                                        intent: Intent.DANGER,\n                                        timeout: -1\n                                    });\n                                }\n                                \n                            }}\n                            text=\"Share\"\n                            />\n                        )\n                    }\n                    {\n                        this.state.isShared && (\n                            <Button\n                            className={classnames({\n                                [Classes.DISABLED]: this.state.isFetching\n                            })}\n                            intent={Intent.PRIMARY}\n                            onClick={async () => {\n                                this.setState({ isFetching: true, isShared: false });\n                                // Generate a random UUID\n                                const uuid = uuidv4();\n                                // Generate URL corresponding to the UUID\n                                const sharedURL = `https://poloclub.github.io/argo-graph-lite/#${uuid}`;\n        \n                                // Wait for backend response\n                                const requestSuccess = await this.handleRequest(uuid);\n                                // Update local state\n                                if (requestSuccess) {\n                                    this.setState({ isFetching: false, isShared: true, sharedURL });\n                                } else {\n                                    // request fails, toast fires\n                                    this.setState({ isFetching: false, isShared: false });\n                                    toaster.show({\n                                        message: 'Failed to publish to sharing server. Please try again later.',\n                                        intent: Intent.DANGER,\n                                        timeout: -1\n                                    });\n                                }\n                                \n                            }}\n                            text=\"Share Again to a new URL\"\n                            />\n                        )\n                    }\n                    \n                </div>\n            </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default ShareDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Card,\n  Icon,\n  Dialog,\n  Intent,\n  Spinner,\n  Switch\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass StatisticsDialog extends React.Component {\n//   constructor(props) {\n//     super(props);\n//   }\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"projects\"\n          isOpen={appState.preferences.statisticsDialogOpen}\n          onClose={() => {\n            appState.preferences.statisticsDialogOpen = false;\n          }}\n          title={`Statistics`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            <table className={Classes.TABLE} style={{width: '100%'}}>\n                <thead>\n                    <tr>\n                        <th>Statistics</th>\n                        <th>Value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td># Nodes</td>\n                        <td>{appState.graph.metadata.fullNodes}</td>\n                    </tr>\n                    <tr>\n                        <td># Edges</td>\n                        <td>{appState.graph.metadata.fullEdges}</td>\n                    </tr>\n                    <tr>\n                        <td>Average Degree</td>\n                        <td>\n                          {appState.graph.hasGraph ? appState.graph.degree : 'loading graph'}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Graph Density</td>\n                        <td>\n                          {appState.graph.hasGraph ? appState.graph.density : 'loading graph'}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Graph Diameter</td>\n                        <td>\n                          {appState.graph.hasGraph ? appState.graph.diameter : 'loading graph'}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>Clustering Coefficient</td>\n                        <td>{(appState.graph.hasGraph & appState.preferences.statisticsDialogOpen) ? appState.graph.averageClustering : 'loading graph'}</td>\n                    </tr>\n                    <tr>\n                        <td>Connected Component</td>\n                        <td>{(appState.graph.hasGraph & appState.preferences.statisticsDialogOpen) ? appState.graph.components : 'loading graph'}</td>\n\n                    </tr>\n                </tbody>\n            </table>\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.preferences.statisticsDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default StatisticsDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\n\n@observer\nclass HelpDialog extends React.Component {\n\n  render() {\n    return (\n        <Dialog\n          iconName=\"help\"\n          isOpen={appState.preferences.helpDialogOpen}\n          onClose={() => {\n            appState.preferences.helpDialogOpen = false;\n          }}\n          title={`Help`}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n            Argo supports both mouse/trackpad and touchscreen.\n            <div className=\"argo-table-container\">\n              <table className=\"argo-table-container__table pt-table pt-bordered pt-striped\">\n                <thead>\n                  <tr>\n                    <th>Basic Operation</th>\n                    <th>Mouse</th>\n                    <th>Touchscreen</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>Zoom</td>\n                    <td>Mouse wheel</td>\n                    <td>2 finger zoom gesture</td>\n                  </tr>\n                  <tr>\n                    <td>Pan</td>\n                    <td>Drag with right mouse button down OR Move mouse with space key pressed</td>\n                    <td>Drag with 3 finger</td>\n                  </tr>\n                  <tr>\n                    <td>Select single node (view details)</td>\n                    <td>Single Click</td>\n                    <td>Tap with 1 finger</td>\n                  </tr>\n                  <tr>\n                    <td>Select multiple nodes</td>\n                    <td>Drag left mouse button from empty area</td>\n                    <td>Drag 1 finger from empty area</td>\n                  </tr>\n                  <tr>\n                    <td>Drag nodes</td>\n                    <td>Drag with left mouse button down</td>\n                    <td>Drag with 1 finger</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            \n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.preferences.helpDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default HelpDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  Switch,\n  ButtonGroup\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\n\n@observer\nclass NodeTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sortBy: 'pagerank',\n            sortOrder: 'descending', // or 'ascending'\n        };\n    }\n\n  render() {\n    let filteredNodes = this.props.nodes;\n    \n    filteredNodes.sort((n1, n2) => {\n        const n1val = n1[this.state.sortBy];\n        const n2val = n2[this.state.sortBy];\n        if (n1val && n2val) {\n            // Check if these are numerical fields, if so sort by number.\n            const n1valAsNum = Number(n1val);\n            const n2valAsNum = Number(n2val);\n            if (!Number.isNaN(n1valAsNum) && !Number.isNaN(n2valAsNum)) {\n                // both values are numeric, compare by their value.\n                if (this.state.sortOrder === 'descending') {\n                    return n2valAsNum - n1valAsNum;\n                }\n                return n1valAsNum - n2valAsNum;\n            } else {\n                // not all values are numeric, sort by string order.\n                const n1valAsString = n1val.toString();\n                const n2valAsString = n2val.toString();\n                return (this.state.sortOrder === 'descending' ? -1 : 1) * n1valAsString.localeCompare(n2valAsString);\n            }\n        }\n        return 0;\n    });\n\n    const nodeAttributesOrig = appState.graph.allPropertiesKeyList.filter((k) => k !== 'pagerank' && k !== 'degree');\n    \n    return (\n            <div className=\"argo-table-container\">\n                Sort By {' '}\n                <SimpleSelect\n                    items={['pagerank', 'degree', ...nodeAttributesOrig]}\n                    value={this.state.sortBy}\n                    onSelect={(selected) => {\n                        this.setState({sortBy: selected});\n                    }}\n                />\n                <SimpleSelect\n                    items={['descending', 'ascending']}\n                    value={this.state.sortOrder}\n                    onSelect={(selected) => {\n                        this.setState({sortOrder: selected});\n                    }}\n                />\n                <table className=\"argo-table-container__table pt-table pt-bordered pt-striped\">\n                    <thead>\n                        <tr>\n                            <th><b>Show</b></th>\n                            <th><b>Node ID</b></th>\n                            {\n                                appState.graph.allPropertiesKeyList.map((it, i) => {\n                                    if (it !== 'id') {\n                                        return <th key={`${it}-${i}`}>{it}</th>;\n                                    }\n                                    return null;\n                                })\n                            }\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            filteredNodes.map((node) => (\n                                <tr key={node.id}>\n                                    <td>\n                                        <Switch\n                                            checked={!node.isHidden}\n                                            onChange={() => {\n                                                if (node.isHidden) {\n                                                    appState.graph.showNodes([node.id]);\n                                                } else {\n                                                    appState.graph.hideNodes([node.id]);\n                                                }\n                                            }}\n                                        />\n                                    </td>\n                                    <td>{node.id}</td>\n                                    {\n                                        appState.graph.allPropertiesKeyList.map((it, i) => {\n                                            if (it !== 'id') {\n                                                return <td key={`${it}-${i}`}>{node[it]}</td>\n                                            }\n                                        })\n                                    }\n                                </tr>\n                            ))\n                        }\n                    </tbody>\n                </table>\n            </div>\n    );\n  }\n}\n\nexport default NodeTable;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  ButtonGroup,\n  NumericInput,\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport NodeTable from './NodeTable';\nimport SimpleSelect from \"./utils/SimpleSelect\";\n\n@observer\nclass NeighborDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMoreBy: 'pagerank',\n      showMoreNum: 5,\n    };\n  }\n\n  render() {\n    // Compare function for nodes used for sorting descendingly.\n    const compareByPageRank = (n1, n2) => {\n        if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\n            return n2[\"pagerank\"] - n1[\"pagerank\"];\n        }\n        return 0;\n    };\n\n    let filteredNodes = [];\n    // When only one node is selected, show the neighbors of this selected node.\n    if (appState.graph.lastSelectedSingleNode) {\n        const selectedNodeId = appState.graph.lastSelectedSingleNode.data.ref.id.toString();\n        filteredNodes = appState.graph.getNeighborNodesFromRawGraph(selectedNodeId);\n\n        // Sort by pagerank if available.\n        filteredNodes.sort(compareByPageRank);\n    }\n\n    const showNMoreByAttribute = (numberToShow, attributeName) => {\n      const hiddenNodes = filteredNodes.filter(n => n.isHidden);\n      hiddenNodes.sort((n1, n2) => {\n        if (n1[attributeName] && n2[attributeName]) {\n            return n2[attributeName] - n1[attributeName];\n        }\n        return 0;\n      });\n      const ids = [];\n      for (let i = 0; i < numberToShow && i < hiddenNodes.length; i++) {\n          ids.push(hiddenNodes[i].id);\n      }\n      appState.graph.showNodes(ids);\n    };\n    \n    return (\n        <Dialog\n          iconName=\"graph\"\n          isOpen={appState.preferences.neighborDialogOpen}\n          onClose={() => {\n            appState.preferences.neighborDialogOpen = false;\n          }}\n          title='Neighbors'\n          style={{minWidth: '80vw'}}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n\n            <ButtonGroup>\n                <Button onClick={() => {appState.graph.showNodes(filteredNodes.map(n => n.id))}}>Show All</Button>\n                <Button onClick={() => {appState.graph.hideNodes(filteredNodes.map(n => n.id))}}>Hide All</Button>\n            </ButtonGroup>\n\n            <hr />\n\n            <div>\n              <Button\n              style={{display: 'inline'}}\n              intent={Intent.PRIMARY}\n              text='Show'\n              onClick={() => {\n                showNMoreByAttribute(this.state.showMoreNum, this.state.showMoreBy);\n              }} /> <NumericInput onValueChange={(valAsNumber, valAsString) => {this.setState({showMoreNum: Number(valAsString)})}} value={this.state.showMoreNum} style={{display: 'inline-flex', width: '30px'}} /> {' '}\n              more nodes with highest <SimpleSelect items={['pagerank', 'degree']} value={this.state.showMoreBy} onSelect={(selected) => {this.setState({showMoreBy: selected})}} />\n            </div>\n\n            <hr />\n\n            <NodeTable nodes={filteredNodes} />\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.preferences.neighborDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default NeighborDialog;","import React from \"react\";\nimport {\n  Button,\n  Classes,\n  Dialog,\n  Intent,\n  ButtonGroup,\n  NumericInput,\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores/index\";\nimport NodeTable from './NodeTable';\nimport SimpleSelect from \"./utils/SimpleSelect\";\n\n\n@observer\nclass DataSheetDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showMoreBy: 'pagerank',\n      showMoreNum: 5,\n    };\n  }\n\n  render() {\n    let filteredNodes = [...appState.graph.rawGraph.nodes];\n\n    const showNMoreByAttribute = (numberToShow, attributeName) => {\n      const hiddenNodes = filteredNodes.filter(n => n.isHidden);\n      hiddenNodes.sort((n1, n2) => {\n        if (n1[attributeName] && n2[attributeName]) {\n            return n2[attributeName] - n1[attributeName];\n        }\n        return 0;\n      });\n      const ids = [];\n      for (let i = 0; i < numberToShow && i < hiddenNodes.length; i++) {\n          ids.push(hiddenNodes[i].id);\n      }\n      appState.graph.showNodes(ids);\n    };\n    \n    return (\n        <Dialog\n          iconName=\"database\"\n          isOpen={appState.preferences.dataSheetDialogOpen}\n          onClose={() => {\n            appState.preferences.dataSheetDialogOpen = false;\n          }}\n          title='Data Sheet'\n          style={{minWidth: '80vw'}}\n        >\n          <div className={classnames(Classes.DIALOG_BODY)}>\n\n            <ButtonGroup>\n                <Button onClick={() => {appState.graph.showNodes(filteredNodes.map(n => n.id))}}>Show All</Button>\n                <Button onClick={() => {appState.graph.hideNodes(filteredNodes.map(n => n.id))}}>Hide All</Button>\n            </ButtonGroup>\n\n            <hr />\n\n            <div>\n              <Button\n              style={{display: 'inline'}}\n              intent={Intent.PRIMARY}\n              text='Show'\n              onClick={() => {\n                showNMoreByAttribute(this.state.showMoreNum, this.state.showMoreBy);\n              }} /> <NumericInput onValueChange={(valAsNumber, valAsString) => {this.setState({showMoreNum: Number(valAsString)})}} value={this.state.showMoreNum} style={{display: 'inline-flex', width: '30px'}} /> {' '}\n              more nodes with highest <SimpleSelect items={['pagerank', 'degree']} value={this.state.showMoreBy} onSelect={(selected) => {this.setState({showMoreBy: selected})}} />\n            </div>\n\n            <hr />\n\n            <NodeTable nodes={filteredNodes} />\n          </div>\n\n          <div className={Classes.DIALOG_FOOTER}>\n            <div className={Classes.DIALOG_FOOTER_ACTIONS}>\n              <Button\n                intent={Intent.PRIMARY}\n                onClick={() => {\n                  appState.preferences.dataSheetDialogOpen = false;\n                }}\n                text=\"Done\"\n              />\n            </div>\n          </div>\n        </Dialog>\n    );\n  }\n}\n\nexport default DataSheetDialog;","import React from \"react\";\nimport PreferencesDialog from \"./PreferencesDialog\";\nimport ImportDialog from \"./ImportDialog\";\nimport GEXFImportDialog from \"./GEXFImportDialog\"\nimport OpenDialog from \"./OpenDialog\";\nimport NewProjectDialog from \"./NewProjectDialog\";\nimport ProjectDetailDialog from \"./ProjectDetailDialog\";\nimport SaveSnapshotDialog from \"./SaveSnapshotDialog\";\nimport RenameSnapshotDialog from \"./RenameSnapshotDialog\";\nimport OpenSnapshotDialog from \"./OpenSnapshotDialog\";\nimport ShareDialog from './ShareDialog';\nimport StatisticsDialog from './StatisticsDialog';\nimport HelpDialog from './HelpDialog';\nimport NeighborDialog from './NeighborDialog';\nimport DataSheetDialog from './DataSheetDialog';\n\nexport default class Dialogs extends React.Component {\n  render() {\n    return (\n      <div style={{ display: \"none\" }}>\n        <PreferencesDialog />\n        <ImportDialog />\n        <GEXFImportDialog />\n        <OpenDialog />\n        <OpenSnapshotDialog />\n        <NewProjectDialog />\n        <ProjectDetailDialog />\n        <SaveSnapshotDialog />\n        <RenameSnapshotDialog />\n        <ShareDialog />\n        <StatisticsDialog />\n        <HelpDialog />\n        <NeighborDialog />\n        <DataSheetDialog />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Classes,\n  InputGroup,\n  Intent,\n  Position,\n  Tooltip,\n  Popover,\n  Menu,\n  MenuItem,\n  MenuDivider\n} from \"@blueprintjs/core\";\nimport { observer } from \"mobx-react\";\n\nimport appState from \"../stores/index\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport argologo from '../images/argologo.png';\n\nimport {LOGO_URL, GITHUB_URL, SAMPLE_GRAPH_SNAPSHOTS} from '../constants';\n\n@observer\nclass RegularNavbar extends React.Component {\n  render() {\n    return (\n      <nav className={classnames([Classes.NAVBAR])}>\n        <div className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_LEFT])}>\n          <a href={LOGO_URL} target=\"_blank\">\n            <img title = \"Argo Lite\" id= \"Argo logo\" src= {argologo} width = \"35\" height = \"35\"></img>\n          </a>\n    <div className={classnames([Classes.NAVBAR_HEADING])}> &nbsp; Argo <small>Lite</small></div>\n          {/* <a\n            href=\"https://poloclub.github.io/argo-graph/\"\n            target='_blank'\n            style={{\n              padding: '6px 10px 6px 10px',\n              backgroundColor: 'pink',\n              color: 'white',\n              borderRadius: '4px',\n              textDecoration: 'none'\n            }}\n          >\n            Learn more about Argo\n          </a> */}\n          <Popover\n            content={\n              <Menu>\n                <MenuItem text=\"Load Sample\" iconName=\"graph\">\n                  {\n                    SAMPLE_GRAPH_SNAPSHOTS.map((sample) => {\n                      const sampleSnapshotTitle = sample[0];\n                      const sampleSnapshotStrapiUuid = sample[1];\n\n                      return (\n                        <MenuItem\n                          iconName=\"graph\"\n                          text={sampleSnapshotTitle}\n                          onClick={() => {\n                            window.loadAndDisplaySnapshotFromStrapi(sampleSnapshotStrapiUuid);\n                          }}\n                        />\n                      );\n                    })\n                  }\n                  \n                </MenuItem>\n                <MenuDivider />\n                <MenuItem\n                  iconName=\"import\"\n                  text=\"Import from CSV...\"\n                  onClick={() => (appState.import.dialogOpen = true)}\n                />\n                <MenuItem\n                  iconName=\"import\"\n                  text=\"Import from GEXF...\"\n                  onClick={() => (appState.import.gexfDialogOpen = true)}\n                />\n                <MenuItem\n                  iconName=\"pt-icon-document-open\"\n                  text=\"Open Snapshot\"\n                  onClick={() => {appState.preferences.openSnapshotDialogOpen = true}}\n                />\n                <MenuDivider />\n                <MenuItem\n                  iconName=\"download\"\n                  text=\"Save Snapshot\"\n                  onClick={() => {\n                    appState.project.stringCopyOfSnapshot = appState.graph.saveImmediateStates();\n                    appState.project.isSaveSnapshotDialogOpen = true\n                  }}\n                />\n                <MenuItem\n                  iconName=\"pt-icon-document-share\"\n                  text=\"Publish and Share Snapshot\"\n                  onClick={() => {appState.preferences.shareDialogOpen = true}}\n                />\n              </Menu>\n            }\n            position={Position.BOTTOM}\n          >\n            <Button\n              className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n              iconName=\"document\"\n            >\n              Graph\n            </Button>\n          </Popover>\n          <Popover\n            content={\n              <Menu>\n                <MenuItem\n                  text=\"Data Sheet\"\n                  iconName=\"pt-icon-database\"\n                  onClick={() => {\n                    appState.graph.frame.pauseLayout();\n                    appState.preferences.dataSheetDialogOpen = true;\n                    this.forceUpdate();\n                  }}\n                />\n                <MenuItem\n                  text=\"Statistics\"\n                  iconName=\"pt-icon-timeline-bar-chart\"\n                  onClick={() => {appState.preferences.statisticsDialogOpen = true}}\n                />\n                <MenuItem text=\"Filters\" iconName=\"graph\">\n                  <MenuItem\n                    text=\"Show All Nodes\"\n                    onClick={() => {\n                      appState.graph.showNodes(appState.graph.rawGraph.nodes.map(n => n.id));\n                    }}\n                  />\n                  <MenuItem\n                    text=\"Show only nodes with top 5 PageRank\"\n                    onClick={() => {\n                      appState.graph.hideNodes(appState.graph.rawGraph.nodes.map(n => n.id));\n                      const sortedNodeList = [...appState.graph.rawGraph.nodes];\n                      sortedNodeList.sort((n1, n2) => {\n                          if (n1[\"pagerank\"] && n2[\"pagerank\"]) {\n                              return n2[\"pagerank\"] - n1[\"pagerank\"];\n                          }\n                          return 0;\n                      });\n                      const ids = [];\n                      for (let i = 0; i < 5 && i < sortedNodeList.length; i++) {\n                        ids.push(sortedNodeList[i].id);\n                      }\n                      appState.graph.showNodes(ids);\n                    }}\n                  />\n                  <MenuItem\n                    text=\"Show only nodes with top 5 Degree\"\n                    onClick={() => {\n                      appState.graph.hideNodes(appState.graph.rawGraph.nodes.map(n => n.id));\n                      const sortedNodeList = [...appState.graph.rawGraph.nodes];\n                      sortedNodeList.sort((n1, n2) => {\n                          if (n1[\"degree\"] && n2[\"degree\"]) {\n                              return n2[\"degree\"] - n1[\"degree\"];\n                          }\n                          return 0;\n                      });\n                      const ids = [];\n                      for (let i = 0; i < 5 && i < sortedNodeList.length; i++) {\n                        ids.push(sortedNodeList[i].id);\n                      }\n                      appState.graph.showNodes(ids);\n                    }}\n                  />\n                  <MenuItem\n                    text=\"Hide All Nodes\"\n                    onClick={() => {\n                      appState.graph.hideNodes(appState.graph.rawGraph.nodes.map(n => n.id));\n                    }}\n                  />\n                </MenuItem>\n              </Menu>\n            }\n            position={Position.BOTTOM}\n          >\n            <Button\n              className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n              iconName=\"pt-icon-wrench\"\n            >\n              Tools\n            </Button>\n          </Popover>\n        </div>\n        <div className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_LEFT])}>\n        <span className={Classes.NAVBAR_DIVIDER} />\n        {appState.graph.hasGraph && appState.graph.frame && (\n            <div style={{ display: \"inline\" }}>\n              <Tooltip\n                content={appState.graph.frame.paused ? \"Resume Layout Algorithm\" : \"Pause Layout Algorithm\"}\n                position={Position.BOTTOM}\n              >\n                <Button\n                  className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n                  iconName={appState.graph.frame.paused ? \"play\" : \"pause\"}\n                  text={appState.graph.frame.paused ? \"Resume Layout\" : \"Pause Layout\"}\n                  onClick={() => {\n                    if (appState.graph.frame.paused) {\n                      appState.graph.frame.resumeLayout();\n                      this.forceUpdate();\n                    } else {\n                      appState.graph.frame.pauseLayout();\n                      this.forceUpdate();\n                    }\n                  }}\n                />\n              </Tooltip>\n            </div>\n          )}\n        </div>\n        <div\n          className={classnames([Classes.NAVBAR_GROUP, Classes.ALIGN_RIGHT])}\n        >\n          <Button\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n            iconName=\"graph\"\n            onClick={() => {\n              appState.project.isRenameSnapshotDialogOpen = true;\n            }}\n          >\n            {appState.graph.metadata.snapshotName || \"Untitled Graph\"}\n          </Button>\n          <span className={Classes.NAVBAR_DIVIDER} />\n          <Button\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n            iconName=\"cog\"\n            onClick={() => {\n              appState.preferences.dialogOpen = true;\n            }}\n          />\n          <Button\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n            iconName=\"help\"\n            onClick={() => {\n              appState.preferences.helpDialogOpen = true;\n            }}\n          />\n          <Button\n            className={classnames([Classes.BUTTON, Classes.MINIMAL])}\n            iconName=\"minimize\"\n            onClick={() => {\n              appState.preferences.turnOnMinimalMode()\n            }}\n          />\n          <span className={Classes.NAVBAR_DIVIDER} />\n          <a\n            href={GITHUB_URL}\n            target='_blank'\n            style={{\n              color: appState.preferences.darkMode ? 'white' : 'black',\n              fontSize: '120%',\n              textDecoration: 'none'\n            }}\n          >\n            <FontAwesomeIcon icon={faGithub} />\n          </a>\n        </div>\n      </nav>\n    );\n  }\n}\n\n@observer\nclass MinimalNavbar extends React.Component {\n  render() {\n    return appState.graph.frame && (\n      <div>\n        <div\n          className={classnames(\"minimal-navbar-left\")}\n          style={{\n              backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\n          }}\n        >\n          <div className=\"pt-button-group\">\n            <a\n              className={classnames(\"pt-button pt-icon-maximize\", appState.graph.frame.paused ? \"pt-icon-play\" : \"pt-icon-pause\")}\n              role=\"button\"\n              onClick={() => {\n                if (appState.graph.frame.paused) {\n                  appState.graph.frame.resumeLayout();\n                  this.forceUpdate();\n                } else {\n                  appState.graph.frame.pauseLayout();\n                  this.forceUpdate();\n                }\n              }}\n            />\n          </div>\n        </div>\n        <div\n          className={classnames(\"minimal-navbar-right\")}\n          style={{\n              backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\n          }}\n        >\n          <div className=\"pt-button-group\">\n            <a className=\"pt-button pt-icon-maximize\" role=\"button\" onClick={() => appState.preferences.turnOffMinimalMode()}></a>\n            <a className=\"pt-button pt-icon-help\" role=\"button\" onClick={() => appState.preferences.helpDialogOpen = true}></a>\n            <a className=\"pt-button pt-icon-document-open\" role=\"button\" href={window.location} target=\"_blank\"></a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n@observer\nclass Navbar extends React.Component {\n  render() {\n    return appState.preferences.isNavbarInMinimalMode ? <MinimalNavbar /> : <RegularNavbar />;\n  }\n}\n\nexport default Navbar;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Icon,\n  Card,\n  Classes,\n  Spinner,\n  NonIdealState,\n  FocusStyleManager\n} from \"@blueprintjs/core\";\nimport appState from \"../stores/index\";\nimport { requestOpenWorkspaceFolder } from \"../ipc/client\";\n\n// Argo-lite: In lite, home screen is replaced by a loading screen\n// since there will always be a default graph showing.\n@observer\nclass WorkspaceView extends React.Component {\n  render() {\n    return (\n      <div className=\"workspace\">\n        {/* <Card\n          interactive={true}\n          elevation={Card.ELEVATION_TWO}\n          onClick={() => {\n            appState.project.isNewProjectDialogOpen = true;\n          }}\n        >\n          <Icon iconName=\"plus\" /> Create New Project\n        </Card>\n        <Card\n          interactive={true}\n          elevation={Card.ELEVATION_TWO}\n          onClick={() => {\n            requestOpenWorkspaceFolder();\n          }}\n        >\n          <Icon iconName=\"cog\" /> Manage Workspace\n        </Card>\n        <hr />\n        <div className=\"argo-menu-list-header\">My Projects</div>\n        <div style={{ paddingBottom: '100px' }}>\n          {appState.project.isFetching ? (\n            <div style={{ textAlign: \"center\" }}>\n              <Spinner />\n            </div>\n          ) : appState.project.projects.length > 0 ? (\n            appState.project.projects.map(project => {\n              return (\n                <div key={project.name}>\n                  <Card\n                    interactive={true}\n                    elevation={Card.ELEVATION_TWO}\n                    onClick={() => {\n                      appState.project.currentProject = project;\n                      appState.project.isProjectDetailDialogOpen = true;\n                    }}\n                  >\n                    <h5>{project.name}</h5>\n                    <p>Created: {project.createdDate || 'Unknown'}</p>\n                  </Card>\n                </div>\n              );\n            })\n          ) : (\n            <div style={{ textAlign: \"center\" }}>\n              Workspace is empty. Start by creating a new project.\n            </div>\n          )}\n        </div> */}\n        <div style={{ textAlign: \"center\", height: \"100vh\" }}>\n          <Spinner />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WorkspaceView;","import React from \"react\";\nimport appState from \"../stores\";\n\nexport default class ThreeJSVis extends React.Component {\n  componentDidMount() {\n    appState.graph.setUpFrame();\n  }\n\n  render() {\n    return (\n      <div\n        id=\"graph-container\"\n        style={{\n          width: \"100vw\",\n          height: \"90vh\",\n          flex: \"1\",\n          position: \"absolute\"\n        }}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Button, Classes, RangeSlider } from \"@blueprintjs/core\";\nimport { SketchPicker } from \"react-color\";\nimport { Popover2, Select } from \"@blueprintjs/labs\";\nimport classnames from \"classnames\";\nimport { runInAction } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport pluralize from \"pluralize\";\nimport appState from \"../../stores\";\nimport { scales } from \"../../constants/index\";\nimport Collapsable from \"../utils/Collapsable\";\nimport SimpleSelect from \"../utils/SimpleSelect\";\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\n\n@observer\nclass GlobalPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeOutRef: null,\n      sizeOptionOpen: false,\n      colorOptionOpen: false,\n      shapeOptionOpen: false\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <Collapsable\n          name=\"Color\"\n          isOpen={this.state.colorOptionOpen}\n          onToggle={() =>\n            this.setState({\n              colorOptionOpen: !this.state.colorOptionOpen\n            })\n          }\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            Color by:\n            <SimpleSelect\n              items={appState.graph.allPropertiesKeyList}\n              onSelect={it => (appState.graph.nodes.colorBy = it)}\n              value={appState.graph.nodes.colorBy}\n            />\n            <br />\n            With scale:\n            <SimpleSelect\n              items={Object.keys(scales)}\n              onSelect={it => (appState.graph.nodes.color.scale = it)}\n              value={appState.graph.nodes.color.scale}\n            />\n            <br />\n            Using Gradient from\n            <Popover2>\n              <Button\n                text=\"  \"\n                style={{\n                  backgroundImage: \"inherit\",\n                  backgroundColor: appState.graph.nodes.color.from\n                }}\n              />\n              <SketchPicker\n                color={appState.graph.nodes.color.from}\n                onChange={it => (appState.graph.nodes.color.from = it.hex)}\n              />\n            </Popover2>\n            to\n            <Popover2>\n              <Button\n                text=\"  \"\n                style={{\n                  backgroundImage: \"inherit\",\n                  backgroundColor: appState.graph.nodes.color.to\n                }}\n              />\n              <SketchPicker\n                color={appState.graph.nodes.color.to}\n                onChange={it => (appState.graph.nodes.color.to = it.hex)}\n              />\n            </Popover2>\n            :\n            <br />\n            <svg width=\"220\" height=\"30\" className=\"gradient-preview\">\n              <defs>\n                <linearGradient\n                  x1=\"0%\"\n                  y1=\"50%\"\n                  x2=\"100%\"\n                  y2=\"50%\"\n                  id=\"theGradient\"\n                >\n                  <stop\n                    stopColor={appState.graph.nodes.color.from}\n                    stopOpacity=\"1\"\n                    offset=\"0%\"\n                  />\n                  <stop\n                    stopColor={appState.graph.nodes.color.to}\n                    stopOpacity=\"1\"\n                    offset=\"100%\"\n                  />\n                </linearGradient>\n              </defs>\n              <rect\n                x=\"0\"\n                y=\"0\"\n                width=\"220\"\n                height=\"50\"\n                fill=\"url(#theGradient)\"\n              />\n            </svg>\n          </div>\n        </Collapsable>\n\n        <Collapsable\n          name=\"Size\"\n          isOpen={this.state.sizeOptionOpen}\n          onToggle={() =>\n            this.setState({\n              sizeOptionOpen: !this.state.sizeOptionOpen\n            })\n          }\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            Scale by:\n            <Select\n              items={appState.graph.allPropertiesKeyList}\n              itemRenderer={CommonItemRenderer}\n              filterable={false}\n              onItemSelect={it => (appState.graph.nodes.sizeBy = it)}\n            >\n              <Button text={appState.graph.nodes.sizeBy} />\n            </Select>\n            <br />\n            With scale:\n            <Select\n              items={Object.keys(scales)}\n              itemRenderer={CommonItemRenderer}\n              filterable={false}\n              onItemSelect={it => (appState.graph.nodes.size.scale = it)}\n            >\n              <Button text={appState.graph.nodes.size.scale} />\n            </Select>\n            <br />\n            Size Range:\n            <br />\n            <RangeSlider\n              min={1}\n              max={20}\n              stepSize={0.1}\n              labelStepSize={5}\n              onChange={([a, b]) => {\n                runInAction(\"update scale\", () => {\n                  appState.graph.nodes.size.min = a;\n                  appState.graph.nodes.size.max = b;\n                });\n              }}\n              value={[\n                appState.graph.nodes.size.min,\n                appState.graph.nodes.size.max\n              ]}\n            />\n          </div>\n        </Collapsable>\n\n        <Collapsable\n          name=\"Shape\"\n          isOpen={this.state.shapeOptionOpen}\n          onToggle={() =>\n            this.setState({\n              shapeOptionOpen: !this.state.shapeOptionOpen\n            })\n          }\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            Node Shape:\n            <Select\n              items={[\n                \"circle\",\n                \"square\",\n                \"triangle\",\n                \"pentagon\",\n                \"hexagon\",\n                \"octagon\"\n              ]}\n              itemRenderer={CommonItemRenderer}\n              filterable={false}\n              onItemSelect={it => (appState.graph.nodes.shape = it)}\n            >\n              <Button text={appState.graph.nodes.shape} />\n            </Select>\n          </div>\n        </Collapsable>\n        <small>\n          {pluralize(\"node\", appState.graph.overrides.size, true)}<span> </span>\n          have override styles.\n          <a onClick={() => (appState.graph.overrides = new Map())}>Clear.</a>\n        </small>\n      </div>\n    );\n  }\n}\n\nexport default GlobalPanel;","import React from \"react\";\nimport { Classes, Collapse, Switch } from \"@blueprintjs/core\";\n\nexport default ({ name, isOpen, onToggle, children }) => (\n  <div>\n    <Switch\n      label={name}\n      checked={isOpen}\n      onChange={onToggle}\n      className={Classes.ALIGN_RIGHT}\n    />\n    <Collapse isOpen={isOpen}>{children}</Collapse>\n  </div>\n);\n","import React from \"react\";\nimport { Button, Classes, Slider } from \"@blueprintjs/core\";\nimport { SketchPicker } from \"react-color\";\nimport { Popover2, Select } from \"@blueprintjs/labs\";\nimport classnames from \"classnames\";\nimport { runInAction } from \"mobx\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../../stores\";\nimport SwitchCollapsable from \"../utils/SwitchCollapsable\";\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\n\n@observer\nclass SelectionPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shapeOptionOpen: false,\n      sizeOptionOpen: false,\n      colorOptionOpen: false,\n      labelOptionOpen: false\n    };\n  }\n\n  twoLayerUpdate = (nodeId, key, value) => {\n    if (!appState.graph.overrides.has(nodeId)) {\n      appState.graph.overrides.set(nodeId, new Map());\n    }\n    const nodeAttrs = appState.graph.overrides.get(nodeId);\n    if (value !== null) {\n      nodeAttrs.set(key, value);\n    } else {\n      nodeAttrs.delete(key);\n      if (nodeAttrs.size === 0) {\n        appState.graph.overrides.delete(nodeId);\n      }\n    }\n  };\n\n  batchTwoLayerUpdate = (nodes, key, value) => {\n    runInAction(\"update entire selection\", () => {\n      nodes.forEach(n => this.twoLayerUpdate(n.data.ref.id, key, value));\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <SwitchCollapsable\n          name=\"Override Size\"\n          isOpen={this.state.sizeOptionOpen}\n          onToggle={() => {\n            if (this.state.sizeOptionOpen) {\n              this.setState(\n                {\n                  sizeOptionOpen: false\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"size\",\n                    null\n                  )\n              );\n            } else {\n              this.setState(\n                {\n                  sizeOptionOpen: true\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"size\",\n                    appState.graph.overrideConfig.size\n                  )\n              );\n            }\n          }}\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            <Slider\n              min={1}\n              max={20}\n              stepSize={0.1}\n              labelStepSize={5}\n              onChange={it => {\n                appState.graph.overrideConfig.size = it;\n                this.batchTwoLayerUpdate(\n                  appState.graph.selectedNodes,\n                  \"size\",\n                  it\n                );\n              }}\n              value={appState.graph.overrideConfig.size}\n            />\n          </div>\n        </SwitchCollapsable>\n        <SwitchCollapsable\n          name=\"Override Color\"\n          isOpen={this.state.colorOptionOpen}\n          onToggle={() => {\n            if (this.state.colorOptionOpen) {\n              this.setState(\n                {\n                  colorOptionOpen: false\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"color\",\n                    null\n                  )\n              );\n            } else {\n              this.setState(\n                {\n                  colorOptionOpen: true\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"color\",\n                    appState.graph.overrideConfig.color\n                  )\n              );\n            }\n          }}\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            Choose Color:\n            <Popover2>\n              <Button\n                text=\"  \"\n                style={{\n                  backgroundImage: \"inherit\",\n                  backgroundColor: appState.graph.overrideConfig.color\n                }}\n              />\n              <SketchPicker\n                color={appState.graph.overrideConfig.color}\n                onChange={it => {\n                  appState.graph.overrideConfig.color = it.hex;\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"color\",\n                    it.hex\n                  );\n                }}\n              />\n            </Popover2>\n          </div>\n        </SwitchCollapsable>\n        <SwitchCollapsable\n          name=\"Override Label\"\n          isOpen={this.state.labelOptionOpen}\n          onToggle={() => {\n            if (this.state.labelOptionOpen) {\n              this.setState(\n                {\n                  labelOptionOpen: false\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"label\",\n                    null\n                  )\n              );\n            } else {\n              this.setState(\n                {\n                  labelOptionOpen: true\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"label\",\n                    appState.graph.overrideConfig.label\n                  )\n              );\n            }\n          }}\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            Custom Label:\n            <input\n              value={appState.graph.overrideConfig.label}\n              onChange={it => {\n                appState.graph.overrideConfig.label = it.target.value;\n                this.batchTwoLayerUpdate(\n                  appState.graph.selectedNodes,\n                  \"label\",\n                  it.target.value\n                );\n              }}\n            />\n          </div>\n        </SwitchCollapsable>\n        <SwitchCollapsable\n          name=\"Override Shape\"\n          isOpen={this.state.shapeOptionOpen}\n          onToggle={() => {\n            if (this.state.shapeOptionOpen) {\n              this.setState(\n                {\n                  shapeOptionOpen: false\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"shape\",\n                    null\n                  )\n              );\n            } else {\n              this.setState(\n                {\n                  shapeOptionOpen: true\n                },\n                () =>\n                  this.batchTwoLayerUpdate(\n                    appState.graph.selectedNodes,\n                    \"shape\",\n                    appState.graph.overrideConfig.shape\n                  )\n              );\n            }\n          }}\n        >\n          <div className={classnames(Classes.CARD, \"sub-option\")}>\n            Node Shape:\n            <Select\n              items={[\n                \"circle\",\n                \"square\",\n                \"triangle\",\n                \"pentagon\",\n                \"hexagon\",\n                \"octagon\"\n              ]}\n              itemRenderer={CommonItemRenderer}\n              filterable={false}\n              onItemSelect={it => {\n                appState.graph.overrideConfig.shape = it;\n                this.batchTwoLayerUpdate(\n                  appState.graph.selectedNodes,\n                  \"shape\",\n                  it\n                );\n              }}\n            >\n              <Button text={appState.graph.overrideConfig.shape} />\n            </Select>\n          </div>\n        </SwitchCollapsable>\n      </div>\n    );\n  }\n}\n\nexport default SelectionPanel;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport pluralize from \"pluralize\";\nimport appState from \"../../stores\";\nimport GlobalPanel from \"./GlobalPanel\";\nimport SelectionPanel from \"./SelectionPanel\";\n\n@observer\nclass NodesPanel extends React.Component {\n  getRenderedNodes = () => {\n    if (appState.graph.selectedNodes.length === 0) {\n      return (\n        <div>\n          <p>Modifying All Nodes</p>\n        </div>\n      );\n    }\n    return (\n      <p>{`Modifying ${pluralize(\n        \"Node\",\n        appState.graph.selectedNodes.length,\n        true\n      )}`}</p>\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        {this.getRenderedNodes()}\n        {appState.graph.selectedNodes.length === 0 ? (\n          <GlobalPanel />\n        ) : (\n          <SelectionPanel />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default NodesPanel;","import React from \"react\";\nimport { Button, Classes, Slider } from \"@blueprintjs/core\";\nimport { Select } from \"@blueprintjs/labs\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../../stores\";\nimport CommonItemRenderer from \"../utils/CommonItemRenderer\";\n\n@observer\nclass LabelsPanel extends React.Component {\n  render() {\n    return (\n      <div>\n        <Button\n          iconName=\"eye-off\"\n          className={Classes.FILL}\n          onClick={() => appState.graph.frame.hideAllLabels()}\n        >\n          Hide All Labels\n        </Button>\n        <Button\n          iconName=\"eye-on\"\n          className={Classes.FILL}\n          onClick={() => appState.graph.frame.showAllLabels()}\n        >\n          Show All Labels\n        </Button>\n        <Button\n          iconName=\"eye-off\"\n          className={Classes.FILL}\n          onClick={() => appState.graph.frame.hideSelectedLabels()}\n        >\n          Hide Labels of Selected Nodes\n        </Button>\n        <Button\n          iconName=\"eye-on\"\n          className={Classes.FILL}\n          onClick={() => appState.graph.frame.showSelectedLabels()}\n        >\n          Show Labels of Selected Nodes\n        </Button>\n        <div style={{height: '30px'}} />\n        <h6>Label Size</h6>\n        <Slider\n          min={0.5}\n          max={3}\n          stepSize={0.1}\n          onChange={value => {\n            appState.graph.nodes.labelSize = value;\n          }}\n          value={appState.graph.nodes.labelSize}\n        />\n        <div style={{height: '30px'}} />\n        <h6>Label Length</h6>\n        <Slider\n          min={1}\n          max={32}\n          stepSize={0.1}\n          labelStepSize={5}\n          onChange={value => {\n            appState.graph.nodes.labelLength = value;\n          }}\n          value={appState.graph.nodes.labelLength}\n        />\n        <h6>Label By</h6>\n        <Select\n          items={appState.graph.allPropertiesKeyList}\n          itemRenderer={CommonItemRenderer}\n          filterable={false}\n          onItemSelect={it => (appState.graph.nodes.labelBy = it)}\n        >\n          <Button text={appState.graph.nodes.labelBy} />\n        </Select>\n      </div>\n    );\n  }\n}\n\nexport default LabelsPanel;","import React from \"react\";\nimport classnames from \"classnames\";\nimport uniq from \"lodash/uniq\";\nimport { Classes } from \"@blueprintjs/core\";\nimport appState from \"../../stores\";\nimport { observer } from \"mobx-react/index\";\n\n@observer\nclass NodeDetail extends React.Component {\n  render() {\n    // If input is number,\n    // currently format number between 0-1 (eg. pagerank)\n    // to show no more than 3 significant digits.\n    const formatLongFloat = (nodeAttributeValue) => {\n      const num = Number(nodeAttributeValue);\n      if (Number.isNaN(num) || num > 1 || num < 0) {\n        // Do not format just return original\n        return nodeAttributeValue;\n      }\n      // Format to no more than 3 significant digit.\n      return Number.parseFloat(num).toPrecision(3);\n    };\n\n    return (\n      <div\n        className={classnames(\n          // 'overlay-card',\n          \"right-overlay-card\",\n          \"transparent-frame\"\n        )}\n      >\n        <div className={classnames(Classes.CARD, \"node-details-table\")}>\n          <table\n            className={classnames(Classes.TABLE, Classes.TABLE_STRIPED)}\n            style={{\n              width: \"100%\",\n              padding: '0',\n            }}\n          >\n            \n            <thead>\n              <tr>\n                <th>Property</th>\n                <th>Value</th>\n              </tr>\n            </thead>\n            <tbody>\n              {appState.graph.allPropertiesKeyList.map((it, i) => (\n                <tr key={`${it}-${i}`}>\n                  <td style={{ padding: '5px 10px' }}>{it}</td>\n                  <td style={{ padding: '5px 10px', whiteSpace: 'normal' }}>{formatLongFloat(this.props.node[it])}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NodeDetail;","import React from \"react\";\n\nimport { format } from \"d3-format\";\nimport { LegendLinear, LegendSize } from \"@vx/vx\";\nimport appState from \"../stores\";\nimport { observer } from \"mobx-react\";\n\nfunction Legends() {\n  return (\n    <div className=\"legends\" style={{visibility: appState.preferences.isLegendShowing ? 'visible' : 'hidden'}}>\n      <LegendSize\n        className=\"scale-legend\"\n        direction=\"row\"\n        itemDirection=\"column\"\n        itemMargin=\"0\"\n        shapeMargin=\"5px 0\"\n        labelFormat={format(\".4f\")}\n        scale={appState.graph.nodeSizeScale}\n        shape={props => {\n          const { size } = props;\n          return (\n            <svg width={size} height={size}>\n              <circle {...props} r={size / 2} cx={size / 2} cy={size / 2} />\n            </svg>\n          );\n        }}\n      />\n      <LegendLinear\n        direction=\"row\"\n        itemDirection=\"column\"\n        shape=\"circle\"\n        scale={appState.graph.nodeColorScale}\n        labelFormat={format(\".4f\")}\n      />\n    </div>\n  );\n}\n\nexport default observer(Legends);\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport appState from \"../stores\";\n\n@observer\nclass StatusBar extends React.Component {\n    render() {\n        return (\n            <div\n                className={classnames(\"bottom-status-bar\")}\n                style={{\n                    backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\n                    visibility: appState.preferences.isStatusBarShowing? \"visible\" : \"hidden\"\n                }}\n            >\n                <div className={classnames(\"bottom-status-bar__left\")}>{appState.graph.metadata.fullNodes && appState.graph.metadata.fullEdges && `Total Nodes: ${appState.graph.metadata.fullNodes}, Total Edges: ${appState.graph.metadata.fullEdges},`} Hidden Nodes: {appState.graph.numHiddenNodes}</div>\n                <div className={classnames(\"bottom-status-bar__right\")}>Color by: {appState.graph.nodes.colorBy} ({appState.graph.nodes.color.scale}), Size by: {appState.graph.nodes.sizeBy} ({appState.graph.nodes.size.scale})</div>\n            </div>\n        );\n    }\n}\n\nexport default StatusBar;","import React from \"react\";\nimport { Button, Classes, Tooltip, Intent, Position } from \"@blueprintjs/core\";\nimport classnames from \"classnames\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../../stores\";\n\n@observer\nclass SelectionActionPanel extends React.Component {\n  render() {\n      // Only relevant when there's exact 1 node selected.\n      // To display number of hidden nodes if exists\n      let numHiddenNeighbor = 0;\n      if (appState.graph.selectedNodes.length === 1) {\n        if (appState.graph.lastSelectedSingleNode) {\n            const selectedNodeId = appState.graph.lastSelectedSingleNode.data.ref.id.toString();\n            numHiddenNeighbor = appState.graph.getNeighborNodesFromRawGraph(selectedNodeId).filter(n => n.isHidden).length;\n        }\n      }\n\n      return (\n        <div\n            className=\"argo-selection-action-panel\"\n            style={{\n                backgroundColor: appState.preferences.darkMode ? '#30404D' : '#FFFFFF',\n            }}\n        >\n            <Tooltip\n                content=\"Pin Selected Nodes\"\n                position={Position.BOTTOM}\n            >\n                <Button\n                    className={classnames([\n                    Classes.BUTTON,\n                    Classes.MINIMAL\n                    ])}\n                    iconName=\"pin\"\n                    text=\"Pin\"\n                    intent={Intent.PRIMARY}\n                    onClick={() => {\n                    appState.graph.frame.pinSelectedNodes();\n                    this.forceUpdate();\n                    }}\n                />\n            </Tooltip>\n            <Tooltip\n                content=\"Unpin Selected Nodes\"\n                position={Position.BOTTOM}\n            >\n                <Button\n                    className={classnames([\n                    Classes.BUTTON,\n                    Classes.MINIMAL\n                    ])}\n                    iconName=\"unpin\"\n                    text=\"Unpin\"\n                    intent={Intent.WARNING}\n                    onClick={() => {\n                    appState.graph.frame.unpinSelectedNodes();\n                    this.forceUpdate();\n                    }}\n                />\n            </Tooltip>\n            <Tooltip\n                content=\"Hide Selected Nodes\"\n                position={Position.BOTTOM}\n            >\n                <Button\n                    className={classnames([\n                    Classes.BUTTON,\n                    Classes.MINIMAL\n                    ])}\n                    iconName=\"delete\"\n                    text=\"Hide\"\n                    intent={Intent.DANGER}\n                    onClick={() => {\n                    appState.graph.hideNodes(\n                        appState.graph.frame.getSelectedIds()\n                    );\n                    this.forceUpdate();\n                    }}\n                />\n            </Tooltip>\n            {// This menu only shows when there's exactly 1 node selected\n              appState.graph.selectedNodes.length === 1 && (\n                <div style={{ display: \"inline\" }}>\n                  <Tooltip\n                    content=\"Open Neighbor Dialog\"\n                    position={Position.BOTTOM}\n                  >\n                    <Button\n                      className={classnames([\n                        Classes.BUTTON,\n                        Classes.MINIMAL\n                      ])}\n                      iconName=\"graph\"\n                      text={`Neighbors (${numHiddenNeighbor} hidden)`}\n                      intent={Intent.PRIMARY}\n                      onClick={() => {\n                        appState.graph.frame.pauseLayout();\n                        appState.preferences.neighborDialogOpen = true;\n                        this.forceUpdate();\n                      }}\n                    />\n                  </Tooltip>\n                </div>\n            )}\n        </div>\n      );\n  }\n}\n\nexport default SelectionActionPanel;","import React from \"react\";\nimport { Classes, Tab2, Tabs2 } from \"@blueprintjs/core\";\nimport classnames from \"classnames\";\nimport { observer } from \"mobx-react\";\nimport appState from \"../stores\";\nimport SimpleSelect from \"./utils/SimpleSelect\";\nimport { addNode } from \"../ipc/client\";\nimport NodesPanel from \"./panels/NodesPanel\";\nimport LabelsPanel from \"./panels/LabelsPanel\";\nimport NodeDetail from \"./panels/NodeDetailPanel\";\nimport Legends from \"./Legends\";\nimport StatusBar from './StatusBar';\nimport SelectionActionPanel from \"./panels/SelectionActionPanel\";\n\n// TODO: migrate to simple select\n\n@observer\nclass RenderOptionsCard extends React.Component {\n  render() {\n    return (\n      <div>\n        <h4>Graph Options</h4>\n        <Tabs2 animate id=\"graph-options\">\n          <Tab2 id=\"nodes\" title=\"Nodes\" panel={<NodesPanel />} />\n          <Tab2 id=\"labels\" title=\"Labels\" panel={<LabelsPanel />} />\n          {/* <Tab2 id=\"layout\" title=\"Layout\" panel={<LayoutPanel />} /> */}\n          <Tabs2.Expander />\n        </Tabs2>\n      </div>\n    );\n  }\n}\n\n//\n\n@observer\nclass FloatingCards extends React.Component {\n  optionsVisible = {\n    left: '0em'\n  }\n  optionsInvisible = {\n   left: '-22em'\n  }\n  sideButtonVis = {\n    marginLeft: '50px'\n  }\n  sideButtonInv = {\n    marginLeft: '-15px'\n  }\n  toggleOptions = () => {\n      appState.preferences.isRenderOptionsCardHidden = !appState.preferences.isRenderOptionsCardHidden;\n  };\n  render() {\n    return (\n      <div className=\"floating-overlay\">\n        <div className=\"left-cards\">\n          {appState.search.panelOpen && (\n            <div\n              className={classnames(\n                Classes.CARD,\n                Classes.ELEVATION_2,\n                \"overlay-card\",\n                \"left-overlay-card\"\n              )}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"left\",\n                  alignItems: \"left\"\n                }}\n              >\n                <h4 style={{ width: 140 }}>\n                  {appState.search.numCandidates} results\n                </h4>\n                <div style={{ width: 20 }} />\n                <h4>Order</h4>\n                <div style={{ width: 5 }} />\n                <SimpleSelect\n                  style={{ \"margin-bottom\": 10 }}\n                  items={[...appState.graph.metadata.nodeComputed, \"node_id\"]}\n                  onSelect={it => (appState.graph.searchOrder = it)}\n                  value={appState.graph.searchOrder}\n                />\n              </div>\n              <table\n                className={classnames(\n                  Classes.TABLE,\n                  Classes.TABLE_STRIPED,\n                  Classes.INTERACTIVE\n                )}\n                style={{\n                  width: \"100%\",\n                  userSelect: \"none\"\n                }}\n              >\n                <tbody>\n                  {appState.search.candidates.map((node, i) => (\n                    <tr\n                      key={i}\n                      onMouseOver={() =>\n                        appState.graph.frame.highlightNodeIds(\n                          [node.node_id],\n                          true\n                        )\n                      }\n                      onMouseDown={() => addNode(node.node_id)}\n                      onMouseLeave={() =>\n                        appState.graph.frame.highlightNodeIds(\n                          [node.node_id],\n                          false\n                        )\n                      }\n                    >\n                      <td>{node[appState.graph.nodes.labelBy]}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <center>\n                <a\n                  onMouseDown={() => {\n                    if (appState.search.pageNum > 0) {\n                      appState.search.pageNum -= 1;\n                      appState.search.candidates = appState.search.allCands.slice(\n                        appState.search.pageNum * appState.search.nPerPage,\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\n                      );\n                    }\n                  }}\n                >\n                  Prev&nbsp;\n                </a>\n                &nbsp;\n                {appState.search.pageNum !== 0 ? (\n                  <a\n                    onMouseDown={() => {\n                      appState.search.pageNum = 0;\n                      appState.search.candidates = appState.search.allCands.slice(\n                        appState.search.pageNum * appState.search.nPerPage,\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\n                      );\n                    }}\n                  >\n                    1&nbsp;\n                  </a>\n                ) : (\n                  <a\n                    style={{\n                      color: \"#111111\",\n                      pointerEvents: \"none\",\n                      cursor: \"default\"\n                    }}\n                  >\n                    {appState.search.pageNum + 1}&nbsp;\n                  </a>\n                )}\n                ...<b>&nbsp;</b>\n                {appState.search.pages.map(i => {\n                  if (\n                    i != 0 &&\n                    i != appState.search.maxPage &&\n                    i == appState.search.pageNum\n                  ) {\n                    return (\n                      <a\n                        key={i}\n                        style={{\n                          color: \"#111111\",\n                          pointerEvents: \"none\",\n                          cursor: \"default\"\n                        }}\n                      >\n                        {appState.search.pageNum + 1}&nbsp;\n                      </a>\n                    );\n                  } else if (\n                    i != 0 &&\n                    i != appState.search.maxPage &&\n                    ((i > appState.search.pageNum - 4 &&\n                      i < appState.search.pageNum + 4) ||\n                      (appState.search.pageNum < 4 && i < 8) ||\n                      (appState.search.pageNum > appState.search.maxPage - 4 &&\n                        i > appState.search.maxPage - 8))\n                  ) {\n                    return (\n                      <a\n                        key={i}\n                        onMouseDown={() => {\n                          appState.search.pageNum = i;\n                          appState.search.candidates = appState.search.allCands.slice(\n                            appState.search.pageNum * appState.search.nPerPage,\n                            (appState.search.pageNum + 1) *\n                              appState.search.nPerPage\n                          );\n                        }}\n                      >\n                        {i + 1}&nbsp;\n                      </a>\n                    );\n                  }\n                })}\n                ...&nbsp;\n                {appState.search.pageNum !== appState.search.maxPage ? (\n                  <a\n                    onMouseDown={() => {\n                      appState.search.pageNum = appState.search.maxPage;\n                      appState.search.candidates = appState.search.allCands.slice(\n                        appState.search.pageNum * appState.search.nPerPage,\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\n                      );\n                    }}\n                  >\n                    {appState.search.maxPage + 1}&nbsp;\n                  </a>\n                ) : (\n                  <a\n                    style={{\n                      color: \"#111111\",\n                      pointerEvents: \"none\",\n                      cursor: \"default\"\n                    }}\n                  >\n                    {appState.search.pageNum + 1}\n                  </a>\n                )}\n                &nbsp;\n                <a\n                  onMouseDown={() => {\n                    if (appState.search.pageNum < appState.search.maxPage) {\n                      appState.search.pageNum += 1;\n                      appState.search.candidates = appState.search.allCands.slice(\n                        appState.search.pageNum * appState.search.nPerPage,\n                        (appState.search.pageNum + 1) * appState.search.nPerPage\n                      );\n                    }\n                  }}\n                >\n                  Next\n                </a>\n                <br />\n                <br />\n                <h5>Page {appState.search.pageNum + 1}</h5>\n              </center>\n            </div>\n          )}\n          <div\n            className={classnames(\n              Classes.CARD,\n              Classes.ELEVATION_2,\n              \"overlay-card\",\n              \"left-overlay-card\",\n              \"transparent-frame\",\n              \"left-cards\"\n            )} style = {appState.preferences.isRenderOptionsCardHidden ? this.optionsInvisible : this.optionsVisible}\n            >\n            <button className = \"openbtn2\" onClick = {this.toggleOptions}> &#8249;\n            </button>\n            <br/>\n            <RenderOptionsCard />\n          </div>\n          <div className = {classnames(Classes.CARD, Classes.ELEVATION_2, \"overlay-card\",\n          \"transparent-frame\")} style = {{width: \"1em\", paddingTop: \"1em\", paddingRight: \"0.7em\", paddingBottom: \"0.5em\", marginLeft: \"-5.4em\"}}>\n            <button className = \"openbtn\" onClick = {this.toggleOptions} style = {appState.preferences.isRenderOptionsCardHidden ? this.sideButtonVis : this.sideButtonInv}>\n            &#9776;\n              </button>\n          </div>\n        </div>\n        {appState.graph.selectedNodes.length === 1 && (\n          <NodeDetail node={appState.graph.selectedNodes[0].data.ref} />\n        )}\n        <Legends />\n        <StatusBar />\n        {// This menu only shows when there are nodes selected\n              appState.graph.selectedNodes.length > 0 && !appState.preferences.isNavbarInMinimalMode && <SelectionActionPanel />\n        }\n      </div>\n    );\n  }\n}\n\n\nexport default FloatingCards;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport classnames from \"classnames\";\nimport {\n  Button,\n  Classes,\n  FocusStyleManager,\n  NonIdealState\n} from \"@blueprintjs/core\";\nimport Dialogs from \"./components/Dialogs\";\nimport Navbar from \"./components/Navbar\";\nimport WorkspaceView from \"./components/WorkspaceView\";\nimport appState from \"./stores/index\";\nimport ThreeJSVis from \"./visualizers/ThreeJSVis\";\nimport FloatingCards from \"./components/FloatingCards\";\nimport registerIPC from \"./ipc/client\";\nimport { fetchWorkspaceProjects } from \"./ipc/client\";\nimport { MOBILE_WIDTH_CUTOFF, MOBILE_HEIGHT_CUTOFF } from \"./constants\";\n\nimport keydown, { Keys } from \"react-keydown\";\n\nregisterIPC();\nFocusStyleManager.onlyShowFocusOnTabs();\n\nfetchWorkspaceProjects();\n\nappState.preferences.loadUserConfig();\n\nconst { DELETE, BACKSPACE, P, U } = Keys;\n\n// Respond to window resize, also triggered after frame is loaded.\nfunction respondToResize() {\n  if (!appState.graph.frame) {\n    window.setTimeout(respondToResize, 1000);\n    return;\n  }\n  if (window.innerWidth < MOBILE_WIDTH_CUTOFF || window.innerHeight < MOBILE_HEIGHT_CUTOFF) {\n    appState.preferences.turnOnMinimalMode();\n  }\n}\n\nrespondToResize();\n\nwindow.addEventListener('resize', respondToResize);\n\n@keydown\n@observer\nclass App extends React.Component {\n  componentWillReceiveProps({ keydown }) {\n    if (keydown.event) {\n      if (keydown.event.which === DELETE || keydown.event.which === BACKSPACE) {\n        if (appState && appState.graph && appState.graph.frame) {\n          appState.graph.hideNodes(appState.graph.frame.getSelectedIds());\n          this.forceUpdate();\n        }\n      } else if (keydown.event.which === P) {\n        if (appState && appState.graph && appState.graph.frame) {\n          appState.graph.frame.pinSelectedNodes();\n        }\n      } else if (keydown.event.which === U) {\n        if (appState && appState.graph && appState.graph.frame) {\n          appState.graph.frame.unpinSelectedNodes();\n        }\n      }\n    }\n  }\n  render() {\n    return (\n      <div\n        className={classnames({\n          \"app-wrapper\": true,\n          [Classes.DARK]: appState.preferences.darkMode\n        })}\n      >\n        <Navbar />\n        <main className=\"main\">\n          {appState.graph.hasGraph ? (\n            <ThreeJSVis />\n          ) : (\n            <WorkspaceView />\n          )}\n        </main>\n        {appState.graph.hasGraph && <FloatingCards />}\n        <Dialogs />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nimport 'normalize.css/normalize.css';\nimport '@blueprintjs/core/dist/blueprint.css';\nimport '@blueprintjs/table/dist/table.css';\nimport './styles/index.css';\n\nconst render = () => {\n    ReactDOM.render(<App/>, document.getElementById('root'));\n};\n\nrender();","import * as scale from \"d3-scale\";\n\n// Argo-lite Iframe widget mode\n// Build the app separately and host it on a different URL\n// If set to true, the app will begin in widget mode\n// hiding certain panels, logo, and minimap\n// and show a minimalist Navbar.\nexport const IS_IFRAME_WIDGET = window.location !== window.parent.location;\n\nexport const FRONTEND_URL = \"https://poloclub.github.io/argo-graph-lite\";\nexport const LOGO_URL = \"https://github.com/poloclub/argo-graph-lite\";\nexport const GITHUB_URL = \"https://github.com/poloclub/argo-graph-lite\";\n// Argo-lite Graph Sharing backend Strapi Server:\nexport const BACKEND_URL = \"https://argo-share.herokuapp.com\"; // for production\n// export const BACKEND_URL = \"https://sleepy-brushlands-57948.herokuapp.com\"; // for free heroku\n// export const BACKEND_URL = \"http://localhost:1337\"; // for local strapi development\nexport const SAMPLE_GRAPH_SNAPSHOTS = [\n  [\"Les Miserables\", \"3b5f746f-19a5-44d1-99ea-407ff9e47a0e\"],\n  [\"CORD-19 Citation Graph 06-02\", \"4bf882d3-8966-4f41-a590-acafeb998d2a\"]\n];\n\n// When resizing window or running on mobile,\n// used to determine whether screen\n// is considered small.\nexport const MOBILE_WIDTH_CUTOFF = 800;\nexport const MOBILE_HEIGHT_CUTOFF = 480;\n\nexport const SCALE_LINEAR = \"Linear Scale\";\nexport const SCALE_LOG = \"Log Scale\";\n\nexport const scales = {\n  [SCALE_LINEAR]: scale.scaleLinear,\n  [SCALE_LOG]: scale.scaleLog\n};\n\nexport const LOAD_USER_CONFIG = \"load-user-config\";\nexport const LOADED_USER_CONFIG = \"loaded-user-config\";\nexport const SAVE_USER_CONFIG = \"save-user-config\";\nexport const SAVED_USER_CONFIG = \"saved-user-config\";\n\nexport const FETCH_WORKSPACE_PROJECTS = \"fetch-workspace-projects\";\nexport const FETCHED_WORKSPACE_PROJECTS = \"fetched-workspace-projects\";\nexport const MENU_NEW_PROJECT = \"menu-new-project\";\nexport const CREATE_NEW_PROJECT = \"create-new-project\";\nexport const CREATED_NEW_PROJECT = \"created-new-project\";\n\nexport const DELETE_FILE = \"delete-file\";\nexport const RENAME_FILE = \"rename-file\";\n\nexport const LOAD_GRAPH_JSON = \"load-graph-json\";\nexport const LOAD_GRAPH_SQLITE = \"load-graph-sqlite\";\nexport const LOADED_GRAPH_JSON = \"loaded-graph-json\";\nexport const LOAD_TOAST_KEY = \"load-toast-key\";\n\nexport const SAVE_GRAPH_JSON = \"save-graph-json\";\nexport const SAVE_GRAPH_SQLITE = \"save-graph-sqlite\";\nexport const SAVED_GRAPH_JSON = \"saved-graph-json\";\nexport const SAVE_TOAST_KEY = \"save-const-key\";\n\nexport const MENU_LOAD = \"menu-load\";\nexport const MENU_IMPORT_CSV = \"menu-import-csv\";\nexport const MENU_SAVE_GRAPH_STATE = \"menu-save-graph-state\";\nexport const MENU_SAVE_GRAPH_STATE_TO_PROJECT =\n  \"menu-save-graph-state-to-project\";\nexport const MENU_SAVE_GRAPH_SQLITE = \"menu-save-graph-sqlite\";\nexport const SAVE_GRAPH_STATE = \"save-graph-state\";\nexport const SAVED_GRAPH_STATE = \"saved-graph-state\";\nexport const SAVE_GRAPH_STATE_TO_PROJECT = \"save-graph-state-to-project\";\nexport const SAVED_GRAPH_STATE_TO_PROJECT = \"saved-graph-state-to-project\";\nexport const LOAD_GRAPH_STATE = \"load-graph-state\";\nexport const LOADED_GRAPH_STATE = \"loaded-graph-state\";\n\nexport const SHOW_ITEM_IN_FOLDER = \"show-item-in-folder\";\nexport const SHOW_WORKSPACE_FOLDER = 'show-workspace-folder';\nexport const CHANGE_WORKSPACE_FOLDER = 'change-workspace-folder';\nexport const CHANGED_WORKSPACE_FOLDER = 'changed-workspace-folder';\n\nexport const CHOOSE_EDGE_FILE = \"choose-edge-file\";\nexport const CHOSEN_EDGE_FILE = \"chosen-edge-file\";\nexport const CHOOSE_NODE_FILE = \"choose-node-file\";\nexport const PEAKED_NODE_FILE = \"peaked-node-file\";\nexport const CHOSEN_NODE_FILE = \"chosen-node-file\";\n\nexport const CHOOSE_GRAPH_FILE = \"choose-graph-file\";\nexport const CHOSEN_GRAPH_FILE = \"chosen-graph-file\";\nexport const CHOOSE_STATE_FILE = \"choose-state-file\";\nexport const CHOSEN_STATE_FILE = \"chosen-state-file\";\n\nexport const NODE_AND_EDGE_FILE = \"both nodes and edges file\";\nexport const ONLY_EDGE_FILE = \"only edges file\";\n\nexport const GRAPH_AND_STATE_FILE = \"both graph and snapshot file\";\nexport const ONLY_GRAPH_FILE = \"only graph file\";\nexport const IMPORT_GRAPH = \"import-graph\";\nexport const IMPORTED_GRAPH = \"imported-graph\";\nexport const OPEN_GRAPH = \"open-graph\";\nexport const OPENED_GRAPH = \"opened-graph\";\n\nexport const SEARCH_REQUEST = \"search-request\";\nexport const SEARCH_RESPONSE = \"search-response\";\n\nexport const ADD_NODES = \"add-nodes\";\nexport const ADD_SELECT_NODE = \"add-select-node\";\nexport const ADD_NODE = \"add-node\";\nexport const GET_NEIGHBORS = \"get-neighbors\";\n","var $ = require(\"jquery\");\nfunction Edge(source, target) {\n  this.source = source;\n  this.target = target;\n  this.renderData = {};\n}\n\nfunction Node(id, size = 0.5) {\n  this.id = id;\n  this.index = id;\n  this.in = [];\n  this.out = [];\n  this.size = size;\n  this.renderData = {};\n  this.domainData = {};\n  this.x = 1;\n  this.y = 1;\n  this.vx = 1;\n  this.vy = 1;\n\n  /**\n   * Tells if a node is connected to a node of a certain id\n   */\n  this.connectedTo = function(id) {\n    outNodeIds = this.out.map(function(outNode) {\n      return outNode.id;\n    });\n    return $.inArray(id, outNodeIds) >= 0;\n  };\n}\n\nNode.prototype.connectNode = function(node) {\n  if (!this.connectedTo(node.id)) {\n    this.out.push(node);\n    return true;\n  }\n  return false;\n};\n\nexports.Edge = Edge;\nexports.Node = Node;\n","var THREE = require(\"three\");\n\nTHREE.MeshLine = function() {\n  this.positions = [];\n\n  this.previous = [];\n  this.next = [];\n  this.side = [];\n  this.width = [];\n  this.indices_array = [];\n  this.uvs = [];\n  this.counters = [];\n  this.geometry = new THREE.BufferGeometry();\n\n  this.widthCallback = null;\n};\n\nTHREE.MeshLine.prototype.setGeometry = function(g, c) {\n  this.widthCallback = c;\n\n  this.positions = [];\n  this.counters = [];\n\n  if (g instanceof THREE.Geometry) {\n    for (var j = 0; j < g.vertices.length; j++) {\n      var v = g.vertices[j];\n      var c = j / g.vertices.length;\n      this.positions.push(v.x, v.y, v.z);\n      this.positions.push(v.x, v.y, v.z);\n      this.counters.push(c);\n      this.counters.push(c);\n    }\n  }\n\n  if (g instanceof THREE.BufferGeometry) {\n    // read attribute positions ?\n  }\n\n  if (g instanceof Float32Array || g instanceof Array) {\n    for (var j = 0; j < g.length; j += 3) {\n      var c = j / g.length;\n      this.positions.push(g[j], g[j + 1], g[j + 2]);\n      this.positions.push(g[j], g[j + 1], g[j + 2]);\n      this.counters.push(c);\n      this.counters.push(c);\n    }\n  }\n\n  this.process();\n};\n\nTHREE.MeshLine.prototype.compareV3 = function(a, b) {\n  var aa = a * 6;\n  var ab = b * 6;\n  return (\n    this.positions[aa] === this.positions[ab] &&\n    this.positions[aa + 1] === this.positions[ab + 1] &&\n    this.positions[aa + 2] === this.positions[ab + 2]\n  );\n};\n\nTHREE.MeshLine.prototype.copyV3 = function(a) {\n  var aa = a * 6;\n  return [this.positions[aa], this.positions[aa + 1], this.positions[aa + 2]];\n};\n\nTHREE.MeshLine.prototype.process = function() {\n  var l = this.positions.length / 6;\n\n  this.previous = [];\n  this.next = [];\n  this.side = [];\n  this.width = [];\n  this.indices_array = [];\n  this.uvs = [];\n\n  for (var j = 0; j < l; j++) {\n    this.side.push(1);\n    this.side.push(-1);\n  }\n\n  var w;\n  for (var j = 0; j < l; j++) {\n    if (this.widthCallback) w = this.widthCallback(j / (l - 1));\n    else w = 1;\n    this.width.push(w);\n    this.width.push(w);\n  }\n\n  for (var j = 0; j < l; j++) {\n    this.uvs.push(j / (l - 1), 0);\n    this.uvs.push(j / (l - 1), 1);\n  }\n\n  var v;\n\n  if (this.compareV3(0, l - 1)) {\n    v = this.copyV3(l - 2);\n  } else {\n    v = this.copyV3(0);\n  }\n  this.previous.push(v[0], v[1], v[2]);\n  this.previous.push(v[0], v[1], v[2]);\n  for (var j = 0; j < l - 1; j++) {\n    v = this.copyV3(j);\n    this.previous.push(v[0], v[1], v[2]);\n    this.previous.push(v[0], v[1], v[2]);\n  }\n\n  for (var j = 1; j < l; j++) {\n    v = this.copyV3(j);\n    this.next.push(v[0], v[1], v[2]);\n    this.next.push(v[0], v[1], v[2]);\n  }\n\n  if (this.compareV3(l - 1, 0)) {\n    v = this.copyV3(1);\n  } else {\n    v = this.copyV3(l - 1);\n  }\n  this.next.push(v[0], v[1], v[2]);\n  this.next.push(v[0], v[1], v[2]);\n\n  for (var j = 0; j < l - 1; j++) {\n    var n = j * 2;\n    this.indices_array.push(n, n + 1, n + 2);\n    this.indices_array.push(n + 2, n + 1, n + 3);\n  }\n\n  if (!this.attributes) {\n    this.attributes = {\n      position: new THREE.BufferAttribute(new Float32Array(this.positions), 3),\n      previous: new THREE.BufferAttribute(new Float32Array(this.previous), 3),\n      next: new THREE.BufferAttribute(new Float32Array(this.next), 3),\n      side: new THREE.BufferAttribute(new Float32Array(this.side), 1),\n      width: new THREE.BufferAttribute(new Float32Array(this.width), 1),\n      uv: new THREE.BufferAttribute(new Float32Array(this.uvs), 2),\n      index: new THREE.BufferAttribute(new Uint16Array(this.indices_array), 1),\n      counters: new THREE.BufferAttribute(new Float32Array(this.counters), 1)\n    };\n  } else {\n    this.attributes.position.copyArray(new Float32Array(this.positions));\n    this.attributes.position.needsUpdate = true;\n    this.attributes.previous.copyArray(new Float32Array(this.previous));\n    this.attributes.previous.needsUpdate = true;\n    this.attributes.next.copyArray(new Float32Array(this.next));\n    this.attributes.next.needsUpdate = true;\n    this.attributes.side.copyArray(new Float32Array(this.side));\n    this.attributes.side.needsUpdate = true;\n    this.attributes.width.copyArray(new Float32Array(this.width));\n    this.attributes.width.needsUpdate = true;\n    this.attributes.uv.copyArray(new Float32Array(this.uvs));\n    this.attributes.uv.needsUpdate = true;\n    this.attributes.index.copyArray(new Uint16Array(this.indices_array));\n    this.attributes.index.needsUpdate = true;\n  }\n\n  this.geometry.addAttribute(\"position\", this.attributes.position);\n  this.geometry.addAttribute(\"previous\", this.attributes.previous);\n  this.geometry.addAttribute(\"next\", this.attributes.next);\n  this.geometry.addAttribute(\"side\", this.attributes.side);\n  this.geometry.addAttribute(\"width\", this.attributes.width);\n  this.geometry.addAttribute(\"uv\", this.attributes.uv);\n  this.geometry.addAttribute(\"counters\", this.attributes.counters);\n\n  this.geometry.setIndex(this.attributes.index);\n};\n\nfunction memcpy(src, srcOffset, dst, dstOffset, length) {\n  var i;\n\n  src = src.subarray || src.slice ? src : src.buffer;\n  dst = dst.subarray || dst.slice ? dst : dst.buffer;\n\n  src = srcOffset\n    ? src.subarray\n      ? src.subarray(srcOffset, length && srcOffset + length)\n      : src.slice(srcOffset, length && srcOffset + length)\n    : src;\n\n  if (dst.set) {\n    dst.set(src, dstOffset);\n  } else {\n    for (i = 0; i < src.length; i++) {\n      dst[i + dstOffset] = src[i];\n    }\n  }\n\n  return dst;\n}\n\n/**\n * Fast method to advance the line by one position.  The oldest position is removed.\n * @param position\n */\nTHREE.MeshLine.prototype.advance = function(position) {\n  var positions = this.attributes.position.array;\n  var previous = this.attributes.previous.array;\n  var next = this.attributes.next.array;\n  var l = positions.length;\n\n  // PREVIOUS\n  memcpy(positions, 0, previous, 0, l);\n\n  // POSITIONS\n  memcpy(positions, 6, positions, 0, l - 6);\n\n  positions[l - 6] = position.x;\n  positions[l - 5] = position.y;\n  positions[l - 4] = position.z;\n  positions[l - 3] = position.x;\n  positions[l - 2] = position.y;\n  positions[l - 1] = position.z;\n\n  // NEXT\n  memcpy(positions, 6, next, 0, l - 6);\n\n  next[l - 6] = position.x;\n  next[l - 5] = position.y;\n  next[l - 4] = position.z;\n  next[l - 3] = position.x;\n  next[l - 2] = position.y;\n  next[l - 1] = position.z;\n\n  this.attributes.position.needsUpdate = true;\n  this.attributes.previous.needsUpdate = true;\n  this.attributes.next.needsUpdate = true;\n};\n\nTHREE.MeshLineMaterial = function(parameters) {\n  var vertexShaderSource = [\n    \"precision highp float;\",\n    \"\",\n    \"attribute vec3 position;\",\n    \"attribute vec3 previous;\",\n    \"attribute vec3 next;\",\n    \"attribute float side;\",\n    \"attribute float width;\",\n    \"attribute vec2 uv;\",\n    \"attribute float counters;\",\n    \"\",\n    \"uniform mat4 projectionMatrix;\",\n    \"uniform mat4 modelViewMatrix;\",\n    \"uniform vec2 resolution;\",\n    \"uniform float lineWidth;\",\n    \"uniform vec3 color;\",\n    \"uniform float opacity;\",\n    \"uniform float near;\",\n    \"uniform float far;\",\n    \"uniform float sizeAttenuation;\",\n    \"\",\n    \"varying vec2 vUV;\",\n    \"varying vec4 vColor;\",\n    \"varying vec3 vPosition;\",\n    \"varying float vCounters;\",\n    \"\",\n    \"vec2 fix( vec4 i, float aspect ) {\",\n    \"\",\n    \"    vec2 res = i.xy / i.w;\",\n    \"    res.x *= aspect;\",\n    \"\t vCounters = counters;\",\n    \"    return res;\",\n    \"\",\n    \"}\",\n    \"\",\n    \"void main() {\",\n    \"\",\n    \"    float aspect = resolution.x / resolution.y;\",\n    \"\t float pixelWidthRatio = 1. / (resolution.x * projectionMatrix[0][0]);\",\n    \"\",\n    \"    vColor = vec4( color, opacity );\",\n    \"    vUV = uv;\",\n    \"\",\n    \"    mat4 m = projectionMatrix * modelViewMatrix;\",\n    \"    vec4 finalPosition = m * vec4( position, 1.0 );\",\n    \"    vec4 prevPos = m * vec4( previous, 1.0 );\",\n    \"    vec4 nextPos = m * vec4( next, 1.0 );\",\n    \"\",\n    \"    vec2 currentP = fix( finalPosition, aspect );\",\n    \"    vec2 prevP = fix( prevPos, aspect );\",\n    \"    vec2 nextP = fix( nextPos, aspect );\",\n    \"\",\n    \"\t float pixelWidth = finalPosition.w * pixelWidthRatio;\",\n    \"    float w = 1.8 * pixelWidth * lineWidth * width;\",\n    \"\",\n    \"    if( sizeAttenuation == 1. ) {\",\n    \"        w = 1.8 * lineWidth * width;\",\n    \"    }\",\n    \"\",\n    \"    vec2 dir;\",\n    \"    if( nextP == currentP ) dir = normalize( currentP - prevP );\",\n    \"    else if( prevP == currentP ) dir = normalize( nextP - currentP );\",\n    \"    else {\",\n    \"        vec2 dir1 = normalize( currentP - prevP );\",\n    \"        vec2 dir2 = normalize( nextP - currentP );\",\n    \"        dir = normalize( dir1 + dir2 );\",\n    \"\",\n    \"        vec2 perp = vec2( -dir1.y, dir1.x );\",\n    \"        vec2 miter = vec2( -dir.y, dir.x );\",\n    \"        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );\",\n    \"\",\n    \"    }\",\n    \"\",\n    \"    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;\",\n    \"    vec2 normal = vec2( -dir.y, dir.x );\",\n    \"    normal.x /= aspect;\",\n    \"    normal *= .5 * w;\",\n    \"\",\n    \"    vec4 offset = vec4( normal * side, 0.0, 1.0 );\",\n    \"    finalPosition.xy += offset.xy;\",\n    \"\",\n    \"\t vPosition = ( modelViewMatrix * vec4( position, 1. ) ).xyz;\",\n    \"    gl_Position = finalPosition;\",\n    \"\",\n    \"}\"\n  ];\n\n  var fragmentShaderSource = [\n    \"#extension GL_OES_standard_derivatives : enable\",\n    \"precision mediump float;\",\n    \"\",\n    \"uniform sampler2D map;\",\n    \"uniform float useMap;\",\n    \"uniform float useDash;\",\n    \"uniform vec2 dashArray;\",\n    \"uniform float visibility;\",\n    \"uniform float alphaTest;\",\n    \"\",\n    \"varying vec2 vUV;\",\n    \"varying vec4 vColor;\",\n    \"varying vec3 vPosition;\",\n    \"varying float vCounters;\",\n    \"\",\n    \"void main() {\",\n    \"\",\n    \"    vec4 c = vColor;\",\n    \"\t if( c.a < alphaTest ) discard;\",\n    \"    if( useMap == 1. ) c *= texture2D( map, vUV );\",\n    \"\t if( useDash == 1. ){\",\n    \"\t \t \",\n    \"\t }\",\n    \"    gl_FragColor = c;\",\n    \"\t gl_FragColor.a *= step(vCounters,visibility);\",\n    \"}\"\n  ];\n\n  function check(v, d) {\n    if (v === undefined) return d;\n    return v;\n  }\n\n  THREE.Material.call(this);\n\n  parameters = parameters || {};\n\n  this.lineWidth = check(parameters.lineWidth, 1);\n  this.map = check(parameters.map, null);\n  this.useMap = check(parameters.useMap, 0);\n  this.color = check(parameters.color, new THREE.Color(0xffffff));\n  this.opacity = check(parameters.opacity, 1);\n  this.resolution = check(parameters.resolution, new THREE.Vector2(1, 1));\n  this.sizeAttenuation = check(parameters.sizeAttenuation, 1);\n  this.near = check(parameters.near, 1);\n  this.far = check(parameters.far, 1);\n  this.dashArray = check(parameters.dashArray, []);\n  this.useDash = this.dashArray !== [] ? 1 : 0;\n  this.visibility = check(parameters.visibility, 1);\n  this.alphaTest = check(parameters.alphaTest, 0);\n\n  var material = new THREE.RawShaderMaterial({\n    uniforms: {\n      lineWidth: { type: \"f\", value: this.lineWidth },\n      map: { type: \"t\", value: this.map },\n      useMap: { type: \"f\", value: this.useMap },\n      color: { type: \"c\", value: this.color },\n      opacity: { type: \"f\", value: this.opacity },\n      resolution: { type: \"v2\", value: this.resolution },\n      sizeAttenuation: { type: \"f\", value: this.sizeAttenuation },\n      near: { type: \"f\", value: this.near },\n      far: { type: \"f\", value: this.far },\n      dashArray: {\n        type: \"v2\",\n        value: new THREE.Vector2(this.dashArray[0], this.dashArray[1])\n      },\n      useDash: { type: \"f\", value: this.useDash },\n      visibility: { type: \"f\", value: this.visibility },\n      alphaTest: { type: \"f\", value: this.alphaTest }\n    },\n    vertexShader: vertexShaderSource.join(\"\\r\\n\"),\n    fragmentShader: fragmentShaderSource.join(\"\\r\\n\")\n  });\n\n  delete parameters.lineWidth;\n  delete parameters.map;\n  delete parameters.useMap;\n  delete parameters.color;\n  delete parameters.opacity;\n  delete parameters.resolution;\n  delete parameters.sizeAttenuation;\n  delete parameters.near;\n  delete parameters.far;\n  delete parameters.dashArray;\n  delete parameters.visibility;\n  delete parameters.alphaTest;\n\n  material.type = \"MeshLineMaterial\";\n\n  material.setValues(parameters);\n\n  return material;\n};\n\nTHREE.MeshLineMaterial.prototype = Object.create(THREE.Material.prototype);\nTHREE.MeshLineMaterial.prototype.constructor = THREE.MeshLineMaterial;\n\nTHREE.MeshLineMaterial.prototype.copy = function(source) {\n  THREE.Material.prototype.copy.call(this, source);\n\n  this.lineWidth = source.lineWidth;\n  this.map = source.map;\n  this.useMap = source.useMap;\n  this.color.copy(source.color);\n  this.opacity = source.opacity;\n  this.resolution.copy(source.resolution);\n  this.sizeAttenuation = source.sizeAttenuation;\n  this.near = source.near;\n  this.far = source.far;\n\n  return this;\n};\n\nexports.MeshLine = THREE.MeshLine;\nexports.MeshLineMaterial = THREE.MeshLineMaterial;\n","var Frame = require(\"./src/process\").Frame;\n\nexports.Frame = Frame;\n\nvar graph = require(\"ngraph.generators\").balancedBinTree(5);\n\nexports.graph = graph;\n\nif (window) {\n  window.Argo = exports;\n}\n","module.exports = __webpack_public_path__ + \"static/media/argologo.560a589f.png\";","var THREE = require(\"three\");\nvar STATS = require(\"stats.js\");\nwindow.THREE = THREE;\nrequire(\"../include/QuickHull\");\nrequire(\"../include/ConvexGeometry\");\nrequire(\"../include/CSS3DRenderer\");\nvar Edge = require(\"./structure/node\").Edge;\nvar Node = require(\"./structure/node\").Node;\nvar OrbitControls = require(\"../include/OrbitControls\")(THREE); //'three-orbit-controls')(THREE);\nTHREE.MeshLine = require(\"../include/THREE.MeshLine\").MeshLine;\nTHREE.MeshLineMaterial = require(\"../include/THREE.MeshLine\").MeshLineMaterial;\nvar d3 = require(\"d3\");\nvar ee = require(\"event-emitter\");\nvar IS_IFRAME_WIDGET = require(\"../../constants\").IS_IFRAME_WIDGET;\n\nexports.default = {\n  THREE: THREE,\n  STATS: STATS, // stats.js panel for showing fps and other stats.\n  STATS_SHOW: false,\n  Edge: Edge,\n  Node: Node,\n  OrbitControls: OrbitControls,\n  d3: d3,\n  ee: ee,\n  NODE_COLOR: 0x0055aa,\n  NODE_HIGHLIGHT: 0x3498db,\n  ADJACENT_HIGHLIGHT: 0x95a5a6,\n  SEARCH_HIGHLIGHT: 0xe67e22,\n  NODE_HTEXTURE: \"http://i.imgur.com/xzkxSIw.png\",\n  NODE_TEXTURE: \"http://i.imgur.com/reTXqiM.png\",\n  NODE_NO_HTEX: true,\n  NODE_NO_TEX: true,\n  NODE_NO_HCOLOR: false,\n  NODE_NO_COLOR: false,\n  NODE_NO_HIGHLIGHT: false,\n  NODE_NEIGHBOR_HIGHLIGHT: true,\n  NODE_SHAPE: \"square\",\n  NODE_HSHAPE: \"square\",\n  NODE_SIZE: 5,\n  HIGHLIGHT_SIZE: 1.0,\n  LAYOUT: \"d3\",\n  LINES: \"notfancy\",\n  MAP: !IS_IFRAME_WIDGET,\n  MAP_RENDER_PER_NUMBER_OF_FRAME: 10,\n  TEXT_SCALE: true,\n  TEXT_SIZE: 0.07,\n  TEXT_X_OFFSET: 0.52,\n  TEXT_Y_OFFSET: 0.35,\n  TEXT_BACK_COLOR: \"rgba(100, 100, 200, 0)\",\n  TEXT_OPACITY: \"1\",\n  TEXT_WIREFRAME: false,\n  PIN_COLOR: 0xffffff\n};\n","var def = require(\"./imports\").default;\nconst spawn = require(\"threads\").spawn;\nvar THREE = def.THREE;\nvar STATS = def.STATS;\nvar STATS_SHOW = def.STATS_SHOW;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nvar Frame = function(graph, options) {\n  // Needed to reference \"this\" in functions\n  var self = this;\n\n  // Options\n  this.inGraph = graph;\n  this.options = options || {\n    layout: def.LAYOUT\n  };\n  this.layout_options = this.options.graphLayout || {};\n\n  this.lineObjects = [];\n  this.lineIndices = [];\n  this.MAX_LINES = 100000;\n  this.textureLoader = new THREE.TextureLoader();\n  this.textureLoader.crossOrigin = true;\n  this.oldIntersect = -1;\n  this.selection = [];\n  this.fov = 60;\n  this.near = 1;\n  this.far = 5000;\n  this.mouseStart = new THREE.Vector3(0, 0, 0);\n  this.mouseEnd = new THREE.Vector3(0, 0, 0);\n  this.dragging = null;\n  this.showBox = false;\n  this.renderWidth = 1000;\n  this.renderHeight = 1000;\n  this.maxZoom = 1000;\n  this.paused = false;\n  this.mouseDown = false;\n  this.ee = ee({});\n  this.layoutInit = true;\n  this.labelSize = 6;\n  this.relativeFontSize = 1;\n  this.mapShowing = def.MAP;\n  this.mapRenderPerNumberOfFrame = def.MAP_RENDER_PER_NUMBER_OF_FRAME;\n  this.darkMode = true;\n  this.lastNode = null;\n  this.rightClickedNode = null;\n  this.doHighlightNeighbors = def.NODE_NEIGHBOR_HIGHLIGHT;\n  this.prevHighlights = [];\n  this.hull = null;\n\n  require(\"./utils/utils\")(this);\n  require(\"./setup\")(this);\n  require(\"./addremove\")(this);\n  require(\"./highlighting\")(this);\n  require(\"./select\")(this);\n  require(\"./mouse\")(this);\n  require(\"./modify\")(this);\n  require(\"./draw\")(this);\n  require(\"./api\")(this);\n  require(\"./update\")(this);\n\n  /**\n   *  Starting point, run once to create scene\n   */\n  let stats = new STATS();\n  this.display = function() {\n    if (STATS_SHOW) {\n      stats.showPanel(0); // show fps panel\n      document.body.appendChild(stats.dom);\n    }\n    this.animate();\n  };\n\n  /**\n   *  Creates loop called on every animation frame\n   */\n  \n  let fps = 30;\n  // let now;\n  // let then = Date.now();\n  // let interval = 1000 / fps;\n  // let delta;\n  this.animate = function() {\n    if (STATS_SHOW) {\n      stats.begin(); // Begin stats.js panel timing\n    }\n    \n    self.controls.update();\n    self.render();\n\n    if (STATS_SHOW) {\n      stats.end(); // End stats.js panel timing\n    }\n    \n    // now = Date.now();\n    // delta = now - then;\n    // if (delta > interval) {\n    //   then = now;\n    //   self.controls.update();\n    //   self.render();\n    // }\n    requestAnimationFrame(self.animate);\n  };\n\n  /**\n   *  Set initial properties\n   */\n  this.init = function(aa = true) {\n    self.renderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: aa,\n      preserveDrawingBuffer: true,\n    });\n    self.minimapRenderer = new THREE.WebGLRenderer({\n      alpha: true,\n      antialias: aa,\n      preserveDrawingBuffer: true,\n    });\n    //self.renderer.setPixelRatio(window.devicePixelRatio);\n    //self.renderer.setPixelRatio(0.1);\n    self.setDisplayParams();\n    self.setRendererParams();\n\n    self.setupCamera();\n    self.setupMinimap();\n    self.setupGeometry();\n    self.setupSelect();\n\n    // Make sure to clear children before setting up new frame.\n    self.element.innerHTML = \"\";\n    self.element.appendChild(self.renderer.domElement);\n    self.element.appendChild(self.cssRenderer.domElement);\n    self.element.appendChild(self.minimapRenderer.domElement);\n\n    self.setupLayout();\n\n    self.setupGraph();\n\n    window.addEventListener(\n      \"resize\",\n      function(e) {\n        e.preventDefault();\n        self.onWindowResize();\n      },\n      false\n    );\n  };\n\n  /**\n   * Change camera on window resize\n   */\n  self.onWindowResize = function() {\n    self.clientRect = self.element.getBoundingClientRect();\n    self.width = self.clientRect.width;\n    self.height = self.clientRect.height;\n    self.minimap.width = 0.2 * self.height;\n    self.minimap.height = 0.2 * self.height;\n    self.aspect = self.width / self.height;\n    self.ccamera.aspect = self.aspect;\n    self.ccamera.updateProjectionMatrix();\n\n    self.renderer.setSize(self.width, self.height);\n    self.cssRenderer.setSize(self.width, self.height);\n    self.minimapRenderer.setSize(0.2 * self.height, 0.2 * self.height);\n  };\n\n  /**\n   *  Draws graphics\n   */\n  var stage = 0;\n  var numberOfFrameSinceMiniMapRerender = 1;\n  this.render = function() {\n    self.updateCamera();\n    self.updateNodes();\n    if (stage == 1) {\n      self.updateLabels();\n      self.updateEdges();\n      stage = 0;\n    }\n    stage += 1;\n    numberOfFrameSinceMiniMapRerender += 1;\n    if (self.options.layout == \"d3\") {\n      if (self.layoutInit == true) {\n        var nodes = [];\n        self.graph.forEachNode(function(node) {\n          nodes.push(node);\n        });\n        self.force.nodes(nodes);\n        self.force.force(\"link\", d3.forceLink(self.lineIndices));\n        self.force.restart();\n        self.force.stop();\n        if (self.tickToStatic && !self.paused) {\n          // We don't tick and pause for now\n          for (\n            var i = 0,\n              n = Math.ceil(\n                Math.log(self.force.alphaMin()) /\n                  Math.log(1 - self.force.alphaDecay())\n              );\n            i < n;\n            ++i\n          ) {\n            self.force.tick();\n          }\n          //self.pauseLayout();\n        }\n        self.layoutInit = false;\n      }\n    }\n    self.renderer.setViewport(0, 0, self.width, self.height);\n    self.renderer.setScissor(0, 0, self.width, self.height);\n    self.renderer.setScissorTest(true);\n    self.renderer.render(self.scene, self.ccamera);\n    self.cssRenderer.render(self.scene, self.ccamera);\n\n    // Render MiniMap at a lower framerate.\n    if (numberOfFrameSinceMiniMapRerender >= this.mapRenderPerNumberOfFrame) {\n      numberOfFrameSinceMiniMapRerender = 0;\n\n      if (self.mapShowing) {\n        self.minimap.width = 0.2 * self.height;\n        self.minimap.height = 0.2 * self.height;\n        self.minimapRenderer.setViewport(0, 0, self.minimap.width, self.minimap.height);\n        self.minimapRenderer.setScissor(0, 0, self.minimap.width, self.minimap.height);\n        self.minimapRenderer.setScissorTest(true);\n        self.minimapRenderer.render(self.scene, self.minimap.camera);\n      }\n    }\n  };\n};\n\nexports.Frame = Frame;\n","/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ported from: https://github.com/maurizzzio/quickhull3d/ by Mauricio Poppe (https://github.com/maurizzzio)\n *\n */\n\n(function() {\n  var Visible = 0;\n  var Deleted = 1;\n\n  function QuickHull() {\n    this.tolerance = -1;\n\n    this.faces = []; // the generated faces of the convex hull\n    this.newFaces = []; // this array holds the faces that are generated within a single iteration\n\n    // the vertex lists work as follows:\n    //\n    // let 'a' and 'b' be 'Face' instances\n    // let 'v' be points wrapped as instance of 'Vertex'\n    //\n    //     [v, v, ..., v, v, v, ...]\n    //      ^             ^\n    //      |             |\n    //  a.outside     b.outside\n    //\n    this.assigned = new VertexList();\n    this.unassigned = new VertexList();\n\n    this.vertices = []; // vertices of the hull (internal representation of given geometry data)\n  }\n\n  Object.assign(QuickHull.prototype, {\n    setFromPoints: function(points) {\n      if (Array.isArray(points) !== true) {\n        console.error(\"THREE.QuickHull: Points parameter is not an array.\");\n      }\n\n      if (points.length < 4) {\n        console.error(\n          \"THREE.QuickHull: The algorithm needs at least four points.\"\n        );\n      }\n\n      this.makeEmpty();\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        this.vertices.push(new VertexNode(points[i]));\n      }\n\n      this.compute();\n\n      return this;\n    },\n\n    setFromObject: function(object) {\n      var points = [];\n\n      object.updateMatrixWorld(true);\n\n      object.traverse(function(node) {\n        var i, l, point;\n\n        var geometry = node.geometry;\n\n        if (geometry !== undefined) {\n          if (geometry.isGeometry) {\n            var vertices = geometry.vertices;\n\n            for (i = 0, l = vertices.length; i < l; i++) {\n              point = vertices[i].clone();\n              point.applyMatrix4(node.matrixWorld);\n\n              points.push(point);\n            }\n          } else if (geometry.isBufferGeometry) {\n            var attribute = geometry.attributes.position;\n\n            if (attribute !== undefined) {\n              for (i = 0, l = attribute.count; i < l; i++) {\n                point = new THREE.Vector3();\n\n                point\n                  .fromBufferAttribute(attribute, i)\n                  .applyMatrix4(node.matrixWorld);\n\n                points.push(point);\n              }\n            }\n          }\n        }\n      });\n\n      return this.setFromPoints(points);\n    },\n\n    makeEmpty: function() {\n      this.faces = [];\n      this.vertices = [];\n\n      return this;\n    },\n\n    // Adds a vertex to the 'assigned' list of vertices and assigns it to the given face\n\n    addVertexToFace: function(vertex, face) {\n      vertex.face = face;\n\n      if (face.outside === null) {\n        this.assigned.append(vertex);\n      } else {\n        this.assigned.insertBefore(face.outside, vertex);\n      }\n\n      face.outside = vertex;\n\n      return this;\n    },\n\n    // Removes a vertex from the 'assigned' list of vertices and from the given face\n\n    removeVertexFromFace: function(vertex, face) {\n      if (vertex === face.outside) {\n        // fix face.outside link\n\n        if (vertex.next !== null && vertex.next.face === face) {\n          // face has at least 2 outside vertices, move the 'outside' reference\n\n          face.outside = vertex.next;\n        } else {\n          // vertex was the only outside vertex that face had\n\n          face.outside = null;\n        }\n      }\n\n      this.assigned.remove(vertex);\n\n      return this;\n    },\n\n    // Removes all the visible vertices that a given face is able to see which are stored in the 'assigned' vertext list\n\n    removeAllVerticesFromFace: function(face) {\n      if (face.outside !== null) {\n        // reference to the first and last vertex of this face\n\n        var start = face.outside;\n        var end = face.outside;\n\n        while (end.next !== null && end.next.face === face) {\n          end = end.next;\n        }\n\n        this.assigned.removeSubList(start, end);\n\n        // fix references\n\n        start.prev = end.next = null;\n        face.outside = null;\n\n        return start;\n      }\n    },\n\n    // Removes all the visible vertices that 'face' is able to see\n\n    deleteFaceVertices: function(face, absorbingFace) {\n      var faceVertices = this.removeAllVerticesFromFace(face);\n\n      if (faceVertices !== undefined) {\n        if (absorbingFace === undefined) {\n          // mark the vertices to be reassigned to some other face\n\n          this.unassigned.appendChain(faceVertices);\n        } else {\n          // if there's an absorbing face try to assign as many vertices as possible to it\n\n          var vertex = faceVertices;\n\n          do {\n            // we need to buffer the subsequent vertex at this point because the 'vertex.next' reference\n            // will be changed by upcoming method calls\n\n            var nextVertex = vertex.next;\n\n            var distance = absorbingFace.distanceToPoint(vertex.point);\n\n            // check if 'vertex' is able to see 'absorbingFace'\n\n            if (distance > this.tolerance) {\n              this.addVertexToFace(vertex, absorbingFace);\n            } else {\n              this.unassigned.append(vertex);\n            }\n\n            // now assign next vertex\n\n            vertex = nextVertex;\n          } while (vertex !== null);\n        }\n      }\n\n      return this;\n    },\n\n    // Reassigns as many vertices as possible from the unassigned list to the new faces\n\n    resolveUnassignedPoints: function(newFaces) {\n      if (this.unassigned.isEmpty() === false) {\n        var vertex = this.unassigned.first();\n\n        do {\n          // buffer 'next' reference, see .deleteFaceVertices()\n\n          var nextVertex = vertex.next;\n\n          var maxDistance = this.tolerance;\n\n          var maxFace = null;\n\n          for (var i = 0; i < newFaces.length; i++) {\n            var face = newFaces[i];\n\n            if (face.mark === Visible) {\n              var distance = face.distanceToPoint(vertex.point);\n\n              if (distance > maxDistance) {\n                maxDistance = distance;\n                maxFace = face;\n              }\n\n              if (maxDistance > 1000 * this.tolerance) break;\n            }\n          }\n\n          // 'maxFace' can be null e.g. if there are identical vertices\n\n          if (maxFace !== null) {\n            this.addVertexToFace(vertex, maxFace);\n          }\n\n          vertex = nextVertex;\n        } while (vertex !== null);\n      }\n\n      return this;\n    },\n\n    // Computes the extremes of a simplex which will be the initial hull\n\n    computeExtremes: function() {\n      var min = new THREE.Vector3();\n      var max = new THREE.Vector3();\n\n      var minVertices = [];\n      var maxVertices = [];\n\n      var i, l, j;\n\n      // initially assume that the first vertex is the min/max\n\n      for (i = 0; i < 3; i++) {\n        minVertices[i] = maxVertices[i] = this.vertices[0];\n      }\n\n      min.copy(this.vertices[0].point);\n      max.copy(this.vertices[0].point);\n\n      // compute the min/max vertex on all six directions\n\n      for (i = 0, l = this.vertices.length; i < l; i++) {\n        var vertex = this.vertices[i];\n        var point = vertex.point;\n\n        // update the min coordinates\n\n        for (j = 0; j < 3; j++) {\n          if (point.getComponent(j) < min.getComponent(j)) {\n            min.setComponent(j, point.getComponent(j));\n            minVertices[j] = vertex;\n          }\n        }\n\n        // update the max coordinates\n\n        for (j = 0; j < 3; j++) {\n          if (point.getComponent(j) > max.getComponent(j)) {\n            max.setComponent(j, point.getComponent(j));\n            maxVertices[j] = vertex;\n          }\n        }\n      }\n\n      // use min/max vectors to compute an optimal epsilon\n\n      this.tolerance =\n        3 *\n        Number.EPSILON *\n        (Math.max(Math.abs(min.x), Math.abs(max.x)) +\n          Math.max(Math.abs(min.y), Math.abs(max.y)) +\n          Math.max(Math.abs(min.z), Math.abs(max.z)));\n\n      return { min: minVertices, max: maxVertices };\n    },\n\n    // Computes the initial simplex assigning to its faces all the points\n    // that are candidates to form part of the hull\n\n    computeInitialHull: (function() {\n      var line3, plane, closestPoint;\n\n      return function computeInitialHull() {\n        if (line3 === undefined) {\n          line3 = new THREE.Line3();\n          plane = new THREE.Plane();\n          closestPoint = new THREE.Vector3();\n        }\n\n        var vertex,\n          vertices = this.vertices;\n        var extremes = this.computeExtremes();\n        var min = extremes.min;\n        var max = extremes.max;\n\n        var v0, v1, v2, v3;\n        var i, l, j;\n\n        // 1. Find the two vertices 'v0' and 'v1' with the greatest 1d separation\n        // (max.x - min.x)\n        // (max.y - min.y)\n        // (max.z - min.z)\n\n        var distance,\n          maxDistance = 0;\n        var index = 0;\n\n        for (i = 0; i < 3; i++) {\n          distance =\n            max[i].point.getComponent(i) - min[i].point.getComponent(i);\n\n          if (distance > maxDistance) {\n            maxDistance = distance;\n            index = i;\n          }\n        }\n\n        v0 = min[index];\n        v1 = max[index];\n\n        // 2. The next vertex 'v2' is the one farthest to the line formed by 'v0' and 'v1'\n\n        maxDistance = 0;\n        line3.set(v0.point, v1.point);\n\n        for (i = 0, l = this.vertices.length; i < l; i++) {\n          vertex = vertices[i];\n\n          if (vertex !== v0 && vertex !== v1) {\n            line3.closestPointToPoint(vertex.point, true, closestPoint);\n\n            distance = closestPoint.distanceToSquared(vertex.point);\n\n            if (distance > maxDistance) {\n              maxDistance = distance;\n              v2 = vertex;\n            }\n          }\n        }\n\n        // 3. The next vertex 'v3' is the one farthest to the plane 'v0', 'v1', 'v2'\n\n        maxDistance = 0;\n        plane.setFromCoplanarPoints(v0.point, v1.point, v2.point);\n\n        for (i = 0, l = this.vertices.length; i < l; i++) {\n          vertex = vertices[i];\n\n          if (vertex !== v0 && vertex !== v1 && vertex !== v2) {\n            distance = Math.abs(plane.distanceToPoint(vertex.point));\n\n            if (distance > maxDistance) {\n              maxDistance = distance;\n              v3 = vertex;\n            }\n          }\n        }\n\n        var faces = [];\n\n        if (plane.distanceToPoint(v3.point) < 0) {\n          // the face is not able to see the point so 'plane.normal' is pointing outside the tetrahedron\n\n          faces.push(\n            Face.create(v0, v1, v2),\n            Face.create(v3, v1, v0),\n            Face.create(v3, v2, v1),\n            Face.create(v3, v0, v2)\n          );\n\n          // set the twin edge\n\n          for (i = 0; i < 3; i++) {\n            j = (i + 1) % 3;\n\n            // join face[ i ] i > 0, with the first face\n\n            faces[i + 1].getEdge(2).setTwin(faces[0].getEdge(j));\n\n            // join face[ i ] with face[ i + 1 ], 1 <= i <= 3\n\n            faces[i + 1].getEdge(1).setTwin(faces[j + 1].getEdge(0));\n          }\n        } else {\n          // the face is able to see the point so 'plane.normal' is pointing inside the tetrahedron\n\n          faces.push(\n            Face.create(v0, v2, v1),\n            Face.create(v3, v0, v1),\n            Face.create(v3, v1, v2),\n            Face.create(v3, v2, v0)\n          );\n\n          // set the twin edge\n\n          for (i = 0; i < 3; i++) {\n            j = (i + 1) % 3;\n\n            // join face[ i ] i > 0, with the first face\n\n            faces[i + 1].getEdge(2).setTwin(faces[0].getEdge((3 - i) % 3));\n\n            // join face[ i ] with face[ i + 1 ]\n\n            faces[i + 1].getEdge(0).setTwin(faces[j + 1].getEdge(1));\n          }\n        }\n\n        // the initial hull is the tetrahedron\n\n        for (i = 0; i < 4; i++) {\n          this.faces.push(faces[i]);\n        }\n\n        // initial assignment of vertices to the faces of the tetrahedron\n\n        for (i = 0, l = vertices.length; i < l; i++) {\n          vertex = vertices[i];\n\n          if (\n            vertex !== v0 &&\n            vertex !== v1 &&\n            vertex !== v2 &&\n            vertex !== v3\n          ) {\n            maxDistance = this.tolerance;\n            var maxFace = null;\n\n            for (j = 0; j < 4; j++) {\n              distance = this.faces[j].distanceToPoint(vertex.point);\n\n              if (distance > maxDistance) {\n                maxDistance = distance;\n                maxFace = this.faces[j];\n              }\n            }\n\n            if (maxFace !== null) {\n              this.addVertexToFace(vertex, maxFace);\n            }\n          }\n        }\n\n        return this;\n      };\n    })(),\n\n    // Removes inactive faces\n\n    reindexFaces: function() {\n      var activeFaces = [];\n\n      for (var i = 0; i < this.faces.length; i++) {\n        var face = this.faces[i];\n\n        if (face.mark === Visible) {\n          activeFaces.push(face);\n        }\n      }\n\n      this.faces = activeFaces;\n\n      return this;\n    },\n\n    // Finds the next vertex to create faces with the current hull\n\n    nextVertexToAdd: function() {\n      // if the 'assigned' list of vertices is empty, no vertices are left. return with 'undefined'\n\n      if (this.assigned.isEmpty() === false) {\n        var eyeVertex,\n          maxDistance = 0;\n\n        // grap the first available face and start with the first visible vertex of that face\n\n        var eyeFace = this.assigned.first().face;\n        var vertex = eyeFace.outside;\n\n        // now calculate the farthest vertex that face can see\n\n        do {\n          var distance = eyeFace.distanceToPoint(vertex.point);\n\n          if (distance > maxDistance) {\n            maxDistance = distance;\n            eyeVertex = vertex;\n          }\n\n          vertex = vertex.next;\n        } while (vertex !== null && vertex.face === eyeFace);\n\n        return eyeVertex;\n      }\n    },\n\n    // Computes a chain of half edges in CCW order called the 'horizon'.\n    // For an edge to be part of the horizon it must join a face that can see\n    // 'eyePoint' and a face that cannot see 'eyePoint'.\n\n    computeHorizon: function(eyePoint, crossEdge, face, horizon) {\n      // moves face's vertices to the 'unassigned' vertex list\n\n      this.deleteFaceVertices(face);\n\n      face.mark = Deleted;\n\n      var edge;\n\n      if (crossEdge === null) {\n        edge = crossEdge = face.getEdge(0);\n      } else {\n        // start from the next edge since 'crossEdge' was already analyzed\n        // (actually 'crossEdge.twin' was the edge who called this method recursively)\n\n        edge = crossEdge.next;\n      }\n\n      do {\n        var twinEdge = edge.twin;\n        var oppositeFace = twinEdge.face;\n\n        if (oppositeFace.mark === Visible) {\n          if (oppositeFace.distanceToPoint(eyePoint) > this.tolerance) {\n            // the opposite face can see the vertex, so proceed with next edge\n\n            this.computeHorizon(eyePoint, twinEdge, oppositeFace, horizon);\n          } else {\n            // the opposite face can't see the vertex, so this edge is part of the horizon\n\n            horizon.push(edge);\n          }\n        }\n\n        edge = edge.next;\n      } while (edge !== crossEdge);\n\n      return this;\n    },\n\n    // Creates a face with the vertices 'eyeVertex.point', 'horizonEdge.tail' and 'horizonEdge.head' in CCW order\n\n    addAdjoiningFace: function(eyeVertex, horizonEdge) {\n      // all the half edges are created in ccw order thus the face is always pointing outside the hull\n\n      var face = Face.create(eyeVertex, horizonEdge.tail(), horizonEdge.head());\n\n      this.faces.push(face);\n\n      // join face.getEdge( - 1 ) with the horizon's opposite edge face.getEdge( - 1 ) = face.getEdge( 2 )\n\n      face.getEdge(-1).setTwin(horizonEdge.twin);\n\n      return face.getEdge(0); // the half edge whose vertex is the eyeVertex\n    },\n\n    //  Adds 'horizon.length' faces to the hull, each face will be linked with the\n    //  horizon opposite face and the face on the left/right\n\n    addNewFaces: function(eyeVertex, horizon) {\n      this.newFaces = [];\n\n      var firstSideEdge = null;\n      var previousSideEdge = null;\n\n      for (var i = 0; i < horizon.length; i++) {\n        var horizonEdge = horizon[i];\n\n        // returns the right side edge\n\n        var sideEdge = this.addAdjoiningFace(eyeVertex, horizonEdge);\n\n        if (firstSideEdge === null) {\n          firstSideEdge = sideEdge;\n        } else {\n          // joins face.getEdge( 1 ) with previousFace.getEdge( 0 )\n\n          sideEdge.next.setTwin(previousSideEdge);\n        }\n\n        this.newFaces.push(sideEdge.face);\n        previousSideEdge = sideEdge;\n      }\n\n      // perform final join of new faces\n\n      firstSideEdge.next.setTwin(previousSideEdge);\n\n      return this;\n    },\n\n    // Adds a vertex to the hull\n\n    addVertexToHull: function(eyeVertex) {\n      var horizon = [];\n      var i, face;\n\n      this.unassigned.clear();\n\n      // remove 'eyeVertex' from 'eyeVertex.face' so that it can't be added to the 'unassigned' vertex list\n\n      this.removeVertexFromFace(eyeVertex, eyeVertex.face);\n\n      this.computeHorizon(eyeVertex.point, null, eyeVertex.face, horizon);\n\n      this.addNewFaces(eyeVertex, horizon);\n\n      // reassign 'unassigned' vertices to the new faces\n\n      this.resolveUnassignedPoints(this.newFaces);\n\n      return this;\n    },\n\n    cleanup: function() {\n      this.assigned.clear();\n      this.unassigned.clear();\n      this.newFaces = [];\n\n      return this;\n    },\n\n    compute: function() {\n      var vertex;\n\n      this.computeInitialHull();\n\n      // add all available vertices gradually to the hull\n\n      while ((vertex = this.nextVertexToAdd()) !== undefined) {\n        this.addVertexToHull(vertex);\n      }\n\n      this.reindexFaces();\n\n      this.cleanup();\n\n      return this;\n    }\n  });\n\n  //\n\n  function Face() {\n    this.normal = new THREE.Vector3();\n    this.midpoint = new THREE.Vector3();\n    this.area = 0;\n\n    this.constant = 0; // signed distance from face to the origin\n    this.outside = null; // reference to a vertex in a vertex list this face can see\n    this.mark = Visible;\n    this.edge = null;\n  }\n\n  Object.assign(Face, {\n    create: function(a, b, c) {\n      var face = new Face();\n\n      var e0 = new HalfEdge(a, face);\n      var e1 = new HalfEdge(b, face);\n      var e2 = new HalfEdge(c, face);\n\n      // join edges\n\n      e0.next = e2.prev = e1;\n      e1.next = e0.prev = e2;\n      e2.next = e1.prev = e0;\n\n      // main half edge reference\n\n      face.edge = e0;\n\n      return face.compute();\n    }\n  });\n\n  Object.assign(Face.prototype, {\n    getEdge: function(i) {\n      var edge = this.edge;\n\n      while (i > 0) {\n        edge = edge.next;\n        i--;\n      }\n\n      while (i < 0) {\n        edge = edge.prev;\n        i++;\n      }\n\n      return edge;\n    },\n\n    compute: (function() {\n      var triangle;\n\n      return function compute() {\n        if (triangle === undefined) triangle = new THREE.Triangle();\n\n        var a = this.edge.tail();\n        var b = this.edge.head();\n        var c = this.edge.next.head();\n\n        triangle.set(a.point, b.point, c.point);\n\n        triangle.normal(this.normal);\n        triangle.midpoint(this.midpoint);\n        this.area = triangle.area();\n\n        this.constant = this.normal.dot(this.midpoint);\n\n        return this;\n      };\n    })(),\n\n    distanceToPoint: function(point) {\n      return this.normal.dot(point) - this.constant;\n    }\n  });\n\n  // Entity for a Doubly-Connected Edge List (DCEL).\n\n  function HalfEdge(vertex, face) {\n    this.vertex = vertex;\n    this.prev = null;\n    this.next = null;\n    this.twin = null;\n    this.face = face;\n  }\n\n  Object.assign(HalfEdge.prototype, {\n    head: function() {\n      return this.vertex;\n    },\n\n    tail: function() {\n      return this.prev ? this.prev.vertex : null;\n    },\n\n    length: function() {\n      var head = this.head();\n      var tail = this.tail();\n\n      if (tail !== null) {\n        return tail.point.distanceTo(head.point);\n      }\n\n      return -1;\n    },\n\n    lengthSquared: function() {\n      var head = this.head();\n      var tail = this.tail();\n\n      if (tail !== null) {\n        return tail.point.distanceToSquared(head.point);\n      }\n\n      return -1;\n    },\n\n    setTwin: function(edge) {\n      this.twin = edge;\n      edge.twin = this;\n\n      return this;\n    }\n  });\n\n  // A vertex as a double linked list node.\n\n  function VertexNode(point) {\n    this.point = point;\n    this.prev = null;\n    this.next = null;\n    this.face = null; // the face that is able to see this vertex\n  }\n\n  // A double linked list that contains vertex nodes.\n\n  function VertexList() {\n    this.head = null;\n    this.tail = null;\n  }\n\n  Object.assign(VertexList.prototype, {\n    first: function() {\n      return this.head;\n    },\n\n    last: function() {\n      return this.tail;\n    },\n\n    clear: function() {\n      this.head = this.tail = null;\n\n      return this;\n    },\n\n    // Inserts a vertex before the target vertex\n\n    insertBefore: function(target, vertex) {\n      vertex.prev = target.prev;\n      vertex.next = target;\n\n      if (vertex.prev === null) {\n        this.head = vertex;\n      } else {\n        vertex.prev.next = vertex;\n      }\n\n      target.prev = vertex;\n\n      return this;\n    },\n\n    // Inserts a vertex after the target vertex\n\n    insertAfter: function(target, vertex) {\n      vertex.prev = target;\n      vertex.next = target.next;\n\n      if (vertex.next === null) {\n        this.tail = vertex;\n      } else {\n        vertex.next.prev = vertex;\n      }\n\n      target.next = vertex;\n\n      return this;\n    },\n\n    // Appends a vertex to the end of the linked list\n\n    append: function(vertex) {\n      if (this.head === null) {\n        this.head = vertex;\n      } else {\n        this.tail.next = vertex;\n      }\n\n      vertex.prev = this.tail;\n      vertex.next = null; // the tail has no subsequent vertex\n\n      this.tail = vertex;\n\n      return this;\n    },\n\n    // Appends a chain of vertices where 'vertex' is the head.\n\n    appendChain: function(vertex) {\n      if (this.head === null) {\n        this.head = vertex;\n      } else {\n        this.tail.next = vertex;\n      }\n\n      vertex.prev = this.tail;\n\n      // ensure that the 'tail' reference points to the last vertex of the chain\n\n      while (vertex.next !== null) {\n        vertex = vertex.next;\n      }\n\n      this.tail = vertex;\n\n      return this;\n    },\n\n    // Removes a vertex from the linked list\n\n    remove: function(vertex) {\n      if (vertex.prev === null) {\n        this.head = vertex.next;\n      } else {\n        vertex.prev.next = vertex.next;\n      }\n\n      if (vertex.next === null) {\n        this.tail = vertex.prev;\n      } else {\n        vertex.next.prev = vertex.prev;\n      }\n\n      return this;\n    },\n\n    // Removes a list of vertices whose 'head' is 'a' and whose 'tail' is b\n\n    removeSubList: function(a, b) {\n      if (a.prev === null) {\n        this.head = b.next;\n      } else {\n        a.prev.next = b.next;\n      }\n\n      if (b.next === null) {\n        this.tail = a.prev;\n      } else {\n        b.next.prev = a.prev;\n      }\n\n      return this;\n    },\n\n    isEmpty: function() {\n      return this.head === null;\n    }\n  });\n\n  // export\n\n  THREE.QuickHull = QuickHull;\n})();\n","/**\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n(function() {\n  // ConvexGeometry\n\n  function ConvexGeometry(points) {\n    THREE.Geometry.call(this);\n\n    this.type = \"ConvexGeometry\";\n\n    this.fromBufferGeometry(new ConvexBufferGeometry(points));\n    this.mergeVertices();\n  }\n\n  ConvexGeometry.prototype = Object.create(THREE.Geometry.prototype);\n  ConvexGeometry.prototype.constructor = ConvexGeometry;\n\n  // ConvexBufferGeometry\n\n  function ConvexBufferGeometry(points) {\n    THREE.BufferGeometry.call(this);\n\n    this.type = \"ConvexBufferGeometry\";\n\n    // buffers\n\n    var vertices = [];\n    var normals = [];\n\n    // execute QuickHull\n\n    if (THREE.QuickHull === undefined) {\n      console.error(\n        \"THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on THREE.QuickHull\"\n      );\n    }\n\n    var quickHull = new THREE.QuickHull().setFromPoints(points);\n\n    // generate vertices and normals\n\n    var faces = quickHull.faces;\n\n    for (var i = 0; i < faces.length; i++) {\n      var face = faces[i];\n      var edge = face.edge;\n\n      // we move along a doubly-connected edge list to access all face points (see HalfEdge docs)\n\n      do {\n        var point = edge.head().point;\n\n        vertices.push(point.x, point.y, point.z);\n        normals.push(face.normal.x, face.normal.y, face.normal.z);\n\n        edge = edge.next;\n      } while (edge !== face.edge);\n    }\n\n    // build geometry\n\n    this.addAttribute(\n      \"position\",\n      new THREE.Float32BufferAttribute(vertices, 3)\n    );\n    this.addAttribute(\"normal\", new THREE.Float32BufferAttribute(normals, 3));\n  }\n\n  ConvexBufferGeometry.prototype = Object.create(\n    THREE.BufferGeometry.prototype\n  );\n  ConvexBufferGeometry.prototype.constructor = ConvexBufferGeometry;\n\n  // export\n\n  THREE.ConvexGeometry = ConvexGeometry;\n  THREE.ConvexBufferGeometry = ConvexBufferGeometry;\n})();\n","/**\n * Based on http://www.emagix.net/academic/mscs-project/item/camera-sync-with-css3-and-webgl-threejs\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar THREE = require(\"three\");\n\nTHREE.CSS3DObject = function(element) {\n  THREE.Object3D.call(this);\n\n  this.element = element;\n  this.element.style.position = \"absolute\";\n\n  this.addEventListener(\"removed\", function() {\n    if (this.element.parentNode !== null) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  });\n};\n\nTHREE.CSS3DObject.prototype = Object.create(THREE.Object3D.prototype);\nTHREE.CSS3DObject.prototype.constructor = THREE.CSS3DObject;\n\nTHREE.CSS3DSprite = function(element) {\n  THREE.CSS3DObject.call(this, element);\n};\n\nTHREE.CSS3DSprite.prototype = Object.create(THREE.CSS3DObject.prototype);\nTHREE.CSS3DSprite.prototype.constructor = THREE.CSS3DSprite;\n\n//\n\nTHREE.CSS3DRenderer = function() {\n  console.log(\"THREE.CSS3DRenderer\", THREE.REVISION);\n\n  var _width, _height;\n\n  var matrix = new THREE.Matrix4();\n\n  var cache = {\n    camera: { fov: 0, style: \"\" },\n    objects: {}\n  };\n\n  var domElement = document.createElement(\"div\");\n  domElement.style.overflow = \"hidden\";\n\n  domElement.style.WebkitTransformStyle = \"preserve-3d\";\n  domElement.style.MozTransformStyle = \"preserve-3d\";\n  domElement.style.oTransformStyle = \"preserve-3d\";\n  domElement.style.transformStyle = \"preserve-3d\";\n\n  this.domElement = domElement;\n\n  var cameraElement = document.createElement(\"div\");\n\n  cameraElement.style.position = \"absolute\";\n  cameraElement.style.left = \"50%\";\n  cameraElement.style.top = \"50%\";\n\n  cameraElement.style.WebkitTransformStyle = \"preserve-3d\";\n  cameraElement.style.MozTransformStyle = \"preserve-3d\";\n  cameraElement.style.oTransformStyle = \"preserve-3d\";\n  cameraElement.style.transformStyle = \"preserve-3d\";\n\n  domElement.appendChild(cameraElement);\n\n  this.setClearColor = function() {};\n\n  // Added by Argo-lite, for optimization\n  this.isPaused = false;\n\n  this.getSize = function() {\n    return {\n      width: _width,\n      height: _height\n    };\n  };\n\n  this.setSize = function(width, height) {\n    _width = width;\n    _height = height;\n\n    domElement.style.width = width + \"px\";\n    domElement.style.height = height + \"px\";\n  };\n\n  function epsilon(value) {\n    return Math.abs(value) < Number.EPSILON ? 0 : value;\n  }\n\n  function getCameraCSSMatrix(matrix) {\n    var elements = matrix.elements;\n\n    return (\n      \"matrix3d(\" +\n      epsilon(elements[0]) +\n      \",\" +\n      epsilon(-elements[1]) +\n      \",\" +\n      epsilon(elements[2]) +\n      \",\" +\n      epsilon(elements[3]) +\n      \",\" +\n      epsilon(elements[4]) +\n      \",\" +\n      epsilon(-elements[5]) +\n      \",\" +\n      epsilon(elements[6]) +\n      \",\" +\n      epsilon(elements[7]) +\n      \",\" +\n      epsilon(elements[8]) +\n      \",\" +\n      epsilon(-elements[9]) +\n      \",\" +\n      epsilon(elements[10]) +\n      \",\" +\n      epsilon(elements[11]) +\n      \",\" +\n      epsilon(elements[12]) +\n      \",\" +\n      epsilon(-elements[13]) +\n      \",\" +\n      epsilon(elements[14]) +\n      \",\" +\n      epsilon(elements[15]) +\n      \")\"\n    );\n  }\n\n  function getObjectCSSMatrix(matrix) {\n    var elements = matrix.elements;\n\n    return (\n      \"translate3d(-50%,-50%,0) matrix3d(\" +\n      epsilon(elements[0]) +\n      \",\" +\n      epsilon(elements[1]) +\n      \",\" +\n      epsilon(elements[2]) +\n      \",\" +\n      epsilon(elements[3]) +\n      \",\" +\n      epsilon(-elements[4]) +\n      \",\" +\n      epsilon(-elements[5]) +\n      \",\" +\n      epsilon(-elements[6]) +\n      \",\" +\n      epsilon(-elements[7]) +\n      \",\" +\n      epsilon(elements[8]) +\n      \",\" +\n      epsilon(elements[9]) +\n      \",\" +\n      epsilon(elements[10]) +\n      \",\" +\n      epsilon(elements[11]) +\n      \",\" +\n      epsilon(elements[12]) +\n      \",\" +\n      epsilon(elements[13]) +\n      \",\" +\n      epsilon(elements[14]) +\n      \",\" +\n      epsilon(elements[15]) +\n      \")\"\n    );\n  }\n\n  function renderObject(object, camera) {\n    if (object instanceof THREE.CSS3DObject) {\n      var style;\n\n      if (object instanceof THREE.CSS3DSprite) {\n        // http://swiftcoder.wordpress.com/2008/11/25/constructing-a-billboard-matrix/\n\n        matrix.copy(camera.matrixWorldInverse);\n        matrix.transpose();\n        matrix.copyPosition(object.matrixWorld);\n        matrix.scale(object.scale);\n\n        matrix.elements[3] = 0;\n        matrix.elements[7] = 0;\n        matrix.elements[11] = 0;\n        matrix.elements[15] = 1;\n\n        style = getObjectCSSMatrix(matrix);\n      } else {\n        style = getObjectCSSMatrix(object.matrixWorld);\n      }\n\n      var element = object.element;\n      var cachedStyle = cache.objects[object.id];\n\n      if (cachedStyle === undefined || cachedStyle !== style) {\n        element.style.WebkitTransform = style;\n        element.style.MozTransform = style;\n        element.style.oTransform = style;\n        element.style.transform = style;\n\n        cache.objects[object.id] = style;\n      }\n\n      if (element.parentNode !== cameraElement) {\n        cameraElement.appendChild(element);\n      }\n    }\n\n    for (var i = 0, l = object.children.length; i < l; i++) {\n      renderObject(object.children[i], camera);\n    }\n  }\n\n  this.render = function(scene, camera) {\n    if (this.isPaused) {\n      return;\n    }\n    var fov =\n      (0.5 / Math.tan(THREE.Math.degToRad(camera.getEffectiveFOV() * 0.5))) *\n      _height;\n\n    if (cache.camera.fov !== fov) {\n      domElement.style.WebkitPerspective = fov + \"px\";\n      domElement.style.MozPerspective = fov + \"px\";\n      domElement.style.oPerspective = fov + \"px\";\n      domElement.style.perspective = fov + \"px\";\n\n      cache.camera.fov = fov;\n    }\n\n    scene.updateMatrixWorld();\n\n    if (camera.parent === null) camera.updateMatrixWorld();\n\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n\n    var style =\n      \"translateZ(\" +\n      fov +\n      \"px)\" +\n      getCameraCSSMatrix(camera.matrixWorldInverse);\n\n    if (cache.camera.style !== style) {\n      cameraElement.style.WebkitTransform = style;\n      cameraElement.style.MozTransform = style;\n      cameraElement.style.oTransform = style;\n      cameraElement.style.transform = style;\n\n      cache.camera.style = style;\n    }\n\n    renderObject(scene, camera);\n  };\n};\n","module.exports = function(THREE) {\n  /**\n   * @author qiao / https://github.com/qiao\n   * @author mrdoob / http://mrdoob.com\n   * @author alteredq / http://alteredqualia.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author erich666 / http://erichaines.com\n   */\n\n  // This set of controls performs orbiting, dollying (zooming), and panning.\n  // Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n  //\n  //    Orbit - left mouse / touch: one finger move\n  //    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n  //    Pan - right mouse, or arrow keys / touch: three finter swipe\n\n  function OrbitControls(object, domElement) {\n    this.object = object;\n\n    this.domElement = domElement !== undefined ? domElement : document;\n\n    // Set to false to disable this control\n    this.enabled = true;\n\n    // \"target\" sets the location of focus, where the object orbits around\n    this.target = new THREE.Vector3();\n\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0;\n    this.maxDistance = Infinity;\n\n    // How far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0;\n    this.maxZoom = Infinity;\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0; // radians\n    this.maxPolarAngle = Math.PI; // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n    this.minAzimuthAngle = -Infinity; // radians\n    this.maxAzimuthAngle = Infinity; // radians\n\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false;\n    this.dampingFactor = 0.25;\n\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true;\n    this.zoomSpeed = 1.0;\n\n    // Set to false to disable rotating\n    this.enableRotate = true;\n    this.rotateSpeed = 1.0;\n\n    // Set to false to disable panning\n    this.enablePan = true;\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false;\n    this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n    // Set to false to disable use of the keys\n    this.enableKeys = true;\n\n    // The four arrow keys\n    this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40, SPACE: 32 };\n\n    // Mouse buttons\n    this.mouseButtons = {\n      ORBIT: THREE.MOUSE.LEFT,\n      ZOOM: THREE.MOUSE.MIDDLE,\n      PAN: THREE.MOUSE.RIGHT\n    };\n\n    // for reset\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n\n    // for space panning\n    this.spacePan = false;\n    this.bothPan = false;\n\n    //\n    // public methods\n    //\n\n    this.getPolarAngle = function() {\n      return spherical.phi;\n    };\n\n    this.getAzimuthalAngle = function() {\n      return spherical.theta;\n    };\n\n    this.reset = function() {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(changeEvent);\n\n      scope.update();\n\n      state = STATE.NONE;\n    };\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = (function() {\n      var offset = new THREE.Vector3();\n\n      // so camera.up is the orbit axis\n      var quat = new THREE.Quaternion().setFromUnitVectors(\n        object.up,\n        new THREE.Vector3(0, 1, 0)\n      );\n      var quatInverse = quat.clone().inverse();\n\n      var lastPosition = new THREE.Vector3();\n      var lastQuaternion = new THREE.Quaternion();\n\n      return function update() {\n        var position = scope.object.position;\n\n        offset.copy(position).sub(scope.target);\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion(quat);\n\n        // angle from z-axis around y-axis\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        spherical.theta += sphericalDelta.theta;\n        spherical.phi += sphericalDelta.phi;\n\n        // restrict theta to be between desired limits\n        spherical.theta = Math.max(\n          scope.minAzimuthAngle,\n          Math.min(scope.maxAzimuthAngle, spherical.theta)\n        );\n\n        // restrict phi to be between desired limits\n        spherical.phi = Math.max(\n          scope.minPolarAngle,\n          Math.min(scope.maxPolarAngle, spherical.phi)\n        );\n\n        spherical.makeSafe();\n\n        spherical.radius *= scale;\n\n        // restrict radius to be between desired limits\n        spherical.radius = Math.max(\n          scope.minDistance,\n          Math.min(scope.maxDistance, spherical.radius)\n        );\n\n        // move target to panned location\n        scope.target.add(panOffset);\n\n        offset.setFromSpherical(spherical);\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion(quatInverse);\n\n        position.copy(scope.target).add(offset);\n\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n        } else {\n          sphericalDelta.set(0, 0, 0);\n        }\n\n        scale = 1;\n        panOffset.set(0, 0, 0);\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (\n          zoomChanged ||\n          lastPosition.distanceToSquared(scope.object.position) > EPS ||\n          8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n        ) {\n          scope.dispatchEvent(changeEvent);\n\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n\n          return true;\n        }\n\n        return false;\n      };\n    })();\n\n    this.dispose = function() {\n      scope.domElement.removeEventListener(\"contextmenu\", onContextMenu, false);\n      scope.domElement.removeEventListener(\"mousedown\", onMouseDown, false);\n      scope.domElement.removeEventListener(\"wheel\", onMouseWheel, false);\n\n      scope.domElement.removeEventListener(\"touchstart\", onTouchStart, false);\n      scope.domElement.removeEventListener(\"touchend\", onTouchEnd, false);\n      scope.domElement.removeEventListener(\"touchmove\", onTouchMove, false);\n\n      document.removeEventListener(\"mousemove\", onMouseMove, false);\n      document.removeEventListener(\"mouseup\", onMouseUp, false);\n\n      window.removeEventListener(\"keydown\", onKeyDown, false);\n\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    };\n\n    //\n    // internals\n    //\n\n    var scope = this;\n\n    var changeEvent = { type: \"change\" };\n    var startEvent = { type: \"start\" };\n    var endEvent = { type: \"end\" };\n\n    var STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_DOLLY: 4,\n      TOUCH_PAN: 5\n    };\n\n    var state = STATE.NONE;\n\n    var EPS = 0.000001;\n\n    // current position in spherical coordinates\n    var spherical = new THREE.Spherical();\n    var sphericalDelta = new THREE.Spherical();\n\n    var scale = 1;\n    var panOffset = new THREE.Vector3();\n    var zoomChanged = false;\n\n    var rotateStart = new THREE.Vector2();\n    var rotateEnd = new THREE.Vector2();\n    var rotateDelta = new THREE.Vector2();\n\n    var panStart = new THREE.Vector2();\n    var panEnd = new THREE.Vector2();\n    var panDelta = new THREE.Vector2();\n\n    var dollyStart = new THREE.Vector2();\n    var dollyEnd = new THREE.Vector2();\n    var dollyDelta = new THREE.Vector2();\n\n    function getAutoRotationAngle() {\n      return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    var panLeft = (function() {\n      var v = new THREE.Vector3();\n\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n        v.multiplyScalar(-distance);\n\n        panOffset.add(v);\n      };\n    })();\n\n    var panUp = (function() {\n      var v = new THREE.Vector3();\n\n      return function panUp(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 1); // get Y column of objectMatrix\n        v.multiplyScalar(distance);\n\n        panOffset.add(v);\n      };\n    })();\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    var pan = (function() {\n      var offset = new THREE.Vector3();\n\n      return function pan(deltaX, deltaY) {\n        var element =\n          scope.domElement === document\n            ? scope.domElement.body\n            : scope.domElement;\n\n        if (scope.object instanceof THREE.PerspectiveCamera) {\n          // perspective\n          var position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          var targetDistance = offset.length();\n\n          // half of the fov is center to top of screen\n          targetDistance *= Math.tan(\n            ((scope.object.fov / 2) * Math.PI) / 180.0\n          );\n\n          // we actually don't use screenWidth, since perspective camera is fixed to screen height\n          panLeft(\n            (2 * deltaX * targetDistance) / element.clientHeight,\n            scope.object.matrix\n          );\n          panUp(\n            (2 * deltaY * targetDistance) / element.clientHeight,\n            scope.object.matrix\n          );\n        } else if (scope.object instanceof THREE.OrthographicCamera) {\n          // orthographic\n          panLeft(\n            (deltaX * (scope.object.right - scope.object.left)) /\n              scope.object.zoom /\n              element.clientWidth,\n            scope.object.matrix\n          );\n          panUp(\n            (deltaY * (scope.object.top - scope.object.bottom)) /\n              scope.object.zoom /\n              element.clientHeight,\n            scope.object.matrix\n          );\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn(\n            \"WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.\"\n          );\n          scope.enablePan = false;\n        }\n      };\n    })();\n\n    // Expose panning for external usage\n    this.pan = pan;\n\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof THREE.PerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom * dollyScale)\n        );\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        );\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof THREE.PerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\n        scope.object.zoom = Math.max(\n          scope.minZoom,\n          Math.min(scope.maxZoom, scope.object.zoom / dollyScale)\n        );\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn(\n          \"WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.\"\n        );\n        scope.enableZoom = false;\n      }\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event) {\n      //console.log( 'handleMouseDownRotate' );\n\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      //console.log( 'handleMouseDownDolly' );\n\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      //console.log( 'handleMouseDownPan' );\n\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      //console.log( 'handleMouseMoveRotate' );\n\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart);\n\n      var element =\n        scope.domElement === document\n          ? scope.domElement.body\n          : scope.domElement;\n\n      // rotating across whole screen goes 360 degrees around\n      rotateLeft(\n        ((2 * Math.PI * rotateDelta.x) / element.clientWidth) *\n          scope.rotateSpeed\n      );\n\n      // rotating up and down along whole screen attempts to go 360, but limited to 180\n      rotateUp(\n        ((2 * Math.PI * rotateDelta.y) / element.clientHeight) *\n          scope.rotateSpeed\n      );\n\n      rotateStart.copy(rotateEnd);\n\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      //console.log( 'handleMouseMoveDolly' );\n\n      dollyEnd.set(event.clientX, event.clientY);\n\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyIn(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyOut(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      //console.log( 'handleMouseMovePan' );\n\n      panEnd.set(event.clientX, event.clientY);\n\n      panDelta.subVectors(panEnd, panStart);\n\n      pan(panDelta.x, panDelta.y);\n\n      panStart.copy(panEnd);\n\n      scope.update();\n    }\n\n    function handleMouseUp(event) {\n      //console.log( 'handleMouseUp' );\n    }\n\n    function handleMouseWheel(event) {\n      //console.log( 'handleMouseWheel' );\n\n      if (event.deltaY < 0) {\n        dollyOut(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyIn(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyUp(event) {\n      switch (event.keyCode) {\n        case scope.keys.SPACE:\n          if (scope.spacePan == true) {\n            scope.spacePanStart = false;\n            state = STATE.NONE;\n          }\n          break;\n      }\n    }\n\n    function handleKeyDown(event) {\n      //console.log( 'handleKeyDown' );\n\n      switch (event.keyCode) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          scope.update();\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          scope.update();\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          scope.update();\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          scope.update();\n          break;\n\n        case scope.keys.SPACE:\n          if (scope.spacePan == true) {\n            scope.spacePanStart = true;\n            state = STATE.PAN;\n          }\n          break;\n      }\n    }\n\n    function handleTouchStartRotate(event) {\n      //console.log( 'handleTouchStartRotate' );\n\n      rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    }\n\n    function handleTouchStartDolly(event) {\n      //console.log( 'handleTouchStartDolly' );\n\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n      var distance = Math.sqrt(dx * dx + dy * dy);\n\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartPan(event) {\n      //console.log( 'handleTouchStartPan' );\n\n      panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n    }\n\n    function handleTouchMoveRotate(event) {\n      //console.log( 'handleTouchMoveRotate' );\n\n      rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      rotateDelta.subVectors(rotateEnd, rotateStart);\n\n      var element =\n        scope.domElement === document\n          ? scope.domElement.body\n          : scope.domElement;\n\n      // rotating across whole screen goes 360 degrees around\n      rotateLeft(\n        ((2 * Math.PI * rotateDelta.x) / element.clientWidth) *\n          scope.rotateSpeed\n      );\n\n      // rotating up and down along whole screen attempts to go 360, but limited to 180\n      rotateUp(\n        ((2 * Math.PI * rotateDelta.y) / element.clientHeight) *\n          scope.rotateSpeed\n      );\n\n      rotateStart.copy(rotateEnd);\n\n      scope.update();\n    }\n\n    function handleTouchMoveDolly(event) {\n      //console.log( 'handleTouchMoveDolly' );\n\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n      var distance = Math.sqrt(dx * dx + dy * dy);\n\n      dollyEnd.set(0, distance);\n\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n\n      scope.update();\n    }\n\n    function handleTouchMovePan(event) {\n      //console.log( 'handleTouchMovePan' );\n\n      panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\n      panDelta.subVectors(panEnd, panStart);\n\n      pan(panDelta.x, panDelta.y);\n\n      panStart.copy(panEnd);\n\n      scope.update();\n    }\n\n    function handleTouchEnd(event) {\n      //console.log( 'handleTouchEnd' );\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onMouseDown(event) {\n      if (scope.enabled === false) return;\n\n      event.preventDefault();\n\n      if (event.button === scope.mouseButtons.ORBIT) {\n        if (scope.enableRotate === false) return;\n\n        handleMouseDownRotate(event);\n\n        state = STATE.ROTATE;\n      } else if (event.button === scope.mouseButtons.ZOOM) {\n        if (scope.enableZoom === false) return;\n\n        handleMouseDownDolly(event);\n\n        state = STATE.DOLLY;\n      } else if (event.button === scope.mouseButtons.PAN) {\n        if (scope.enablePan === false) return;\n\n        if (!scope.spacePan || scope.bothPan) {\n          handleMouseDownPan(event);\n\n          state = STATE.PAN;\n        }\n      }\n\n      if (state !== STATE.NONE) {\n        document.addEventListener(\"mousemove\", onMouseMove, false);\n        document.addEventListener(\"mouseup\", onMouseUp, false);\n\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n\n      event.preventDefault();\n\n      if (state === STATE.ROTATE) {\n        if (scope.enableRotate === false) return;\n\n        handleMouseMoveRotate(event);\n      } else if (state === STATE.DOLLY) {\n        if (scope.enableZoom === false) return;\n\n        handleMouseMoveDolly(event);\n      } else if (state === STATE.PAN) {\n        if (scope.enablePan === false) return;\n\n        if (scope.spacePan == true) {\n          if (scope.spacePanStart == true) {\n            handleMouseDownPan(event);\n            scope.spacePanStart = false;\n          }\n        }\n\n        handleMouseMovePan(event);\n      }\n    }\n\n    function onMouseUp(event) {\n      if (scope.enabled === false) return;\n\n      handleMouseUp(event);\n\n      //document.removeEventListener( 'mousemove', onMouseMove, false );\n      document.removeEventListener(\"mouseup\", onMouseUp, false);\n\n      scope.dispatchEvent(endEvent);\n\n      state = STATE.NONE;\n    }\n\n    function onMouseWheel(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableZoom === false ||\n        (state !== STATE.NONE && state !== STATE.ROTATE)\n      )\n        return;\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      handleMouseWheel(event);\n\n      scope.dispatchEvent(startEvent); // not sure why these are here...\n      scope.dispatchEvent(endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableKeys === false ||\n        scope.enablePan === false\n      )\n        return;\n\n      document.addEventListener(\"mousemove\", onMouseMove, false);\n\n      handleKeyDown(event);\n    }\n\n    function onKeyUp(event) {\n      if (\n        scope.enabled === false ||\n        scope.enableKeys === false ||\n        scope.enablePan === false\n      )\n        return;\n\n      handleKeyUp(event);\n    }\n\n    function onTouchStart(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.touches.length) {\n        case 1: // one-fingered touch: rotate\n          if (scope.enableRotate === false) return;\n\n          handleTouchStartRotate(event);\n\n          state = STATE.TOUCH_ROTATE;\n\n          break;\n\n        case 2: // two-fingered touch: dolly\n          if (scope.enableZoom === false) return;\n\n          handleTouchStartDolly(event);\n\n          state = STATE.TOUCH_DOLLY;\n\n          break;\n\n        case 3: // three-fingered touch: pan\n          if (scope.enablePan === false) return;\n\n          handleTouchStartPan(event);\n\n          state = STATE.TOUCH_PAN;\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      if (scope.enabled === false) return;\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      switch (event.touches.length) {\n        case 1: // one-fingered touch: rotate\n          if (scope.enableRotate === false) return;\n          if (state !== STATE.TOUCH_ROTATE) return; // is this needed?...\n\n          handleTouchMoveRotate(event);\n\n          break;\n\n        case 2: // two-fingered touch: dolly\n          if (scope.enableZoom === false) return;\n          if (state !== STATE.TOUCH_DOLLY) return; // is this needed?...\n\n          handleTouchMoveDolly(event);\n\n          break;\n\n        case 3: // three-fingered touch: pan\n          if (scope.enablePan === false) return;\n          if (state !== STATE.TOUCH_PAN) return; // is this needed?...\n\n          handleTouchMovePan(event);\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onTouchEnd(event) {\n      if (scope.enabled === false) return;\n\n      handleTouchEnd(event);\n\n      scope.dispatchEvent(endEvent);\n\n      state = STATE.NONE;\n    }\n\n    function onContextMenu(event) {\n      event.preventDefault();\n    }\n\n    //\n\n    scope.domElement.addEventListener(\"contextmenu\", onContextMenu, false);\n\n    scope.domElement.addEventListener(\"mousedown\", onMouseDown, false);\n    scope.domElement.addEventListener(\"wheel\", onMouseWheel, false);\n\n    scope.domElement.addEventListener(\"touchstart\", onTouchStart, false);\n    scope.domElement.addEventListener(\"touchend\", onTouchEnd, false);\n    scope.domElement.addEventListener(\"touchmove\", onTouchMove, false);\n\n    window.addEventListener(\"keydown\", onKeyDown, false);\n    window.addEventListener(\"keyup\", onKeyUp, false);\n\n    // force an update at start\n\n    this.update();\n  }\n\n  OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\n  OrbitControls.prototype.constructor = OrbitControls;\n\n  Object.defineProperties(OrbitControls.prototype, {\n    center: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .center has been renamed to .target\"\n        );\n        return this.target;\n      }\n    },\n\n    // backward compatibility\n\n    noZoom: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"\n        );\n        return !this.enableZoom;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.\"\n        );\n        this.enableZoom = !value;\n      }\n    },\n\n    noRotate: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"\n        );\n        return !this.enableRotate;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.\"\n        );\n        this.enableRotate = !value;\n      }\n    },\n\n    noPan: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"\n        );\n        return !this.enablePan;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.\"\n        );\n        this.enablePan = !value;\n      }\n    },\n\n    noKeys: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"\n        );\n        return !this.enableKeys;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.\"\n        );\n        this.enableKeys = !value;\n      }\n    },\n\n    staticMoving: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"\n        );\n        return !this.enableDamping;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.\"\n        );\n        this.enableDamping = !value;\n      }\n    },\n\n    dynamicDampingFactor: {\n      get: function() {\n        console.warn(\n          \"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"\n        );\n        return this.dampingFactor;\n      },\n\n      set: function(value) {\n        console.warn(\n          \"THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.\"\n        );\n        this.dampingFactor = value;\n      }\n    }\n  });\n\n  return OrbitControls;\n};\n","var def = require(\"../imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   * Calculates coordinates of mouse on canvas adjusted for padding\n   * @param {*} event\n   * @param {*} currentElement\n   */\n  self.relMouseCoords = function(pageX, pageY, currentElement) {\n    var totalOffsetX = 0;\n    var totalOffsetY = 0;\n    var canvasX = 0;\n    var canvasY = 0;\n\n    do {\n      totalOffsetX += currentElement.offsetLeft - currentElement.scrollLeft;\n      totalOffsetY += currentElement.offsetTop - currentElement.scrollTop;\n    } while ((currentElement = currentElement.offsetParent));\n\n    canvasX = pageX - totalOffsetX;\n    canvasY = pageY - totalOffsetY;\n\n    return { x: canvasX, y: canvasY };\n  };\n\n  /**\n   * Add metadata to node\n   * @param {*} node\n   */\n  self.prepNode = function(node) {\n    let nodeToAdd = node;\n    if (!node.data) {\n      node.data = {};\n    }\n    nodeToAdd.renderData = {\n      label: node.data.label || \"No Label\",\n      color: node.data.color || def.NODE_COLOR,\n      hcolor: node.data.hcolor || def.NODE_HIGHLIGHT,\n      shape: node.data.shape || def.NODE_SHAPE,\n      linecolor: new THREE.Color(0.5, 0.5, 0.5),\n      numYeast: Math.ceil(Math.random() * 8),\n      size: node.data.size,\n      tsize: node.data.tsize || def.TEXT_SIZE,\n      x: 0,\n      y: 0,\n      vx: 0,\n      vy: 0\n    };\n    return nodeToAdd;\n  };\n\n  /**\n   * Creates a generic rectangle shape to use for selection and boundaries\n   */\n  self.make1x1Rect = function() {\n    var rectShape = new THREE.Shape();\n    rectShape.moveTo(0, 0);\n    rectShape.lineTo(0, 1);\n    rectShape.lineTo(1, 1);\n    rectShape.lineTo(1, 0);\n    rectShape.lineTo(0, 0);\n    rectShape.lineTo(0, 1);\n    return new THREE.ShapeGeometry(rectShape);\n  };\n\n  /**\n   * Creates a centered 2x2 Rectangle\n   */\n  self.make2x2Rect = function() {\n    var rectShape = new THREE.Shape();\n    rectShape.moveTo(-1, -1);\n    rectShape.lineTo(-1, 1);\n    rectShape.lineTo(1, 1);\n    rectShape.lineTo(1, -1);\n    rectShape.lineTo(-1, -1);\n    return new THREE.ShapeGeometry(rectShape);\n  };\n\n  /**\n   *  find radius of circle given the volume\n   * @param {*} volume\n   */\n  self.volToRadius = function(volume) {\n    return Math.pow((volume / Math.PI) * (3.0 / 4.0), 1.0 / 3.0);\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   * Creates or converts ngraph or d3 graph\n   */\n  self.setupGraph = function() {\n    var createNGraph = require(\"ngraph.graph\");\n    self.graph = createNGraph();\n    if (self.inGraph) {\n      self.updateGraph(self.inGraph);\n    }\n  };\n\n  /**\n   *  Create layout using d3\n   */\n  self.setupLayout = function() {\n    if (self.options.layout == \"ngraph\") {\n      self.setupNgraphLayout();\n    } else if (self.options.layout == \"d3\") {\n      self.setupD3Layout();\n    }\n  };\n\n  /**\n   * Set graph layout to ngraph\n   */\n  self.setupNgraphLayout = function() {\n    self.force = require(\"ngraph.forcelayout\")(self.graph);\n  };\n\n  /**\n   * Set graph layout to D3 Force Directed and set decay parameters\n   */\n  self.setupD3Layout = function() {\n    self.force = d3\n      .forceSimulation()\n      .force(\"charge\", d3.forceManyBody().strength(-1))\n      .force(\"link\", d3.forceLink())\n      .force(\"y\", d3.forceY(0).strength(0.001))\n      .force(\"x\", d3.forceX(0).strength(0.001))\n      .stop();\n\n    // set alpha decay to be lower than the default 0.0228\n    // so force layout does not prematurely stop\n    self.force.alphaDecay(0.005);\n\n    // set velocity decay to be lower than the default 0.4\n    // so nodes move to their final locations\n    self.force.velocityDecay(0.1);\n  };\n\n  self.setDisplayParams = function() {\n    self.element = document.getElementById(\"graph-container\");\n    self.clientRect = self.element.getBoundingClientRect();\n    self.width = self.clientRect.width;\n    self.height = self.clientRect.height;\n    self.aspect = self.width / self.height;\n    self.resolution = new THREE.Vector2(self.width, self.height);\n  };\n\n  self.setRendererParams = function() {\n    self.renderer.setSize(self.width, self.height);\n    self.cssRenderer = new THREE.CSS3DRenderer();\n    self.cssRenderer.setSize(self.width, self.height);\n    self.cssRenderer.domElement.style.position = \"absolute\";\n    self.cssRenderer.domElement.style.top = 0;\n    self.minimapRenderer.domElement.style.position = \"absolute\";\n    self.minimapRenderer.domElement.style.bottom = 0;\n    self.minimapRenderer.domElement.style.left = 0;\n    self.minimapRenderer.setSize(0.2 * self.height, 0.2 * self.height);\n    self.minimapRenderer.zIndex = 1000;\n    self.renderer.setPixelRatio(window.devicePixelRatio);\n  };\n\n  /**\n   *  Create initial camera and parameters\n   */\n  self.setupCamera = function() {\n    self.ccamera = new THREE.PerspectiveCamera(\n      self.fov,\n      self.width / self.height,\n      self.near,\n      self.far\n    );\n    self.ccamera.position.z = 200;\n    var controls = new OrbitControls(self.ccamera, self.element);\n    controls.spacePan = true; // Space bar panning\n    controls.bothPan = true; // Space bar and right click panning\n    controls.minDistance = 10;\n    controls.maxDistance = self.renderWidth * 2;\n    controls.target.set(0, 0, 0);\n    controls.enableRotate = false;\n    self.controls = controls;\n  };\n\n  /**\n   *  Create minimap\n   */\n  self.setupMinimap = function() {\n    self.minimap = {};\n    self.minimap.camera = new THREE.PerspectiveCamera(\n      self.fov,\n      1,\n      self.near,\n      self.far\n    );\n    self.minimap.camera.position.z = self.renderWidth * 2;\n\n    (self.oldCoords = {\n      x: null,\n      y: null,\n      z: null\n    }),\n      /**\n       * Pan the ccamera according to mouse position on screen (should be called only when mouse is on minimap)\n       * @param coordX mouse position on screen returned by relMouseCoords\n       * @param coordY mouse position on screen returned by relMouseCoords\n       */\n      (self.minimap.panToMousePosition = function(coordX, coordY) {\n        // ensures that the camera position is updated from the last pan.\n        if (\n          self.ccamera.position.x == self.oldCoords.x &&\n          self.ccamera.position.y == self.oldCoords.y &&\n          self.ccamera.position.z == self.oldCoords.z\n        ) {\n          return;\n        }\n\n        self.oldCoords.x = self.ccamera.position.x;\n        self.oldCoords.y = self.ccamera.position.y;\n        self.oldCoords.z = self.ccamera.position.z;\n\n        // 850 is an approximation\n        const coefficient = (self.height - 200) / self.ccamera.position.z;\n\n        self.controls.pan(\n          ((coordX / self.minimap.width) * 4000 -\n            2000 -\n            self.ccamera.position.x) *\n            -coefficient,\n          (((self.height - coordY) / self.minimap.height) * 4000 -\n            2000 -\n            self.ccamera.position.y) *\n            coefficient\n        );\n      });\n  };\n\n  /**\n   *  Create initial scene geometry and attributes\n   */\n  self.setupGeometry = function() {\n    self.scene = new THREE.Scene();\n\n    self.points = new THREE.BufferGeometry();\n    self.nodes = new THREE.Group();\n    self.scene.add(self.nodes);\n\n    if (def.LINES == \"fancy\") {\n      self.setupFancyEdges();\n    } else {\n      self.setUpSimpleEdges();\n    }\n\n    var rect = self.make1x1Rect();\n\n    self.setupSelectionBox(rect);\n    self.setupBoundaries(rect);\n    self.setupViewPort(rect);\n  };\n\n  /**\n   * Setup data structures for fancy edges\n   */\n  self.setupFancyEdges = function() {\n    self.edges = [];\n    self.edgeCount = 0;\n  };\n\n  /**\n   * Sets up data structures for simple edges\n   */\n  self.setUpSimpleEdges = function() {\n    self.edges = new THREE.BufferGeometry();\n    var material = new THREE.LineBasicMaterial({\n      linewidth: 2,\n      color: 0xffffff,\n      vertexColors: THREE.VertexColors,\n      shading: THREE.FlatShading\n    });\n    self.line = new THREE.LineSegments(self.edges, material);\n    self.line.frustumCulled = false;\n    self.scene.add(self.line);\n\n    var positions = new THREE.BufferAttribute(\n      new Float32Array(self.MAX_LINES * 3),\n      3\n    );\n    var colors = new THREE.BufferAttribute(\n      new Float32Array(self.MAX_LINES * 3),\n      3\n    );\n\n    self.edges.addAttribute(\"position\", positions);\n    self.edges.addAttribute(\"color\", colors);\n    self.drawCount = 0;\n  };\n\n  /**\n   * Adds box to screen that is displayed when selecting groups of nodes\n   */\n  self.setupSelectionBox = function(rect) {\n    self.selectBox = new THREE.Line(\n      rect,\n      new THREE.LineBasicMaterial({ linewidth: 3, color: 0x3399aa })\n    );\n    self.selectBox.visible = false;\n    self.scene.add(self.selectBox);\n  };\n\n  /**\n   * Sets boundaries for max edges of graph\n   */\n  self.setupBoundaries = function(rect) {\n    self.boundaries = new THREE.Line(\n      rect,\n      new THREE.LineBasicMaterial({ linewidth: 3, color: 0x999999 })\n    ); \n    self.scene.add(self.boundaries);\n    self.setBoundarySize(self.renderWidth * 2);\n  };\n\n  /**\n   * Sets viewport to match size of display\n   */\n  self.setupViewPort = function(rect) {\n    self.viewPort = new THREE.Line(\n      rect,\n      new THREE.LineBasicMaterial({ linewidth: 3, color: self.darkMode? 0xffffff : 0x000000})\n    );\n    self.scene.add(self.viewPort);\n    self.setViewPortSize(self.ccamera);\n  };\n\n  /**\n   *  Creates listeners and events for selecting nodes\n   */\n  self.setupSelect = function() {\n    self.points.addAttribute(\n      \"position\",\n      new THREE.BufferAttribute(new Float32Array(20 * 3), 3)\n    );\n    self.points.computeBoundingSphere();\n    self.nodeCount = 0;\n    var mouseHandler = function(callback) {\n      return function(event) {\n        event.preventDefault();\n        let pageX, pageY;\n        if (event.touches && event.touches.length > 0) {\n          // for touch events\n          pageX = event.touches.item(0).pageX;\n          pageY = event.touches.item(0).pageY;\n        } else {\n          pageX = event.pageX;\n          pageY = event.pageY;\n        }\n        \n        var coords = self.relMouseCoords(pageX, pageY, this);\n        var mouseX = (coords.x / self.width) * 2 - 1;\n        var mouseY = 1 - (coords.y / self.height) * 2;\n        var mousePosition = new THREE.Vector3(mouseX, mouseY, 1);\n        mousePosition.unproject(self.ccamera);\n        var dir = mousePosition.sub(self.ccamera.position).clone();\n        mousePosition.normalize();\n        // Determine whether mouse is on minimap\n        self.isMouseCoordinatesOnMinimap =\n          coords.x <= self.minimap.width &&\n          self.height - coords.y <= self.minimap.height;\n        if (self.isMouseCoordinatesOnMinimap) {\n          self.minimap.mouseX = coords.x;\n          self.minimap.mouseY = coords.y;\n        }\n\n        // Determine intersects\n        var raycaster = new THREE.Raycaster(\n          self.ccamera.position,\n          mousePosition\n        );\n\n        // Find real location of mouse\n        var distance = -self.ccamera.position.z / dir.z;\n        var pos = self.ccamera.position\n          .clone()\n          .add(dir.multiplyScalar(distance));\n\n        if (callback == self.onRightClick && event.which != 3) {\n          return;\n        }\n\n        if (\n          callback == self.onRightClick &&\n          event.target.getAttribute(\"contenteditable\")\n        ) {\n          event.target.focus();\n        } else {\n          event.preventDefault();\n          if (callback == self.onRightClick) {\n            self.onRightClickCoords(event);\n          }\n          self.callMouseHandler(event, raycaster, pos, callback);\n        }\n      };\n    };\n\n    //Add listeners to web page\n    self.setupMouseHandlers(mouseHandler);\n  };\n\n  /**\n   * Checks if a node has been clicked, and calls the appropriate mouse handler function\n   */\n  self.callMouseHandler = function(event, raycaster, pos, callback) {\n    var intersects = raycaster.intersectObjects(self.nodes.children);\n    if (intersects.length) {\n      // If a node has been clicked\n      var nodeIndex = intersects[0].object.index;\n      self.oldIntersect = nodeIndex;\n      callback(\n        self.graph.getNode(nodeIndex),\n        pos.x,\n        pos.y,\n        event.button,\n        event.ctrlKey\n      );\n    } else {\n      callback(null, pos.x, pos.y, event.button, event.ctrlKey);\n    }\n  };\n\n  /**\n   * Add Mouse Event Listeners to page\n   */\n  self.setupMouseHandlers = function(mouseHandler) {\n    self.element.addEventListener(\n      \"mousemove\",\n      mouseHandler(self.onMouseMove),\n      false\n    );\n    self.element.addEventListener(\n      \"mousedown\",\n      mouseHandler(self.onMouseDown),\n      false\n    );\n    self.element.addEventListener(\n      \"mouseup\",\n      mouseHandler(self.onMouseUp),\n      false\n    );\n    self.element.addEventListener(\n      \"mouseup\",\n      mouseHandler(self.onRightClick),\n      false\n    );\n    self.element.addEventListener(\n      \"touchstart\",\n      mouseHandler(self.onMouseDown),\n      false\n    );\n    self.element.addEventListener(\n      \"touchmove\",\n      mouseHandler(self.onMouseMove),\n      false\n    );\n    self.element.addEventListener(\n      \"touchend\",\n      mouseHandler(self.onMouseUp),\n      false\n    );\n    self.element.addEventListener(\n      \"touchcancel\",\n      mouseHandler(self.onMouseUp),\n      false\n    );\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\nvar $ = require(\"jquery\");\n\nmodule.exports = function(self) {\n  self.addNode = function(node) {\n    self.graph.addNode(node.id, node.data);\n    var graphNode = self.graph.getNode(node.id);\n    graphNode.x = node.x;\n    graphNode.y = node.y;\n    graphNode.fx = node.fx;\n    graphNode.fy = node.fy;\n    graphNode.pinnedx = node.fx != undefined;\n    graphNode.pinnedy = node.fy != undefined;\n    self.prepNode(graphNode);\n    self.drawNode(graphNode);\n    graphNode.links = [];\n    self.layoutInit = true;\n    return graphNode;\n  };\n\n  self.removeNode = function(node) {\n    if (!node || !node.id) {\n      return;\n    }\n    self.removeGraphEdges(node);\n    self.undrawEdges(node);\n    self.nodes.remove(node.renderData.draw_object);\n    self.graph.removeNode(node.id);\n    self.undrawNode(node);\n    self.nodeCount -= 1;\n  };\n\n  self.removeGraphEdges = function(node) {\n    var nodeLinks = self.graph.getLinks(node.id);\n    if (nodeLinks) {\n      nodeLinks.forEach(function(edge) {\n        self.graph.removeLink(edge);\n      });\n    }\n  };\n\n  self.undrawNode = function(node) {\n    var nodes = self.force.nodes();\n    if (nodes) {\n      for (var i = 0; i < nodes.length; i++) {\n        if (nodes[i].id == node.id) {\n          self.scene.remove(nodes[i].renderData.draw_object);\n          nodes[i].renderData.textHolder.children[0].element.hidden = true;\n          nodes.splice(i, 1);\n        }\n      }\n    }\n  };\n\n  self.undrawEdges = function(node) {\n    var positions = self.edges.attributes.position.array;\n    var colors = self.edges.attributes.color.array;\n    var killed = 0;\n    for (var i = 0; i - killed < self.lineIndices.length; i++) {\n      if (\n        self.lineIndices[i - killed].source.id == node.id ||\n        self.lineIndices[i - killed].target.id == node.id\n      ) {\n        for (var j = i - killed; j < self.lineIndices.length; j++) {\n          var k = j + 1;\n          if (k == self.lineIndices.length) {\n            positions[j * 6] = 0;\n            positions[j * 6 + 1] = 0;\n            positions[j * 6 + 3] = 0;\n            positions[j * 6 + 4] = 0;\n            colors[j * 6] = 255;\n            colors[j * 6 + 1] = 160;\n            colors[j * 6 + 2] = 80;\n            colors[j * 6 + 3] = 255;\n            colors[j * 6 + 4] = 160;\n            colors[j * 6 + 5] = 80;\n          } else {\n            self.lineIndices[j] = self.lineIndices[k];\n            self.lineObjects[j * 2] = self.lineObjects[k * 2];\n            self.lineObjects[j * 2 + 1] = self.lineObjects[k * 2 + 1];\n            positions[j * 6] = positions[k * 6];\n            positions[j * 6 + 1] = positions[k * 6 + 1];\n            positions[j * 6 + 3] = positions[k * 6 + 3];\n            positions[j * 6 + 4] = positions[k * 6 + 4];\n            colors[j * 6] = colors[k * 6];\n            colors[j * 6 + 1] = colors[k * 6 + 1];\n            colors[j * 6 + 2] = colors[k * 6 + 2];\n            colors[j * 6 + 3] = colors[k * 6 + 3];\n            colors[j * 6 + 4] = colors[k * 6 + 4];\n            colors[j * 6 + 5] = colors[k * 6 + 5];\n          }\n        }\n        self.lineIndices.pop();\n        self.lineObjects.pop();\n        self.lineObjects.pop();\n        self.drawCount -= 2;\n        killed += 1;\n      }\n    }\n    console.log(\"Deleted \" + killed.toString() + \" edges\");\n  };\n\n  self.getNode = function(node_id) {\n    return self.graph.getNode(node_id);\n  };\n\n  self.addEdge = function(source, target, visible = true) {\n    self.graph.addLink(source.id, target.id);\n    self.drawEdge(self.getNode(source.id), self.getNode(target.id), visible);\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   *  Change color of node edges\n   */\n  self.highlightNode = function(node, toggle, color = def.NODE_HIGHLIGHT) {\n    if (toggle) {\n      node.renderData.draw_object.children[0].material.color.setHex(color);\n      node.renderData.draw_object.children[0].visible = true;\n    } else {\n      node.renderData.draw_object.children[0].material.color.set(\n        node.renderData.hcolor\n      );\n      node.renderData.draw_object.children[0].visible = false;\n    }\n  };\n\n  /**\n   *  Highlight edges from and to a node and hide others\n   */\n  self.highlightEdges = function(node, toggle) {\n    const froms = [];\n    const tos = [];\n    for (var i = 0; i < self.selection.length; i++) {\n      for (var j = 0; j < self.selection[i].links.length; j++) {\n        froms.push(self.selection[i].links[j].fromId);\n        tos.push(self.selection[i].links[j].toId);\n      }\n    }\n    if (toggle) {\n      for (var i = 0; i < node.links.length; i++) {\n        froms.push(node.links[i].fromId);\n        tos.push(node.links[i].toId);\n      }\n      self.highlightNeighbors(node, froms, tos);\n    } else {\n      self.highlightNeighbors(node, froms, tos);\n    }\n  };\n\n  /**\n   * Highlight adjacent nodes\n   * \n   * Also highlights edges.\n   */\n  self.highlightNeighbors = function(node, froms, tos) {\n    self.graph.forEachNode(n => {\n      if (self.selection.indexOf(n) != -1 || n == node) {\n        // If the node is selected or the node is the node to be highlighted\n        self.colorNodeOpacity(n, 1);\n        self.colorNodeEdge(n, 0.5, 0.5);\n        for (var i = 0; n.linkObjs && i < n.linkObjs.length; i++) {\n          n.linkObjs[i].linecolor = n.renderData.linecolor;\n        }\n      } else if (\n        self.doHighlightNeighbors &&\n        (froms.indexOf(n.id) != -1 || tos.indexOf(n.id) != -1)\n      ) {\n        // If the node is not selected or highlighted and\n        // if the node is present in either froms or tos arrays\n        self.colorNodeOpacity(n, 1);\n        self.colorNodeEdge(n, 0.3, 0.9);\n      } else if (\n        !self.prevHighlights ||\n        self.prevHighlights.indexOf(n.id) == -1\n      ) {\n        self.colorNodeOpacity(n, 0.5);\n        self.colorNodeEdge(n, 0.3, 0.9);\n        self.highlightNode(n, false, def.ADJACENT_HIGHLIGHT);\n      }\n    });\n  };\n\n  /**\n   *  Change color of node edges\n   */\n  self.colorNodeEdge = function(node, dc, c) {\n    node.renderData.linecolor.r = self.darkMode ? dc : c;\n    node.renderData.linecolor.g = self.darkMode ? dc : c;\n    node.renderData.linecolor.b = self.darkMode ? dc : c;\n  };\n\n  /**\n   *  Change node opacity\n   */\n  self.colorNodeOpacity = function(node, op) {\n    node.renderData.draw_object.material.opacity = op;\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\nvar $ = require(\"jquery\");\n\nmodule.exports = function(self) {\n  self.selectNode = function(node) {\n    self.dragging = node;\n    self.selection = [node];\n    node.renderData.isSelected = true;\n    self.updateSelection(self.mouseX, self.mouseY);\n  };\n\n  /**\n   * Deselect nodes in selection list\n   */\n  self.clearSelection = function() {\n    for (var i = 0; i < self.selection.length; i++) {\n      self.selection[i].renderData.isSelected = false;\n      if (!def.NODE_NO_HIGHLIGHT) {\n        self.selection[i].renderData.draw_object.children[0].visible = false;\n      } else {\n        self.selection[i].renderData.draw_object.material.color.set(\n          new THREE.Color(self.selection[i].renderData.color)\n        );\n      }\n      self.selection[i].renderData.textHolder.children[0].element.hideme = true;\n    }\n    self.selection = [];\n  };\n\n  /**\n   *  Update positions of all objects in self.selection\n   *  based on diff between mouse position and self.dragging position\n   */\n  self.updateSelection = function(mouseX, mouseY) {\n    if (self.dragging) {\n      var diffx = mouseX - self.dragging.x;\n      var diffy = mouseY - self.dragging.y;\n    }\n    for (var i = 0; i < self.selection.length; i++) {\n      if (self.dragging) {\n        self.selection[i].x += diffx;\n        self.selection[i].y += diffy;\n        self.selection[i].fx = self.selection[i].x;\n        self.selection[i].fy = self.selection[i].y;\n        self.selection[i].pinnedx = true;\n        self.selection[i].pinnedy = true;\n      }\n      if (!def.NODE_NO_HIGHLIGHT) {\n        self.selection[i].renderData.draw_object.children[0].visible = true;\n      } else {\n        self.selection[i].renderData.draw_object.material.color.set(\n          new THREE.Color(self.selection[i].renderData.hcolor)\n        );\n      }\n      self.selection[\n        i\n      ].renderData.textHolder.children[0].element.hideme = false;\n    }\n  };\n\n  /**\n   *  Find any objects within the current box selection and add it to self.selection\n   */\n  self.checkSelection = function(mouseX, mouseY) {\n    if (!self.dragging) {\n      self.mouseEnd = new THREE.Vector3(mouseX, mouseY, 0);\n      if (self.mouseStart.x < self.mouseEnd.x) {\n        var left = self.mouseStart;\n        var right = self.mouseEnd;\n      } else {\n        var left = self.mouseEnd;\n        var right = self.mouseStart;\n      }\n\n      self.graph.forEachNode(function(node) {\n        let npos;\n        if (self.options.layout == \"ngraph\") {\n          npos = self.force.getNodePosition(node.id);\n        } else if (self.options.layout == \"d3\") {\n          npos = node;\n        }\n        if (self.insideBox(left, right, npos.x, npos.y)) {\n          self.selection.push(node);\n        }\n      });\n    }\n  };\n\n  /**\n   *  returns true if pos is in box with top left l and bottom right r\n   */\n  self.insideBox = function(l, r, posx, posy) {\n    return (\n      posx < r.x &&\n      posx > l.x &&\n      ((posy > r.y && posy < l.y) || (posy < r.y && posy > l.y))\n    );\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\nvar $ = require(\"jquery\");\n\nmodule.exports = function(self) {\n  /**\n   * Mouse move event that selections nodes in selection box\n   */\n  self.onMouseMove = function(selection, mouseX, mouseY, button, ctrl) {\n    // check if left button is not down\n    self.mouseX = mouseX;\n    self.mouseY = mouseY;\n\n    if (self.leftMouseDown && self.mouseDown) {\n      // left-clicked empty space (i.e., not clicking a node)\n      if (!self.dragging && self.selection.indexOf(selection) == -1 && !ctrl) {\n        self.clearSelection();\n      }\n\n      if (!self.dragging) {\n        // add nodes enclosed by selection box into node selection\n        self.checkSelection(mouseX, mouseY);\n      }\n    }\n\n    if (self.selection.length > 0) {\n      // reactivate (in D3's terminology: reheat) the force layout\n      if (self.dragging) {\n        self.force.alpha(1);\n      }\n      // update position of nodes in selection\n      self.updateSelection(mouseX, mouseY);\n    }\n\n    if (!self.mouseDown) {\n      self.onHover(selection);\n      self.mouseStart = new THREE.Vector3(mouseX, mouseY, 0);\n    } else {\n      // if mouse is in minimap, do nothing else\n      if (self.isMouseCoordinatesOnMinimap && self.mapShowing) {\n        self.minimap.panToMousePosition(\n          self.minimap.mouseX,\n          self.minimap.mouseY\n        );\n        return;\n      }\n\n      // update selection box size/position\n      if (self.leftMouseDown && !self.dragging) {\n        if (self.showBox) {\n          self.selectBox.visible = true;\n          self.showBox = false;\n        }\n        self.selectBox.position.x = mouseX;\n        self.selectBox.position.y = mouseY;\n        var diffx = self.mouseStart.x - mouseX;\n        var diffy = self.mouseStart.y - mouseY;\n        self.selectBox.scale.set(diffx, diffy, 1);\n      } else {\n        self.selectBox.visible = false;\n      }\n    }\n  };\n\n  /**\n   * Mouse hover over node event that highlights the node and neighbors at mouse position\n   */\n  self.onHover = function(node) {\n    if (self.lastHover && self.selection.indexOf(self.lastHover) == -1) {\n      self.highlightNode(self.lastHover, false);\n      self.lastHover.renderData.textHolder.children[0].element.hideme = true;\n      self.highlightEdges(node, false);\n    }\n    self.lastHover = node;\n    if (node) {\n      self.highlightNode(node, true);\n      node.renderData.textHolder.children[0].element.hideme = false;\n      self.highlightEdges(node, true);\n    } else if (self.selection.length == 0) {\n      self.graph.forEachNode(n => {\n        self.colorNodeOpacity(n, 1);\n        self.colorNodeEdge(n, 0.5, 0.5);\n        self.highlightNode(n, false, def.ADJACENT_HIGHLIGHT);\n      });\n    }\n    if (self.prevHighlights != undefined) {\n      for (var i = 0; i < self.prevHighlights.length; i++) {\n        self.colorNodeOpacity(self.prevHighlights[i], 1);\n        self.highlightNode(self.prevHighlights[i], true, def.SEARCH_HIGHLIGHT);\n      }\n    }\n  };\n\n  // vars to get time at mouse press and time at mouse release\n  var startTime = 0;\n  var endTime = 0;\n  /**\n   * Mouse down event to start a selection box or start dragging a node\n   */\n  self.onMouseDown = function(selection, mouseX, mouseY, button, ctrl) {\n    // if mouse is in minimap, do nothing else\n    if (self.isMouseCoordinatesOnMinimap && self.mapShowing) {\n      self.mouseDown = true;\n      self.minimap.panToMousePosition(self.minimap.mouseX, self.minimap.mouseY);\n      return;\n    }\n    startTime = Date.now();\n    self.leftMouseDown = true;\n    if (self.leftMouseDown) {\n      self.mouseDown = true;\n      self.mouseStart = new THREE.Vector3(mouseX, mouseY, 0);\n      if (button == 0 && !self.dragging) {\n        self.showBox = true;\n      }\n      if (self.selection.indexOf(selection) == -1 && !ctrl) {\n        for (var i = 0; i < self.selection.length; i++) {\n          self.selection[i].renderData.isSelected = false;\n          if (!def.NODE_NO_HIGHLIGHT) {\n            self.selection[\n              i\n            ].renderData.draw_object.children[0].visible = false;\n          } else {\n            self.selection[i].renderData.draw_object.material.color.set(\n              new THREE.Color(self.selection[i].renderData.color)\n            );\n          }\n          self.selection[\n            i\n          ].renderData.textHolder.children[0].element.hideme = true;\n        }\n        self.selection = [];\n      }\n      if (selection) {\n        self.dragging = selection;\n        if (self.selection.indexOf(selection) == -1) {\n          self.selection.push(selection);\n          selection.renderData.isSelected = true;\n          self.updateSelection(self.dragging.x, self.dragging.y);\n        } else if (ctrl) {\n          self.selection.splice(self.selection.indexOf(selection), 1);\n          selection.renderData.isSelected = false;\n          if (!def.NODE_NO_HIGHLIGHT) {\n            selection.renderData.draw_object.children[0].visible = false;\n          } else {\n            selection.renderData.draw_object.material.color.set(\n              new THREE.Color(self.selection[i].renderData.color)\n            );\n          }\n          selection.renderData.textHolder.children[0].element.hideme = true;\n          self.dragging = null;\n        }\n      } else {\n        if (self.newNodeIds) {\n          self.highlightNodeIds([], true);\n          self.newNodeIds = undefined;\n        }\n      }\n    }\n  };\n\n  /**\n   * Mouse up event that closes selection flags and emits selection to Argo\n   */\n  self.onMouseUp = function(selection, mouseX, mouseY, button) {\n    endTime = Date.now();\n    self.mouseDown = false;\n    // Left or right mouse button\n    if (true) {\n      self.showBox = false;\n      self.dragging = null;\n      self.selectBox.visible = false;\n\n      self.ee.emit(\"select-nodes\", self.selection);\n    }\n  };\n\n  /**\n   * Right click event to save right clicked node\n   */\n  self.onRightClick = function(selection) {\n    if (selection) {\n      self.rightClickedNode = selection;\n    } else {\n      self.rightClickedNode = null;\n    }\n  };\n\n  /**\n   * Right click event that emits context menu event to Argo\n   */\n  self.onRightClickCoords = function(event) {\n    // Don't show menu if dragging camera\n    if (endTime - startTime < 200) {\n      self.ee.emit(\"right-click\", {\n        pageX: event.pageX,\n        pageY: event.pageY\n      });\n    }\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   * Set all nodes to a size\n   */\n  self.setUniformNodeSize = function(s) {\n    self.graph.forEachNode(function(node) {\n      node.renderData.draw_object.scale.set(s, s, 1);\n      var hsize = 1 + def.HIGHLIGHT_SIZE / s;\n      node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\n    });\n  };\n\n  /**\n   * Set all nodes to a size based on a value in the node's data\n   */\n  self.setNodeDataSize = function(dataValue) {\n    self.graph.forEachNode(function(node) {\n      dataVal = node.renderData[dataValue];\n      if (!dataVal) {\n        console.log(\"Data value does not exist\");\n      } else {\n        dataVal = Math.log(dataVal + 1);\n        node.renderData.draw_object.scale.set(dataVal, dataVal, 1);\n        var hsize = 1 + def.HIGHLIGHT_SIZE / dataVal;\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\n      }\n    });\n  };\n\n  /**\n   * Set all nodes to a color\n   */\n  self.setUniformNodeColor = function(hsvDegree) {\n    self.graph.forEachNode(function(node) {\n      node.renderData.draw_object.material.color.set(\n        new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 43%)\")\n      );\n      if (!def.NODE_NO_HIGHLIGHT) {\n        node.renderData.draw_object.children[0].material.color.set(\n          new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 63%)\")\n        );\n      }\n    });\n  };\n\n  /**\n   * Set all nodes to a color based on a value in the node's data\n   */\n  self.setNodeDataColor = function(dataValue) {\n    var i = 0;\n    values = [];\n    min = null;\n    max = null;\n\n    self.graph.forEachNode(function(node) {\n      if ((dataVal = node.renderData[dataValue])) {\n        if (min == null) min = dataVal;\n        if (max == null) max = dataVal;\n        if (dataVal < min) min = dataVal;\n        else if (dataVal > max) max = dataVal;\n        values[i] = dataVal;\n        i += 1;\n      } else {\n        values[i] = -1;\n      }\n    });\n\n    i = 0;\n    self.graph.forEachNode(function(node) {\n      var hsvDegree;\n      if (values[i] == -1) {\n        hsvDegree = 0;\n      } else {\n        values[i] = (values[i] - min) / (max - min);\n        hsvDegree = values[i] * 120;\n      }\n      node.renderData.draw_object.material.color.set(\n        new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 48%)\")\n      );\n      if (!def.NODE_NO_HIGHLIGHT) {\n        node.renderData.draw_object.children[0].material.color.set(\n          new THREE.Color(\"hsl(\" + hsvDegree + \", 100%, 63%)\")\n        );\n      }\n      i++;\n    });\n  };\n\n  /**\n   * Map a node attribute based on some mapping function\n   */\n  self.mapNodeAttributes = function(mapping, nodes = null) {\n    let val;\n    if (mapping[0] == \"degree\") {\n      val = node => (node.links ? node.links.length + 2 : 2);\n    } else if (mapping[0] == \"scalex\") {\n      val = node => node.renderData.draw_object.scale.x;\n    } else {\n      val = node => mapping[0];\n    }\n\n    let mod;\n    if (mapping[1] == \"volume\") {\n      mod = val => self.volToRadius(val);\n    } else if (mapping[1] == \"mult\") {\n      mod = val => val * mapping[3](val);\n    } else if (mapping[1] == \"add\") {\n      mod = val => val + mapping[3](val);\n    } else if (mapping[1] == \"log\") {\n      mod = val => Math.log(val);\n    } else {\n      mod = val => val;\n    }\n\n    let attr;\n    if (mapping[2] == \"scalexy\") {\n      attr = (node, val) => {\n        node.renderData.draw_object.scale.set(val, val, 1);\n        var hsize = 1 + def.HIGHLIGHT_SIZE / val;\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\n      };\n    } else if (mapping[2] == \"edgeColorRed\") {\n      attr = (node, val) => {\n        node.renderData.linecolor.r = 1;\n        node.renderData.linecolor.b = 1 - val / 5;\n        node.renderData.linecolor.g = 1 - val / 5;\n      };\n    } else if (mapping[2] == \"edgeColorBlue\") {\n      attr = (node, val) => {\n        node.renderData.linecolor.b = 1;\n        node.renderData.linecolor.r = 1 - val / 5;\n        node.renderData.linecolor.g = 1 - val / 5;\n      };\n    } else if (mapping[2] == \"edgeColorGreen\") {\n      attr = (node, val) => {\n        node.renderData.linecolor.g = 1;\n        node.renderData.linecolor.b = 1 - val / 5;\n        node.renderData.linecolor.r = 1 - val / 5;\n      };\n    } else if (mapping[2] == \"nodeColorBlue\") {\n      attr = (node, val) => {\n        node.renderData.draw_object.material.color.b = 1;\n        node.renderData.draw_object.material.color.r = 1 - val / 5;\n        node.renderData.draw_object.material.color.g = 1 - val / 5;\n      };\n    } else if (mapping[2] == \"pinned\") {\n      attr = (node, val) => {\n        node.pinnedx = val;\n        node.pinnedy = val;\n      };\n    } else if (mapping[2] == \"labelSize\") {\n      attr = (node, val) => {\n        self.changeLabelFontSize(node, val);\n      };\n    } else if (mapping[2] == \"labelLength\") {\n      attr = (node, val) => {\n        self.changeLabelLength(node, val);\n      };\n    }\n\n    self.changeNodes(val, mod, attr, nodes);\n  };\n\n  /**\n   *  get attribute from node using function val\n   *  modify result with function mode\n   *  set node attribute with attr\n   */\n  self.changeNode = function(val, mod, attr, node) {\n    var v = val(node);\n    if (v != undefined) {\n      var r = mod(v);\n      if (r != undefined) {\n        attr(node, r);\n      }\n    }\n  };\n\n  /**\n   *  perform changeNode on many nodes\n   */\n  self.changeNodes = function(val, mod, attr, nodes = null) {\n    if (nodes == null) {\n      self.graph.forEachNode(function(node) {\n        self.changeNode(val, mod, attr, node);\n      });\n    } else {\n      for (var i = 0; i < nodes.length; i++) {\n        self.changeNode(val, mod, attr, nodes[i]);\n      }\n    }\n  };\n\n  /**\n   * Limit label size by (estimated) characters\n   * This is only accurate if the label is monospaced\n   */\n  self.changeLabelLength = function(node, numChars) {\n    node.renderData.textHolder.children[0].element.children[0].style.width =\n      numChars.toString() + \"ch\";\n  };\n\n  /**\n   * Limit label size by (estimated) characters\n   * This is only accurate if the label is monospaced\n   */\n  self.changeLabelFontSize = function(node, size, relativeSize = 1) {\n    size = size * relativeSize;\n    node.renderData.textHolder.children[0].element.children[0].style.fontSize =\n      size.toString() + \"rem\";\n  };\n\n  /**\n   * Change boundary size\n   */\n  self.setBoundarySize = function(size) {\n    self.renderWidth = size;\n    self.renderHeight = size;\n    self.boundaries.scale.set(size * 2, size * 2, 1);\n    self.boundaries.position.x = -size;\n    self.boundaries.position.y = -size;\n    self.controls.maxDistance = size * 2;\n    self.minimap.camera.position.z = self.renderWidth * 2;\n  };\n\n  /**\n   * Change viewport size\n   */\n  self.setViewPortSize = function(camera) {\n    var distance = self.ccamera.position.z;\n    var height =\n      Math.tan(((camera.fov * Math.PI) / 180) * 0.5) * distance * 2 + 5;\n    var width = height * camera.aspect + 5;\n    self.viewPort.scale.set(width, height, 1);\n    self.viewPort.position.x = camera.position.x - width / 2;\n    self.viewPort.position.y = camera.position.y - height / 2;\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   *  Create highlight mesh\n   */\n  self.createHighlightMesh = function(node, texture) {\n    var shape =\n      node.renderData.hshape || node.renderData.shape || def.NODE_HSHAPE;\n    if (shape == \"square\") {\n      var hgeometry = self.make2x2Rect();\n    } else {\n      var hgeometry = new THREE.CircleGeometry(1, 32);\n    }\n\n    return self.createHighlightDrawObject(hgeometry, node, texture);\n  };\n\n  /**\n   * Sets the material, color, visibility, and size of the highlight drawing for a node.\n   */\n  self.createHighlightDrawObject = function(hgeometry, node, texture) {\n    var size = self.getNodeSize(node);\n    var hsize = def.HIGHLIGHT_SIZE;\n\n    texture = def.NODE_NO_HTEX ? null : texture;\n    var color = def.NODE_NO_HCOLOR\n      ? null\n      : parseInt(node.renderData.hcolor || def.NODE_HIGHLIGHT);\n    var hmaterial = new THREE.MeshBasicMaterial({ color: color, map: texture });\n    hmaterial.transparent = true;\n    var highlight = new THREE.Mesh(hgeometry, hmaterial);\n    highlight.visible = true;\n    highlight.scale.set(1 + hsize / size, 1 + hsize / size, 1);\n    highlight.position.z = -0.01;\n    return highlight;\n  };\n\n  /**\n   *  Create node mesh\n   */\n  self.createNodeMesh = function(node, texture) {\n    var shape = node.renderData.shape || def.NODE_SHAPE;\n    if (shape == \"square\") {\n      var geometry = self.make2x2Rect();\n    } else {\n      var geometry = new THREE.CircleGeometry(1, 32);\n    }\n    return self.createNodeDrawObject(geometry, node, texture);\n  };\n\n  /**\n   * Create mesh to visual show pinning\n   */\n  self.createPinMesh = function(size) {\n    var geometry = self.make2x2Rect();\n    var color = new THREE.Color(def.PIN_COLOR);\n    var material = new THREE.MeshBasicMaterial({ color: color });\n    var pinMesh = new THREE.Mesh(geometry, material);\n    pinMesh.scale.set(0.1, 0.1, 1);\n    pinMesh.position.z = 0.01;\n    pinMesh.visible = false;\n    return pinMesh;\n  };\n\n  /**\n   * Create the drawing information for a node\n   */\n  self.createNodeDrawObject = function(geometry, node, texture) {\n    var size = self.getNodeSize(node);\n\n    texture = def.NODE_NO_TEX ? null : texture;\n    var color = def.NODE_NO_COLOR\n      ? null\n      : new THREE.Color(node.renderData.color || def.NODE_COLOR);\n    var material = new THREE.MeshBasicMaterial({ color: color, map: texture });\n    material.transparent = true;\n    var draw_object = new THREE.Mesh(geometry, material);\n    draw_object.scale.set(size, size, 1);\n    return draw_object;\n  };\n\n  /**\n   * Get the size of a node if it exists, otherwise get it from the render data.\n   */\n  self.getNodeSize = function(node) {\n    var size;\n    if (node.renderData.size != undefined) size = node.renderData.size;\n    else size = node.renderData[\"size\"];\n    return size;\n  };\n\n  self.createNodeLabel = function(node) {\n    var material = new THREE.MeshBasicMaterial({\n      color: 0x000000,\n      wireframe: true,\n      wireframeLinewidth: 1,\n      side: THREE.DoubleSide\n    });\n    var geometry = new THREE.PlaneGeometry(1000, 200);\n    var textMesh = self.createAndSetupLabelTextMesh(geometry, material);\n    var label = self.createAndSetupLabelDiv(node, textMesh);\n    var textHolder = self.createAndSetupTextHolder(label, textMesh);\n    node.renderData.textHolder = textHolder;\n    self.scene.add(textHolder);\n  };\n\n  self.createAndSetupLabelTextMesh = function(geometry, material) {\n    var textMesh = new THREE.Mesh(geometry, material);\n    textMesh.scale.set(def.TEXT_SIZE, def.TEXT_SIZE, 1);\n    var bbox = new THREE.Box3().setFromObject(textMesh);\n    textMesh.position.x += (bbox.max.x - bbox.min.x) * def.TEXT_X_OFFSET;\n    textMesh.position.y -= (bbox.max.y - bbox.min.y) * def.TEXT_Y_OFFSET;\n    textMesh.visible = def.TEXT_WIREFRAME;\n    return textMesh;\n  };\n\n  self.createAndSetupLabelDiv = function(node, textMesh) {\n    var label = self.createLabelDiv(node);\n    label.element.hidden = true;\n    label.position.copy(textMesh.position);\n    label.scale.copy(textMesh.scale);\n    return label;\n  };\n\n  self.createAndSetupTextHolder = function(label, textMesh) {\n    var textHolder = new THREE.Object3D();\n    textHolder.add(label);\n    textHolder.add(textMesh);\n    return textHolder;\n  };\n\n  /**\n   *  Create label div\n   */\n  self.createLabelDiv = function(node) {\n    // Create canvas to draw text label onto sprite image\n    var element = self.createLabelDivElement();\n    var content = document.createTextNode(node.renderData.label);\n    var textElement = self.createLabelTextElement();\n    textElement.appendChild(content);\n    element.appendChild(textElement);\n    var labelObj = new THREE.CSS3DObject(element);\n    return labelObj;\n  };\n\n  /**\n   * Creates the Label Div Element for a node's label\n   */\n  self.createLabelDivElement = function() {\n    var element = document.createElement(\"div\");\n    element.style.width = \"1000px\";\n    element.style.height = \"200px\";\n    element.style.backgroundColor = def.TEXT_BACK_COLOR;\n    element.style.opacity = def.TEXT_OPACITY;\n    return element;\n  };\n\n  /**\n   * Creates the text element to add to the label div for a node.\n   */\n  self.createLabelTextElement = function() {\n    var textElement = document.createElement(\"div\");\n    textElement.style.width = \"1000px\";\n    textElement.style.height = \"2ch\";\n    textElement.style.fontSize = \"96px\";\n    textElement.style.textOverflow = \"ellipsis\";\n    textElement.style.overflow = \"hidden\";\n    textElement.style.userSelect = \"all\";\n    textElement.style.whiteSpace = \"nowrap\";\n    //textElement.setAttribute('contenteditable', 'true');\n    return textElement;\n  };\n\n  /**\n   * Instantiates, sets highlight for, and sets position for the actual THREE\n   * drawing of a node\n   */\n  self.setupNodeDrawObject = function(node, htexture, texture) {\n    var draw_object = self.createNodeMesh(node, texture);\n\n    // Create highlight\n    if (!def.NODE_NO_HIGHLIGHT) {\n      var highlight = self.createHighlightMesh(node, htexture);\n      draw_object.add(highlight);\n    }\n\n    var pinMesh = self.createPinMesh();\n    draw_object.add(pinMesh);\n\n    draw_object.position.x = node.renderData.x;\n    draw_object.position.y = node.renderData.y;\n    draw_object.index = node.id;\n    draw_object.name = node.id;\n    node.renderData.draw_object = draw_object;\n\n    return draw_object;\n  };\n\n  /**\n   *  Create a node object and add it to the scene.\n   */\n  self.drawNode = function(node) {\n    function onHTextureLoad(node, htexture) {\n      // Load node texture\n      self.textureLoader.load(\n        node.renderData.image || def.NODE_TEXTURE,\n        onTextureLoad.bind(null, node, htexture)\n      );\n    }\n\n    function onTextureLoad(node, htexture, texture) {\n      // Create mesh for node\n      var draw_object = self.setupNodeDrawObject(node, htexture, texture);\n\n      // Create div for label\n      self.createNodeLabel(node);\n\n      self.nodeCount += 1;\n      self.nodes.add(draw_object);\n    }\n\n    if (def.NODE_NO_HTEX && def.NODE_NO_TEX) {\n      onTextureLoad(node, null, null);\n    } else {\n      // Load highlight texture\n      self.textureLoader.load(\n        node.renderData.himage || def.NODE_HTEXTURE,\n        onHTextureLoad.bind(null, node)\n      );\n    }\n  };\n\n  /**\n   *  Create an edge and add it to the lineSegments.\n   */\n  self.drawEdge = function(source, target, visible = true) {\n    if (\n      source.renderData.draw_object === undefined ||\n      target.renderData.draw_object === undefined\n    ) {\n      setTimeout(self.drawEdge.bind(null, source, target), 50);\n      return;\n    }\n    var index = self.drawCount * 3;\n    self.lineObjects[index / 3] = source;\n    self.lineObjects[index / 3 + 1] = target;\n    if (!source.linkObjs) {\n      source.linkObjs = [];\n    }\n    if (!target.linkObjs) {\n      target.linkObjs = [];\n    }\n    self.lineIndices.push({\n      source: source,\n      target: target,\n      hide: !visible,\n      linecolor: source.renderData.linecolor\n    });\n    source.linkObjs.push(self.lineIndices[index / 6]);\n    target.linkObjs.push(self.lineIndices[index / 6]);\n    self.updateColorsAndPositions(source, target, index);\n    self.drawCount += 2;\n  };\n\n  /**\n   * Update the colors and positions of the edges between source and target\n   */\n  self.updateColorsAndPositions = function(source, target, index) {\n    var positions = self.edges.attributes.position.array;\n    var colors = self.edges.attributes.color.array;\n\n    var v1pos = source.renderData.draw_object.position;\n    var v2pos = target.renderData.draw_object.position;\n    var v1color = self.lineIndices[index / 6].linecolor;\n    var v2color = self.lineIndices[index / 6].linecolor;\n    colors[index] = v1color.b;\n    positions[index++] = v1pos.x;\n    colors[index] = v1color.g;\n    positions[index++] = v1pos.y;\n    colors[index] = v1color.r;\n    positions[index++] = v1pos.z - 0.02;\n    colors[index] = v2color.b;\n    positions[index++] = v2pos.x;\n    colors[index] = v2color.g;\n    positions[index++] = v2pos.y;\n    colors[index] = v2color.r;\n    positions[index++] = v2pos.z - 0.02;\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\n/**\n * These functions are endpoints revealed to Argo frontend\n */\nmodule.exports = function(self) {\n  /**\n   * Set frame.mouseMode to the specified mode\n   * @param {string} mode name of the mode, currently supports ['select', 'move']\n   */\n  self.setMouseMode = mode => {\n    if (mode === \"select\") {\n      // This is the default mode, where users can select one or multiple nodes\n      self.mouseMode = \"select\";\n      self.isMouseModeMove = false;\n    } else if (mode === \"move\") {\n      // move mode, where user can drag the screen to achieve panning\n      self.mouseMode = \"move\";\n      self.isMouseModeMove = true;\n    }\n  };\n\n  self.pauseLayout = () => {\n    self.paused = true;\n  };\n  window.pause = self.pauseLayout;\n\n  self.resumeLayout = () => {\n    self.paused = false;\n  };\n\n  self.mapSelectedNodes = () => {\n    self.mapNodeAttributes([\"degree\", \"log\", \"scalexy\"], self.selection);\n  };\n\n  self.mapAllNodes = () => {\n    self.mapNodeAttributes([\"degree\", \"log\", \"scalexy\"]);\n  };\n\n  self.pinSelectedNodes = () => {\n    self.mapNodeAttributes([true, \"\", \"pinned\"], self.selection);\n  };\n\n  self.unpinSelectedNodes = () => {\n    self.mapNodeAttributes([false, \"\", \"pinned\"], self.selection);\n  };\n\n  self.setLabelFontSize = size => {\n    self.graph.forEachNode(function(node) {\n      self.changeLabelFontSize(node, size, self.relativeFontSize);\n    });\n  };\n\n  self.setLabelRelativeSize = size => {\n    self.relativeFontSize = size;\n    self.setLabelFontSize(self.labelSize);\n  };\n\n  self.setLabelLength = numChars => {\n    self.graph.forEachNode(function(node) {\n      self.changeLabelLength(node, numChars);\n    });\n  };\n\n  self.toggleMiniMap = () => {\n    if (self.mapShowing) {\n      self.hideMiniMap();\n    } else {\n      self.showMiniMap();\n    }\n  };\n\n  self.showMiniMap = () => {\n    if (self.mapShowing) {\n      return;\n    }\n    self.mapShowing = true;\n    self.element.appendChild(self.minimapRenderer.domElement);\n  };\n\n  self.hideMiniMap = () => {\n    if (!self.mapShowing) {\n      return;\n    }\n    self.mapShowing = false;\n    self.element.removeChild(self.minimapRenderer.domElement);\n  };\n\n  // The CSS Renderer for rendering labels is the most expensive\n  // renderer. For 300+ nodes it's recommended to turn it off by\n  // default and only use it when no node is moving to prevent\n  // visible lagging (during layout, dragging etc.)\n  self.turnOffLabelCSSRenderer = () => {\n    if (self.cssRenderer.isPaused) {\n      return;\n    }\n    self.element.removeChild(self.cssRenderer.domElement);\n    self.cssRenderer.isPaused = true;\n  };\n\n  // See turnOffLabelCSSRenderer.\n  self.turnOnLabelCSSRenderer = () => {\n    if (!self.cssRenderer.isPaused) {\n      return;\n    }\n    self.element.appendChild(self.cssRenderer.domElement);\n    self.cssRenderer.isPaused = false;\n  };\n\n  // Emits id of every node with label being displayed at this moment.\n  // Used to keep mobx state in sync since GraphStore and snapshot\n  // needs to save what nodes have labels shown and what not.\n  // Also turns off label CSSRenderer when no node is showing label.\n  self.updateNodesShowingLabels = () => {\n    var nodes = [];\n    self.graph.forEachNode(n => {\n      var node = self.graph.getNode(n.id);\n      if (node.renderData.textHolder.children[0].element.override) {\n        nodes.push(n.id);\n      }\n    });\n\n    // Turns off label CSSRenderer when no node is showing label.\n    // This is because CSSRenderer is slow.\n    if (nodes.length == 0) {\n      self.turnOffLabelCSSRenderer();\n    } else if (!((self.selection.length > 0) && (self.dragging)) || (appState.graph.frame.paused)) { \n      //Only turns on when no node is moving\n      self.turnOnLabelCSSRenderer();\n    }\n\n    self.ee.emit(\"show-node-label\", nodes);\n  };\n\n  self.toggleSelectedLabels = () => {\n    self.toggleLabels(self.selection.map(n => n.id));\n  };\n\n  self.showSelectedLabels = () => {\n    self.showLabels(self.selection.map(n => n.id));\n  };\n\n  self.hideSelectedLabels = () => {\n    self.hideLabels(self.selection.map(n => n.id));\n  };\n\n  self.toggleLabels = nodeids => {\n    self.graph.forEachNode(n => {\n      if (nodeids.includes(n.id)) {\n        var node = self.graph.getNode(n.id);\n        if (\n          node.renderData.textHolder.children[0].element.override == undefined\n        ) {\n          node.renderData.textHolder.children[0].element.override = false;\n        }\n        node.renderData.textHolder.children[0].element.override = !node\n          .renderData.textHolder.children[0].element.override;\n      }\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.showLabels = nodeids => {\n    self.graph.forEachNode(n => {\n      if (nodeids.includes(n.id)) {\n        var node = self.graph.getNode(n.id);\n        node.renderData.textHolder.children[0].element.override = true;\n      }\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.hideLabels = nodeids => {\n    self.graph.forEachNode(n => {\n      if (nodeids.includes(n.id)) {\n        var node = self.graph.getNode(n.id);\n        node.renderData.textHolder.children[0].element.override = false;\n      }\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.hideAllLabels = () => {\n    self.graph.forEachNode(function(node) {\n      var node = self.graph.getNode(node.id);\n      node.renderData.textHolder.children[0].element.override = false;\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.showAllLabels = () => {\n    self.graph.forEachNode(function(node) {\n      var node = self.graph.getNode(node.id);\n      node.renderData.textHolder.children[0].element.override = true;\n    });\n    self.updateNodesShowingLabels();\n  };\n\n  self.setCanvasSize = function(size) {\n    self.setBoundarySize(size);\n  };\n\n  self.setAllNodesShape = function(shape) {\n    if (self.selection.length == 0) {\n      self.graph.forEachNode(function(node) {\n        self.setNodeShape(self.graph.getNode(node.id), shape);\n      });\n    } else {\n      self.selection.forEach(function(node) {\n        self.setNodeShape(self.graph.getNode(node.id), shape);\n      });\n    }\n  };\n\n  self.setAllNodesShapeWithOverride = function(shape, overrides) {\n    self.graph.forEachNode(function(node) {\n      if (overrides.has(node.id) && overrides.get(node.id).has('shape')) {\n        self.setNodeShape(self.graph.getNode(node.id), overrides.get(node.id).get('shape'));\n      } else {\n        self.setNodeShape(self.graph.getNode(node.id), shape);\n      }\n    });\n  }\n\n  self.setNodeShape = function(node, shape) {\n    if (shape == \"square\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = self.make2x2Rect();\n      node.renderData.draw_object.children[0].geometry = self.make2x2Rect();\n    } else if (shape == \"circle\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 32);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        32\n      );\n    } else if (shape == \"triangle\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 3);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        3\n      );\n    } else if (shape == \"pentagon\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 5);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        5\n      );\n    } else if (shape == \"hexagon\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 6);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        6\n      );\n    } else if (shape == \"octagon\") {\n      node.renderData.shape = shape;\n      node.renderData.draw_object.geometry = new THREE.CircleGeometry(1, 8);\n      node.renderData.draw_object.children[0].geometry = new THREE.CircleGeometry(\n        1,\n        8\n      );\n    }\n  };\n\n  self.getNumSelected = function() {\n    if (self.selection.length == self.graph.getNodesCount()) {\n      return 0;\n    }\n    return self.selection.length;\n  };\n\n  self.toggleDark = function() {\n    self.darkMode = !self.darkMode;\n    self.updateViewPortEdgeColor();\n  };\n\n  self.updateViewPortEdgeColor = function() {\n    self.viewPort.material.color = new THREE.Color( self.darkMode? 0xffffff : 0x000000 );       \n  }\n\n  self.getGraph = function() {\n    return self.graph;\n  };\n\n  self.getNodeList = function() {\n    var nodes = [];\n    self.graph.forEachNode(function(node) {\n      nodes.push(node);\n    });\n    return nodes;\n  };\n\n  self.getPositions = function() {\n    var poses = {};\n    self.graph.forEachNode(function(node) {\n      poses[node.id] = [node.x, node.y];\n    });\n    return poses;\n  };\n\n  self.getPinPositions = function() {\n    var poses = {};\n    self.graph.forEachNode(function(node) {\n      poses[node.id] = [node.fx, node.fy];\n    });\n    return poses;\n  };\n\n  var alias = false;\n  self.toggleAlias = () => {\n    // TODO: recreate renderer with new antialias\n    // self.init(alias);\n    // self.display();\n    alias = !alias;\n  };\n\n  self.setLastNode = id => {\n    self.lastNode = self.graph.getNode(id);\n  };\n\n  self.dragLastNode = () => {\n    self.selectNode(self.lastNode);\n  };\n\n  var x = 1.0;\n  self.lowerRes = () => {\n    x -= 0.1;\n    self.renderer.setPixelRatio(x);\n    self.onWindowResize();\n  };\n\n  self.toggleNeighborHighlight = function() {\n    self.doHighlightNeighbors = !self.doHighlightNeighbors;\n  };\n\n  self.highlightNodeIds = function(nodeids, toggle) {\n    if (nodeids.length > 0 && Array.isArray(nodeids[0])) {\n      nodeids = nodeids[0];\n    }\n    if (self.prevHighlights) {\n      for (var i = 0; i < self.prevHighlights.length; i++) {\n        self.highlightNode(\n          self.prevHighlights[i],\n          !toggle,\n          def.SEARCH_HIGHLIGHT\n        );\n      }\n    }\n    self.prevHighlights = [];\n    self.graph.forEachNode(function(node) {\n      if (nodeids.indexOf(node.id) != -1) {\n        self.highlightNode(node, toggle, def.SEARCH_HIGHLIGHT);\n        self.prevHighlights.push(node);\n      }\n    });\n  };\n\n  self.removeSelected = function() {\n    for (var i = 0; i < self.selection.length; i++) {\n      self.removeNode(self.selection[i]);\n    }\n    self.selection = [];\n  };\n\n  self.removeNodesByIds = function(nodeids) {\n    for (var i = 0; i < nodeids.length; i++) {\n      const node = self.graph.getNode(nodeids[i]);\n      if (node) {\n        self.removeNode(node);\n      }\n    }\n    self.selection = [];\n  };\n\n  self.getSelected = function() {\n    return self.selection;\n  };\n\n  self.getSelectedIds = function() {\n    return self.selection.map(n => n.id);\n  };\n};\n","var def = require(\"./imports\").default;\nvar THREE = def.THREE;\nvar Edge = def.Edge;\nvar Node = def.Node;\nvar OrbitControls = def.OrbitControls;\nvar d3 = def.d3;\nvar ee = def.ee;\n\nmodule.exports = function(self) {\n  /**\n   *  Update the position and color of the edges\n   */\n  self.updateEdges = function() {\n    self.edges.setDrawRange(0, self.drawCount + 6);\n    var total = self.drawCount + 6;\n    var positions = self.edges.attributes.position.array;\n    var colors = self.edges.attributes.color.array;\n    for (var i = 0; i < total; i += 2) {\n      if (self.lineIndices[i / 2]) {\n        if (self.lineIndices[i / 2].hide) {\n          var v1pos = self.lineObjects[i].renderData.draw_object.position;\n          var v2pos = self.lineObjects[i + 1].renderData.draw_object.position;\n          positions[i * 3] = v1pos.x;\n          positions[i * 3 + 1] = v1pos.y;\n          positions[i * 3 + 3] = v2pos.x;\n          positions[i * 3 + 4] = v2pos.y;\n          colors[i * 3] = 255;\n          colors[i * 3 + 1] = 255;\n          colors[i * 3 + 2] = 255;\n          colors[i * 3 + 3] = 255;\n          colors[i * 3 + 4] = 255;\n          colors[i * 3 + 5] = 255;\n        } else {\n          var v1pos = self.lineObjects[i].renderData.draw_object.position;\n          var v2pos = self.lineObjects[i + 1].renderData.draw_object.position;\n          var v1color = self.lineIndices[i / 2].linecolor;\n          var v2color = self.lineIndices[i / 2].linecolor;\n          positions[i * 3] = v1pos.x;\n          positions[i * 3 + 1] = v1pos.y;\n          positions[i * 3 + 3] = v2pos.x;\n          positions[i * 3 + 4] = v2pos.y;\n          colors[i * 3] = v1color.r;\n          colors[i * 3 + 1] = v1color.g;\n          colors[i * 3 + 2] = v1color.b;\n          colors[i * 3 + 3] = v2color.r;\n          colors[i * 3 + 4] = v2color.g;\n          colors[i * 3 + 5] = v2color.b;\n        }\n      }\n    }\n    self.edges.attributes.position.needsUpdate = true;\n    self.edges.attributes.color.needsUpdate = true;\n  };\n\n  /**\n   *  Update the position of the labels\n   */\n  self.updateLabels = function() {\n    var nodes = self.force.nodes();\n    for (var i = 0; i < nodes.length; i++) {\n      let thisNode = self.graph.getNode(nodes[i].id);\n      if (thisNode.renderData.textHolder != undefined) {\n        if (\n          //thisNode.renderData.textHolder.children[0].element.hideme != false &&\n          !thisNode.renderData.textHolder.children[0].element.override\n        ) {\n          thisNode.renderData.textHolder.children[0].element.hidden = true;\n        } else {\n          thisNode.renderData.textHolder.children[0].element.hidden = false;\n        }\n      }\n      thisNode.renderData.textHolder.position.x =\n        thisNode.renderData.size + thisNode.renderData.draw_object.position.x;\n      thisNode.renderData.textHolder.position.y =\n        thisNode.renderData.draw_object.position.y;\n    }\n  };\n\n  /**\n   *  Update the position and color of the edges\n   */\n  self.updateNodes = function() {\n    if (self.options.layout == \"ngraph\") {\n      self.graph.forEachNode(function(node) {\n        if (node.renderData) {\n          node.renderData.draw_object.position.x = self.force.getNodePosition(\n            node.id\n          ).x;\n          node.renderData.draw_object.position.y = self.force.getNodePosition(\n            node.id\n          ).y;\n        }\n      });\n      if (!self.paused) {\n        self.force.step();\n      }\n    } else if (self.options.layout == \"d3\") {\n      var nodes = self.force.nodes();\n      for (var i = 0; i < nodes.length; i++) {\n        nodes[i].x = Math.max(\n          -self.renderWidth,\n          Math.min(self.renderWidth, nodes[i].x)\n        );\n        nodes[i].y = Math.max(\n          -self.renderHeight,\n          Math.min(self.renderHeight, nodes[i].y)\n        );\n        let thisNode = self.graph.getNode(nodes[i].id);\n        if (thisNode && thisNode.renderData.draw_object) {\n          if (!thisNode.pinnedx) {\n            thisNode.fx = null;\n            thisNode.renderData.draw_object.children[1].visible = false;\n          } else {\n            thisNode.fx = thisNode.x;\n            thisNode.renderData.draw_object.children[1].visible = true;\n          }\n          if (!thisNode.pinnedy) {\n            thisNode.fy = null;\n          } else {\n            thisNode.fy = thisNode.y;\n          }\n          thisNode.renderData.draw_object.position.x = nodes[i].x;\n          thisNode.renderData.draw_object.position.y = nodes[i].y;\n        }\n      }\n\n      if (!self.paused) {\n        self.force.tick();\n      }\n    }\n  };\n\n  /**\n   * Restrict camera translation\n   */\n  self.updateCamera = function() {\n    self.controls.target.x -=\n      self.controls.object.position.x -\n      Math.max(\n        -self.renderWidth,\n        Math.min(self.renderWidth, self.controls.object.position.x)\n      );\n    self.controls.object.position.x -=\n      self.controls.object.position.x -\n      Math.max(\n        -self.renderWidth,\n        Math.min(self.renderWidth, self.controls.object.position.x)\n      );\n    self.controls.target.y -=\n      self.controls.object.position.y -\n      Math.max(\n        -self.renderHeight,\n        Math.min(self.renderHeight, self.controls.object.position.y)\n      );\n    self.controls.object.position.y -=\n      self.controls.object.position.y -\n      Math.max(\n        -self.renderHeight,\n        Math.min(self.renderHeight, self.controls.object.position.y)\n      );\n    self.setViewPortSize(self.ccamera);\n  };\n\n  /**\n   * Given an ngraph, update the current ngraph and add or remove inconsistent nodes\n   */\n  self.updateGraph = function(graph) {\n    var numNodesAdded = 0;\n    graph.forEachNode(function(node) {\n      var oldNode = self.graph.getNode(node.id);\n      if (!oldNode) {\n        if (!self.newNodeIds) {\n          self.newNodeIds = [];\n        }\n        self.newNodeIds.push(node.id);\n        self.addNode(node);\n        numNodesAdded += 1;\n        self.lastNode = self.graph.getNode(node.id);\n      } else {\n        self.updateNode(oldNode, node);\n      }\n    });\n    graph.forEachLink(function(link) {\n      if (!self.graph.getLink(link.fromId, link.toId)) {\n        self.addEdge(\n          self.graph.getNode(link.fromId),\n          self.graph.getNode(link.toId)\n        );\n      }\n    });\n\n    self.graph.forEachNode(function(node) {\n      var oldNode = graph.getNode(node.id);\n      if (!oldNode) {\n        self.removeNode(node);\n      }\n    });\n\n    self.force.alpha(1);\n    self.force.stop();\n\n    if (numNodesAdded > 10) {\n      // This seems unnecessary for now\n      // self.tickToStatic = true;\n      self.tickToStatic = false;\n    } else {\n      self.tickToStatic = false;\n    }\n\n    if (self.newNodeIds) {\n      // Highlight every new node.\n      self.highlightNodeIds(self.newNodeIds, true);\n\n      // Select every new node if there aren't too many of them.\n      if (self.newNodeIds.length < 10) {\n        for (let i = 0; i < self.newNodeIds.length; i++) {\n          self.selection.push(self.graph.getNode(self.newNodeIds[i]));\n        }\n        self.ee.emit(\"select-nodes\", self.selection);\n      }\n    }\n  };\n\n  /**\n   * update positions in the ngraph given a list of positions\n   */\n  self.updatePositions = function(positions) {\n    self.graph.forEachNode(function(node) {\n      var pos = positions[node.id];\n      if (pos) {\n        node.x = pos[0];\n        node.y = pos[1];\n        if (node.pinnedx) {\n          node.fx = pos[0];\n        }\n        if (node.pinnedy) {\n          node.fy = pos[1];\n        }\n      }\n    });\n  };\n\n  /**\n   * Update a node given a new node\n   */\n  self.updateNode = function(node, newNode) {\n    if (newNode.data) {\n      if (node.data.color && newNode.data.color) {\n        node.data.color = newNode.data.color;\n        node.renderData.color = node.data.color;\n        node.renderData.draw_object.material.color.set(\n          new THREE.Color(node.data.color)\n        );\n      }\n      if (newNode.data.size && newNode.data.size > 0) {\n        node.data.size = newNode.data.size;\n        node.renderData.size = newNode.data.size;\n        node.renderData.draw_object.scale.set(\n          newNode.data.size,\n          newNode.data.size,\n          1\n        );\n        var hsize = 1 + def.HIGHLIGHT_SIZE / newNode.data.size;\n        node.renderData.draw_object.children[0].scale.set(hsize, hsize, 1);\n      }\n      if (newNode.data.label) {\n        node.data.label = newNode.data.label;\n        node.renderData.label = node.data.label;\n        node.renderData.textHolder.children[0].element.childNodes[0].innerText =\n          node.data.label;\n      }\n      if (newNode.data.shape) {\n        node.data.shape = newNode.data.shape;\n        node.renderData.shape = node.data.shape;\n        self.setNodeShape(node, node.data.shape);\n      }\n    }\n  };\n};\n"],"sourceRoot":""}